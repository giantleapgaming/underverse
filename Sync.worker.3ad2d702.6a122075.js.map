{"mappings":"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AG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IA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","sources":["../../node_modules/debug/src/common.js","../../node_modules/debug/node_modules/ms/index.js","../../node_modules/protobufjs/src/index-minimal.js","../../node_modules/protobufjs/src/writer.js","../../node_modules/protobufjs/src/util/minimal.js","../../node_modules/@protobufjs/aspromise/index.js","../../node_modules/@protobufjs/base64/index.js","../../node_modules/@protobufjs/eventemitter/index.js","../../node_modules/@protobufjs/float/index.js","../../node_modules/@protobufjs/inquire/index.js","../../node_modules/@protobufjs/utf8/index.js","../../node_modules/@protobufjs/pool/index.js","../../node_modules/protobufjs/src/util/longbits.js","../../node_modules/protobufjs/src/writer_buffer.js","../../node_modules/protobufjs/src/reader.js","../../node_modules/protobufjs/src/reader_buffer.js","../../node_modules/protobufjs/src/rpc.js","../../node_modules/protobufjs/src/rpc/service.js","../../node_modules/protobufjs/src/roots.js","../../node_modules/nice-grpc-common/src/Metadata.ts","../../node_modules/nice-grpc-common/src/Status.ts","../../node_modules/nice-grpc-common/src/client/composeClientMiddleware.ts","../../node_modules/nice-grpc-common/src/client/ClientError.ts","../../node_modules/ts-error/lib/cjs.js","../../node_modules/ts-error/lib/helpers.js","../../node_modules/nice-grpc-common/src/server/composeServerMiddleware.ts","../../node_modules/nice-grpc-common/src/server/ServerError.ts","../../node_modules/nice-grpc-web/src/service-definitions/index.ts","../../node_modules/nice-grpc-web/src/service-definitions/grpc-web.ts","../../node_modules/nice-grpc-web/src/service-definitions/ts-proto.ts","../../node_modules/nice-grpc-web/src/client/channel.ts","../../node_modules/nice-grpc-web/src/client/ClientFactory.ts","../../node_modules/nice-grpc-common/src/index.ts","../../node_modules/nice-grpc-web/src/client/createBidiStreamingMethod.ts","../../node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js","../../node_modules/abort-controller-x/src/AbortError.ts","../../node_modules/nice-grpc-web/src/utils/AsyncSink.ts","../../node_modules/nice-grpc-web/src/utils/isAsyncIterable.ts","../../node_modules/nice-grpc-web/src/utils/convertMetadata.ts","../../node_modules/js-base64/base64.mjs","../../node_modules/buffer/index.js","../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/nice-grpc-web/src/client/createClientStreamingMethod.ts","../../node_modules/abort-controller-x/src/execute.ts","../../node_modules/nice-grpc-web/src/client/createServerStreamingMethod.ts","../../node_modules/nice-grpc-web/src/client/createUnaryMethod.ts","../../node_modules/mobx/src/errors.ts","../../node_modules/mobx/src/utils/global.ts","../../node_modules/mobx/src/utils/utils.ts","../../node_modules/mobx/src/api/decorators.ts","../../node_modules/mobx/src/core/atom.ts","../../node_modules/mobx/src/types/modifiers.ts","../../node_modules/mobx/src/utils/comparer.ts","../../node_modules/mobx/src/types/overrideannotation.ts","../../node_modules/mobx/src/types/actionannotation.ts","../../node_modules/mobx/src/types/flowannotation.ts","../../node_modules/mobx/src/types/computedannotation.ts","../../node_modules/mobx/src/types/observableannotation.ts","../../node_modules/mobx/src/types/autoannotation.ts","../../node_modules/mobx/src/api/observable.ts","../../node_modules/mobx/src/api/computed.ts","../../node_modules/mobx/src/core/action.ts","../../node_modules/mobx/src/types/observablevalue.ts","../../node_modules/mobx/src/core/computedvalue.ts","../../node_modules/mobx/src/core/derivation.ts","../../node_modules/mobx/src/core/globalstate.ts","../../node_modules/mobx/src/core/observable.ts","../../node_modules/mobx/src/core/reaction.ts","../../node_modules/mobx/src/core/spy.ts","../../node_modules/mobx/src/api/action.ts","../../node_modules/mobx/src/api/autorun.ts","../../node_modules/mobx/src/api/become-observed.ts","../../node_modules/mobx/src/api/configure.ts","../../node_modules/mobx/src/api/extendobservable.ts","../../node_modules/mobx/src/api/extras.ts","../../node_modules/mobx/src/api/flow.ts","../../node_modules/mobx/src/api/intercept-read.ts","../../node_modules/mobx/src/api/intercept.ts","../../node_modules/mobx/src/api/iscomputed.ts","../../node_modules/mobx/src/api/isobservable.ts","../../node_modules/mobx/src/api/object-api.ts","../../node_modules/mobx/src/api/observe.ts","../../node_modules/mobx/src/api/tojs.ts","../../node_modules/mobx/src/api/trace.ts","../../node_modules/mobx/src/api/transaction.ts","../../node_modules/mobx/src/api/when.ts","../../node_modules/mobx/src/types/dynamicobject.ts","../../node_modules/mobx/src/types/intercept-utils.ts","../../node_modules/mobx/src/types/listen-utils.ts","../../node_modules/mobx/src/api/makeObservable.ts","../../node_modules/mobx/src/types/observablearray.ts","../../node_modules/mobx/src/types/observablemap.ts","../../node_modules/mobx/src/types/observableset.ts","../../node_modules/mobx/src/types/observableobject.ts","../../node_modules/mobx/src/utils/eq.ts","../../node_modules/mobx/src/types/legacyobservablearray.ts","../../node_modules/mobx/src/types/type-utils.ts","../../node_modules/mobx/src/utils/iterable.ts","../../node_modules/mobx/src/api/annotation.ts","../../node_modules/mobx/src/mobx.ts","../../node_modules/proxy-deep/index.js","../../node_modules/rxjs/src/internal/util/isFunction.ts","../../node_modules/rxjs/src/internal/util/lift.ts","../../node_modules/rxjs/node_modules/tslib/tslib.es6.js","../../node_modules/rxjs/src/internal/util/createErrorClass.ts","../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../node_modules/rxjs/src/internal/util/arrRemove.ts","../../node_modules/rxjs/src/internal/Subscription.ts","../../node_modules/rxjs/src/internal/config.ts","../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../../node_modules/rxjs/src/internal/util/noop.ts","../../node_modules/rxjs/src/internal/NotificationFactories.ts","../../node_modules/rxjs/src/internal/util/errorContext.ts","../../node_modules/rxjs/src/internal/Subscriber.ts","../../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","../../node_modules/rxjs/src/internal/operators/map.ts","../../node_modules/rxjs/src/internal/util/isArrayLike.ts","../../node_modules/rxjs/src/internal/util/isPromise.ts","../../node_modules/rxjs/src/internal/symbol/observable.ts","../../node_modules/rxjs/src/internal/util/identity.ts","../../node_modules/rxjs/src/internal/util/pipe.ts","../../node_modules/rxjs/src/internal/Observable.ts","../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../node_modules/rxjs/src/internal/util/isIterable.ts","../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","../../node_modules/rxjs/src/internal/observable/innerFrom.ts","../../node_modules/rxjs/src/internal/util/executeSchedule.ts","../../node_modules/rxjs/src/internal/operators/mergeInternals.ts","../../node_modules/rxjs/src/internal/operators/mergeMap.ts","../../node_modules/rxjs/src/internal/operators/concatMap.ts","../../node_modules/rxjs/src/internal/scheduler/Action.ts","../../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","../../node_modules/rxjs/src/internal/Scheduler.ts","../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../../node_modules/rxjs/src/internal/scheduler/async.ts","../../node_modules/rxjs/src/internal/operators/mergeAll.ts","../../node_modules/rxjs/src/internal/operators/concatAll.ts","../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../node_modules/rxjs/src/internal/util/args.ts","../../node_modules/rxjs/src/internal/operators/observeOn.ts","../../node_modules/rxjs/src/internal/operators/subscribeOn.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","../../node_modules/rxjs/src/internal/scheduled/scheduled.ts","../../node_modules/rxjs/src/internal/observable/from.ts","../../node_modules/rxjs/src/internal/observable/concat.ts","../../node_modules/rxjs/src/internal/observable/empty.ts","../../node_modules/rxjs/src/internal/operators/take.ts","../../node_modules/rxjs/src/internal/operators/ignoreElements.ts","../../node_modules/rxjs/src/internal/operators/mapTo.ts","../../node_modules/rxjs/src/internal/operators/delayWhen.ts","../../node_modules/rxjs/src/internal/util/isDate.ts","../../node_modules/rxjs/src/internal/observable/timer.ts","../../node_modules/rxjs/src/internal/operators/delay.ts","../../node_modules/rxjs/src/internal/operators/filter.ts","../../node_modules/rxjs/src/internal/util/EmptyError.ts","../../node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","../../node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","../../node_modules/rxjs/src/internal/operators/first.ts","../../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","../../node_modules/rxjs/src/internal/observable/fromEvent.ts","../../node_modules/rxjs/src/internal/observable/of.ts","../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../node_modules/rxjs/src/internal/Subject.ts","../../node_modules/rxjs/src/internal/ReplaySubject.ts","../../node_modules/rxjs/src/internal/operators/scanInternals.ts","../../node_modules/rxjs/src/internal/operators/scan.ts","../../node_modules/rxjs/src/internal/operators/timestamp.ts","../../node_modules/@latticexyz/utils/src/arrays.ts","../../node_modules/@latticexyz/utils/src/deferred.ts","../../node_modules/@latticexyz/utils/src/mobx.ts","../../node_modules/@latticexyz/utils/src/guards.ts","../../node_modules/@latticexyz/utils/src/proxy.ts","../../node_modules/@latticexyz/utils/src/enums.ts","../../node_modules/@latticexyz/utils/src/objects.ts","../../node_modules/@latticexyz/utils/src/random.ts","../../node_modules/@latticexyz/utils/src/rx.ts","../../node_modules/@latticexyz/utils/src/uuid.ts","../../node_modules/@latticexyz/utils/src/sleep.ts","../../node_modules/@latticexyz/utils/src/promise.ts","../../node_modules/@latticexyz/utils/src/iterable.ts","../../node_modules/@latticexyz/utils/src/area.ts","../../node_modules/@latticexyz/utils/src/hash.ts","../../node_modules/@latticexyz/utils/src/worker.ts","../../node_modules/@latticexyz/utils/src/pack.ts","../../node_modules/@latticexyz/utils/src/CoordMap.ts","../../node_modules/@latticexyz/utils/src/VoxelCoordMap.ts","../../node_modules/@latticexyz/utils/src/eth.ts","../../node_modules/@latticexyz/utils/src/cubic.ts","../../node_modules/@latticexyz/utils/src/console.ts","../../node_modules/@latticexyz/utils/src/distance.ts","../../node_modules/@latticexyz/utils/src/math.ts","../../node_modules/@latticexyz/utils/src/bytes.ts","../../node_modules/rxjs/src/internal/operators/bufferTime.ts","../../node_modules/rxjs/src/internal/operators/catchError.ts","../../node_modules/rxjs/src/internal/operators/endWith.ts","../../node_modules/rxjs/src/internal/observable/range.ts","../../node_modules/@ethersproject/contracts/src.ts/index.ts","../../node_modules/@ethersproject/contracts/src.ts/_version.ts","../../node_modules/@ethersproject/constants/src.ts/addresses.ts","../../node_modules/@ethersproject/constants/src.ts/strings.ts","../../node_modules/@ethersproject/providers/src.ts/index.ts","../../node_modules/@ethersproject/networks/src.ts/index.ts","../../node_modules/@ethersproject/networks/src.ts/_version.ts","../../node_modules/bech32/index.js","../../node_modules/@ethersproject/providers/src.ts/base-provider.ts","../../node_modules/@ethersproject/providers/src.ts/_version.ts","../../node_modules/@ethersproject/providers/src.ts/formatter.ts","../../node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts","../../node_modules/@ethersproject/providers/src.ts/websocket-provider.ts","../../node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../../node_modules/@ethersproject/providers/src.ts/browser-ws.ts","../../node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts","../../node_modules/@ethersproject/providers/src.ts/ankr-provider.ts","../../node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts","../../node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts","../../node_modules/@ethersproject/providers/src.ts/fallback-provider.ts","../../node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts","../../node_modules/@ethersproject/providers/src.ts/infura-provider.ts","../../node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts","../../node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts","../../node_modules/@ethersproject/providers/src.ts/pocket-provider.ts","../../node_modules/@ethersproject/providers/src.ts/web3-provider.ts","../../node_modules/ethers/src.ts/utils.ts","../../node_modules/ethers/src.ts/_version.ts","../../node_modules/ethers/src.ts/ethers.ts","../../node_modules/ethers/src.ts/index.ts","../../node_modules/debug/src/browser.js","../../node_modules/long/umd/index.js","../../node_modules/protobufjs/minimal.js","../../node_modules/@latticexyz/services/protobuf/ts/ecs-snapshot/ecs-snapshot.ts","../../node_modules/@latticexyz/solecs/abi/Component.json","../../node_modules/@latticexyz/solecs/abi/World.json","../../node_modules/@latticexyz/services/protobuf/ts/ecs-stream/ecs-stream.ts","../../node_modules/nice-grpc-web/src/index.ts","../../node_modules/@latticexyz/network/src/types.ts","../../node_modules/@latticexyz/network/src/initCache.ts","../../node_modules/@latticexyz/network/src/utils.ts","../../node_modules/@latticexyz/network/src/debug.ts","../../node_modules/@latticexyz/network/src/workers/debug.ts","../../node_modules/@latticexyz/network/src/workers/CacheStore.ts","../../node_modules/@latticexyz/network/src/networkUtils.ts","../../node_modules/@latticexyz/network/src/provider.ts","../../node_modules/@latticexyz/network/src/createProvider.ts","../../node_modules/@latticexyz/network/src/createDecoder.ts","../../node_modules/@latticexyz/network/src/createTopics.ts","../../node_modules/@latticexyz/network/src/workers/syncUtils.ts","../../node_modules/@latticexyz/network/src/createBlockNumberStream.ts","../../node_modules/@latticexyz/network/src/workers/constants.ts","../../node_modules/@latticexyz/network/src/workers/SyncWorker.ts","../../node_modules/@latticexyz/network/src/workers/Sync.worker.ts"],"sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","/**\n * Metadata is information about a particular RPC call (such as authentication\n * details) in the form of a list of key-value pairs, where the keys are strings\n * and the values are strings or binary data.\n */\nexport type Metadata = {\n  /**\n   * Sets the value of a metadata with a given key.\n   *\n   * The value must be binary if and only if the key ends with '-bin'.\n   *\n   * Multiple string metadata values are always joined to a single string with\n   * a comma.\n   */\n  set<Key extends string>(\n    key: Key,\n    value: MetadataValue<Key> | Array<MetadataValue<Key>>,\n  ): Metadata;\n  /**\n   * Appends the value to an array of metadata with a given key.\n   *\n   * The value must be binary if and only if the key ends with '-bin'.\n   *\n   * Multiple string metadata values are always joined to a single string with\n   * a comma.\n   */\n  append<Key extends string>(key: Key, value: MetadataValue<Key>): Metadata;\n  /**\n   * Clears all values of a metadata with a given key.\n   */\n  delete(key: string): void;\n  /**\n   * Returns the value of a metadata with a given key.\n   *\n   * If there are multiple binary values, the first one is returned.\n   *\n   * Multiple string metadata values are always joined to a single string with\n   * a comma.\n   */\n  get<Key extends string>(key: Key): MetadataValue<Key> | undefined;\n  /**\n   * Returns an array of all the values of a metadata with a given key.\n   *\n   * Multiple string metadata values are always joined to a single string with\n   * a comma.\n   */\n  getAll<Key extends string>(key: Key): Array<MetadataValue<Key>>;\n  /**\n   * Checks whether there is at least one value of a metadata with a given key.\n   */\n  has(key: string): boolean;\n  [Symbol.iterator](): IterableIterator<[string, Array<string | Uint8Array>]>;\n};\n\nexport type MetadataValue<Key extends string> = string extends Key\n  ? string | Uint8Array\n  : Lowercase<Key> extends `${string}-bin`\n  ? Uint8Array\n  : string;\n\nexport type MetadataInit =\n  | Metadata\n  | Iterable<[string, string | Uint8Array | Array<string | Uint8Array>]>\n  | Record<string, string | Uint8Array | Array<string | Uint8Array>>;\n\nexport type MetadataConstructor = {\n  new (init?: MetadataInit): Metadata;\n  (init?: MetadataInit): Metadata;\n};\n\nexport const Metadata = function Metadata(init?: MetadataInit): Metadata {\n  const data = new Map<string, Array<string | Uint8Array>>();\n\n  const metadata = {\n    set(key: string, value: string | Uint8Array | Array<string | Uint8Array>) {\n      key = normalizeKey(key);\n\n      if (Array.isArray(value)) {\n        if (value.length === 0) {\n          data.delete(key);\n        } else {\n          for (const item of value) {\n            validate(key, item);\n          }\n\n          data.set(key, key.endsWith('-bin') ? value : [value.join(', ')]);\n        }\n      } else {\n        validate(key, value);\n\n        data.set(key, [value]);\n      }\n\n      return metadata;\n    },\n\n    append(key: string, value: string | Uint8Array) {\n      key = normalizeKey(key);\n\n      validate(key, value);\n\n      let values = data.get(key);\n\n      if (values == null) {\n        values = [];\n        data.set(key, values);\n      }\n\n      values.push(value);\n\n      if (!key.endsWith('-bin')) {\n        data.set(key, [values.join(', ')]);\n      }\n\n      return metadata;\n    },\n\n    delete(key: string) {\n      key = normalizeKey(key);\n\n      data.delete(key);\n    },\n\n    get<Key extends string>(key: string): MetadataValue<Key> | undefined {\n      key = normalizeKey(key);\n\n      return data.get(key)?.[0] as MetadataValue<Key> | undefined;\n    },\n\n    getAll<Key extends string>(key: string): Array<MetadataValue<Key>> {\n      key = normalizeKey(key);\n\n      return (data.get(key) ?? []) as Array<MetadataValue<Key>>;\n    },\n\n    has(key: string) {\n      key = normalizeKey(key);\n\n      return data.has(key);\n    },\n\n    [Symbol.iterator]() {\n      return data[Symbol.iterator]();\n    },\n  };\n\n  if (init != null) {\n    const entries = isIterable(init) ? init : Object.entries(init);\n\n    for (const [key, value] of entries) {\n      metadata.set(key, value);\n    }\n  }\n\n  return metadata;\n} as MetadataConstructor;\n\nfunction normalizeKey(key: string): string {\n  return key.toLowerCase();\n}\n\nfunction validate(key: string, value: string | Uint8Array): void {\n  if (!/^[0-9a-z_.-]+$/.test(key)) {\n    throw new Error(`Metadata key '${key}' contains illegal characters`);\n  }\n\n  if (key.endsWith('-bin')) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(\n        `Metadata key '${key}' ends with '-bin', thus it must have binary value`,\n      );\n    }\n  } else {\n    if (typeof value !== 'string') {\n      throw new Error(\n        `Metadata key '${key}' doesn't end with '-bin', thus it must have string value`,\n      );\n    }\n\n    if (!/^[ -~]*$/.test(value)) {\n      throw new Error(\n        `Metadata value '${value}' of key '${key}' contains illegal characters`,\n      );\n    }\n  }\n}\n\nfunction isIterable(value: object): value is Iterable<unknown> {\n  return Symbol.iterator in value;\n}\n","/**\n * gRPC status code.\n *\n * See https://grpc.github.io/grpc/core/md_doc_statuscodes.html.\n */\nexport enum Status {\n  /**\n   * Not an error; returned on success.\n   */\n  OK = 0,\n  /**\n   * The operation was cancelled, typically by the caller.\n   */\n  CANCELLED = 1,\n  /**\n   * Unknown error.\n   *\n   * For example, this error may be returned when a `Status` value received from\n   * another address space belongs to an error space that is not known in this\n   * address space.\n   *\n   * Also errors raised by APIs that do not return enough error information may\n   * be converted to this error.\n   */\n  UNKNOWN = 2,\n  /**\n   * The client specified an invalid argument.\n   *\n   * Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT`\n   * indicates arguments that are problematic regardless of the state of the\n   * system (e.g., a malformed file name).\n   */\n  INVALID_ARGUMENT = 3,\n  /**\n   * The deadline expired before the operation could complete.\n   *\n   * For operations that change the state of the system, this error may be\n   * returned even if the operation has completed successfully.\n   *\n   * For example, a successful response from a server could have been delayed\n   * long enough for the deadline to expire.\n   */\n  DEADLINE_EXCEEDED = 4,\n  /**\n   * Some requested entity (e.g., file or directory) was not found.\n   *\n   * Note to server developers: if a request is denied for an entire class of\n   * users, such as gradual feature rollout or undocumented allowlist,\n   * `NOT_FOUND` may be used. If a request is denied for some users within a\n   * class of users, such as user-based access control, `PERMISSION_DENIED` must\n   * be used.\n   */\n  NOT_FOUND = 5,\n  /**\n   * The entity that a client attempted to create (e.g., file or directory)\n   * already exists.\n   */\n  ALREADY_EXISTS = 6,\n  /**\n   * The caller does not have permission to execute the specified operation.\n   *\n   * `PERMISSION_DENIED` must not be used for rejections caused by exhausting\n   * some resource (use `RESOURCE_EXHAUSTED` instead for those errors).\n   * `PERMISSION_DENIED` must not be used if the caller can not be identified\n   * (use `UNAUTHENTICATED` instead for those errors).\n   *\n   * This error code does not imply the request is valid or the requested entity\n   * exists or satisfies other pre-conditions.\n   */\n  PERMISSION_DENIED = 7,\n  /**\n   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n   * entire file system is out of space.\n   */\n  RESOURCE_EXHAUSTED = 8,\n  /**\n   * The operation was rejected because the system is not in a state required\n   * for the operation's execution.\n   *\n   * For example, the directory to be deleted is non-empty, an rmdir operation\n   * is applied to a non-directory, etc.\n   *\n   * Service implementors can use the following guidelines to decide between\n   * `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n   *\n   *   (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n   *   (b) Use `ABORTED` if the client should retry at a higher level (e.g.,\n   *       when a client-specified test-and-set fails, indicating the client\n   *       should restart a read-modify-write sequence).\n   *   (c) Use `FAILED_PRECONDITION` if the client should not retry until the\n   *       system state has been explicitly fixed. E.g., if an \"rmdir\" fails\n   *       because the directory is non-empty, `FAILED_PRECONDITION` should be\n   *       returned since the client should not retry unless the files are\n   *       deleted from the directory.\n   */\n  FAILED_PRECONDITION = 9,\n  /**\n   * The operation was aborted, typically due to a concurrency issue such as a\n   * sequencer check failure or transaction abort.\n   *\n   * See the guidelines above for deciding between `FAILED_PRECONDITION`,\n   * `ABORTED`, and `UNAVAILABLE`.\n   */\n  ABORTED = 10,\n  /**\n   * The operation was attempted past the valid range.\n   *\n   * E.g., seeking or reading past end-of-file.\n   *\n   * Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed\n   * if the system state changes. For example, a 32-bit file system will\n   * generate `INVALID_ARGUMENT` if asked to read at an offset that is not in\n   * the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read\n   * from an offset past the current file size.\n   *\n   * There is a fair bit of overlap between `FAILED_PRECONDITION` and\n   * `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error)\n   * when it applies so that callers who are iterating through a space can\n   * easily look for an `OUT_OF_RANGE` error to detect when they are done.\n   */\n  OUT_OF_RANGE = 11,\n  /**\n   * The operation is not implemented or is not supported/enabled in this\n   * service.\n   */\n  UNIMPLEMENTED = 12,\n  /**\n   * Internal errors.\n   *\n   * This means that some invariants expected by the underlying system have been\n   * broken. This error code is reserved for serious errors.\n   */\n  INTERNAL = 13,\n  /**\n   * The service is currently unavailable.\n   *\n   * This is most likely a transient condition, which can be corrected by\n   * retrying with a backoff.\n   *\n   * Note that it is not always safe to retry non-idempotent operations.\n   */\n  UNAVAILABLE = 14,\n  /**\n   * Unrecoverable data loss or corruption.\n   */\n  DATA_LOSS = 15,\n  /**\n   * The request does not have valid authentication credentials for the\n   * operation.\n   */\n  UNAUTHENTICATED = 16,\n}\n","import {CallOptions} from './CallOptions';\nimport {ClientMiddleware, ClientMiddlewareCall} from './ClientMiddleware';\n\nexport function composeClientMiddleware<Ext1, Ext2, RequiredCallOptionsExt>(\n  middleware1: ClientMiddleware<Ext1, RequiredCallOptionsExt>,\n  middleware2: ClientMiddleware<Ext2, RequiredCallOptionsExt & Ext1>,\n): ClientMiddleware<Ext1 & Ext2, RequiredCallOptionsExt> {\n  return <Request, Response>(\n    call: ClientMiddlewareCall<\n      Request,\n      Response,\n      Ext1 & Ext2 & RequiredCallOptionsExt\n    >,\n    options: CallOptions & Partial<Ext1 & Ext2 & RequiredCallOptionsExt>,\n  ) => {\n    return middleware2<Request, Response>(\n      {\n        ...call,\n        next: (request, options2) => {\n          return middleware1<Request, Response>(\n            {...call, request} as any,\n            options2,\n          ) as any;\n        },\n      },\n      options,\n    );\n  };\n}\n","import {ExtendableError} from 'ts-error';\nimport {Status} from '../Status';\n\n/**\n * Represents gRPC errors returned from client calls.\n */\nexport class ClientError extends ExtendableError {\n  /**\n   * Path of the client call.\n   *\n   * Has format `/package.Service/Method`.\n   */\n  path: string;\n  /**\n   * Status code reported by the server.\n   */\n  code: Status;\n  /**\n   * Status message reported by the server.\n   */\n  details: string;\n\n  constructor(path: string, code: Status, details: string) {\n    super(`${path} ${Status[code]}: ${details}`);\n\n    this.path = path;\n    this.code = code;\n    this.details = details;\n\n    this.name = 'ClientError';\n    Object.defineProperty(this, '@@nice-grpc', {\n      value: true,\n    });\n    Object.defineProperty(this, '@@nice-grpc:ClientError', {\n      value: true,\n    });\n  }\n\n  static [Symbol.hasInstance](instance: any) {\n    // allow instances of ClientError from different versions of nice-grpc\n    // to work with `instanceof ClientError`\n\n    if (this !== ClientError) {\n      return this.prototype.isPrototypeOf(instance);\n    }\n\n    return (\n      typeof instance === 'object' &&\n      instance !== null &&\n      (instance.constructor === ClientError ||\n        instance['@@nice-grpc:ClientError'] === true ||\n        (instance.name === 'ClientError' && instance['@@nice-grpc'] === true))\n    );\n  }\n}\n","\"use strict\";\nexports.__esModule = undefined;\nexports.__esModule = true;\n\nvar helpers = require(\"./helpers\");\nvar setPrototypeOf = helpers.setPrototypeOf;\nvar getPrototypeOf = helpers.getPrototypeOf;\nvar defineProperty = helpers.defineProperty;\nvar objectCreate = helpers.objectCreate;\n\n// Small test for IE6-8, which checks if the environment prints errors \"nicely\"\n// If not, a toString() method to be added to the error objects with formatting\n// like in more modern browsers\nvar uglyErrorPrinting = new Error().toString() === \"[object Error]\";\n\n// For compatibility\nvar extendableErrorName = \"\";\n\nfunction ExtendableError(message) {\n  // Get the constructor\n  var originalConstructor = this.constructor;\n  // Get the constructor name from the non-standard name property. If undefined\n  // (on old IEs), it uses the string representation of the function to extract\n  // the name. This should work in all cases, except for directly instantiated\n  // ExtendableError objects, for which the name of the ExtendableError class /\n  // function is used\n  var constructorName =\n    originalConstructor.name ||\n    (function () {\n      var constructorNameMatch = originalConstructor\n        .toString()\n        .match(/^function\\s*([^\\s(]+)/);\n      return constructorNameMatch === null\n        ? extendableErrorName\n          ? extendableErrorName\n          : \"Error\"\n        : constructorNameMatch[1];\n    })();\n  // If the constructor name is \"Error\", ...\n  var constructorNameIsError = constructorName === \"Error\";\n  // change it to the name of the ExtendableError class / function\n  var name = constructorNameIsError ? extendableErrorName : constructorName;\n\n  // Obtain a new Error instance. This also sets the message property already.\n  var instance = Error.apply(this, arguments);\n\n  // Set the prototype of this to the prototype of instance\n  setPrototypeOf(instance, getPrototypeOf(this));\n\n  // On old IEs, the instance will not extend our subclasses this way. The fix is to use this from the function call instead.\n  if (\n    !(instance instanceof originalConstructor) ||\n    !(instance instanceof ExtendableError)\n  ) {\n    var instance = this;\n    Error.apply(this, arguments);\n    defineProperty(instance, \"message\", {\n      configurable: true,\n      enumerable: false,\n      value: message,\n      writable: true,\n    });\n  }\n\n  // define the name property\n  defineProperty(instance, \"name\", {\n    configurable: true,\n    enumerable: false,\n    value: name,\n    writable: true,\n  });\n\n  // Use Error.captureStackTrace on V8 to capture the proper stack trace excluding any of our error classes\n  if (Error.captureStackTrace) {\n    // prettier-ignore\n    Error.captureStackTrace(\n      instance,\n      constructorNameIsError ? ExtendableError : originalConstructor\n    );\n  }\n  // instance.stack can still be undefined, in which case the best solution is to create a new Error object and get it from there\n  if (instance.stack === undefined) {\n    var err = new Error(message);\n    err.name = instance.name;\n    instance.stack = err.stack;\n  }\n\n  // If the environment does not have a proper string representation (IE), provide an alternative toString()\n  if (uglyErrorPrinting) {\n    defineProperty(instance, \"toString\", {\n      configurable: true,\n      enumerable: false,\n      value: function toString() {\n        return (\n          (this.name || \"Error\") +\n          (typeof this.message === \"undefined\" ? \"\" : \": \" + this.message)\n        );\n      },\n      writable: true,\n    });\n  }\n\n  // We're done!\n  return instance;\n}\n\n// Get the name of the ExtendableError function or use the string literal\nextendableErrorName = ExtendableError.name || \"ExtendableError\";\n\n// Set the prototype of ExtendableError to an Error object\nExtendableError.prototype = objectCreate(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true,\n  },\n});\n\n// Export\nexports.ExtendableError = ExtendableError;\nexports[\"default\"] = exports.ExtendableError;\n","\"use strict\";\nexports.__esModule = undefined;\nexports.__esModule = true;\n\n// Misc helpers\n\nvar objectSetPrototypeOfIsDefined = typeof Object.setPrototypeOf === \"function\";\nvar objectGetPrototypeOfIsDefined = typeof Object.getPrototypeOf === \"function\";\nvar objectDefinePropertyIsDefined = typeof Object.defineProperty === \"function\";\nvar objectCreateIsDefined = typeof Object.create === \"function\";\nvar objectHasOwnPropertyIsDefined =\n  typeof Object.prototype.hasOwnProperty === \"function\";\n\nvar setPrototypeOf = function setPrototypeOf(target, prototype) {\n  if (objectSetPrototypeOfIsDefined) {\n    Object.setPrototypeOf(target, prototype);\n  } else {\n    target.__proto__ = prototype;\n  }\n};\nexports.setPrototypeOf = setPrototypeOf;\n\nvar getPrototypeOf = function getPrototypeOf(target) {\n  if (objectGetPrototypeOfIsDefined) {\n    return Object.getPrototypeOf(target);\n  } else {\n    return target.__proto__ || target.prototype;\n  }\n};\nexports.getPrototypeOf = getPrototypeOf;\n\n// Object.defineProperty exists in IE8, but the implementation is buggy, so we\n// need to test if the call fails, and, if so, set a flag to use the shim, as if\n// the function were not defined. When this error is caught the first time, the\n// function is called again recursively, after the flag is set, so the desired\n// effect is achieved anyway.\nvar ie8ObjectDefinePropertyBug = false;\nvar defineProperty = function defineProperty(target, name, propertyDescriptor) {\n  if (objectDefinePropertyIsDefined && !ie8ObjectDefinePropertyBug) {\n    try {\n      Object.defineProperty(target, name, propertyDescriptor);\n    } catch (e) {\n      ie8ObjectDefinePropertyBug = true;\n      defineProperty(target, name, propertyDescriptor);\n    }\n  } else {\n    target[name] = propertyDescriptor.value;\n  }\n};\nexports.defineProperty = defineProperty;\n\nvar hasOwnProperty = function hasOwnProperty(target, name) {\n  if (objectHasOwnPropertyIsDefined) {\n    return target.hasOwnProperty(target, name);\n  } else {\n    return target[name] === undefined;\n  }\n};\nexports.hasOwnProperty = hasOwnProperty;\n\nvar objectCreate = function objectCreate(prototype, propertyDescriptors) {\n  if (objectCreateIsDefined) {\n    return Object.create(prototype, propertyDescriptors);\n  } else {\n    var F = function F() {};\n    F.prototype = prototype;\n    var result = new F();\n    if (typeof propertyDescriptors === \"undefined\") {\n      return result;\n    }\n    if (typeof propertyDescriptors === \"null\") {\n      throw new Error(\"PropertyDescriptors must not be null.\");\n    }\n    if (typeof propertyDescriptors === \"object\") {\n      for (var key in propertyDescriptors) {\n        if (hasOwnProperty(propertyDescriptors, key)) {\n          result[key] = propertyDescriptors[key].value;\n        }\n      }\n    }\n\n    return result;\n  }\n};\nexports.objectCreate = objectCreate;\n","import {CallContext} from './CallContext';\nimport {ServerMiddleware, ServerMiddlewareCall} from './ServerMiddleware';\n\nexport function composeServerMiddleware<Ext1, Ext2, RequiredCallContextExt>(\n  middleware1: ServerMiddleware<Ext1, RequiredCallContextExt>,\n  middleware2: ServerMiddleware<Ext2, RequiredCallContextExt & Ext1>,\n): ServerMiddleware<Ext1 & Ext2, RequiredCallContextExt> {\n  return <Request, Response>(\n    call: ServerMiddlewareCall<\n      Request,\n      Response,\n      Ext1 & Ext2 & RequiredCallContextExt\n    >,\n    context: CallContext & RequiredCallContextExt,\n  ) => {\n    return middleware1<Request, Response>(\n      {\n        ...call,\n        next: (request, context1) => {\n          return middleware2<Request, Response>(\n            {...call, request} as any,\n            context1,\n          ) as any;\n        },\n      },\n      context,\n    );\n  };\n}\n","import {ExtendableError} from 'ts-error';\nimport {Status} from '../Status';\n\n/**\n * Service implementations may throw this error to report gRPC errors to\n * clients.\n */\nexport class ServerError extends ExtendableError {\n  /**\n   * Status code to report to the client.\n   */\n  code: Status;\n  /**\n   * Status message to report to the client.\n   */\n  details: string;\n\n  constructor(code: Status, details: string) {\n    super(`${Status[code]}: ${details}`);\n\n    this.code = code;\n    this.details = details;\n\n    this.name = 'ServerError';\n    Object.defineProperty(this, '@@nice-grpc', {\n      value: true,\n    });\n    Object.defineProperty(this, '@@nice-grpc:ServerError', {\n      value: true,\n    });\n  }\n\n  static [Symbol.hasInstance](instance: any) {\n    // allow instances of ServerError from different versions of nice-grpc\n    // to work with `instanceof ServerError`\n\n    if (this !== ServerError) {\n      return this.prototype.isPrototypeOf(instance);\n    }\n\n    return (\n      typeof instance === 'object' &&\n      instance !== null &&\n      (instance.constructor === ServerError ||\n        instance['@@nice-grpc:ServerError'] === true ||\n        (instance.name === 'ServerError' && instance['@@nice-grpc'] === true))\n    );\n  }\n}\n","import {grpc} from '@improbable-eng/grpc-web';\nimport {\n  fromGrpcWebServiceDefinition,\n  FromGrpcWebServiceDefinition,\n  isGrpcWebServiceDefinition,\n} from './grpc-web';\nimport {\n  fromTsProtoServiceDefinition,\n  FromTsProtoServiceDefinition,\n  isTsProtoServiceDefinition,\n  TsProtoServiceDefinition,\n} from './ts-proto';\n\nexport type ServiceDefinition = {\n  [method: string]: AnyMethodDefinition;\n};\n\nexport type MethodDefinition<\n  RequestIn,\n  RequestOut,\n  ResponseIn,\n  ResponseOut,\n  RequestStream extends boolean = boolean,\n  ResponseStream extends boolean = boolean,\n> = {\n  path: string;\n  requestStream: RequestStream;\n  responseStream: ResponseStream;\n  requestSerialize(value: RequestIn): Uint8Array;\n  requestDeserialize(bytes: Uint8Array): RequestOut;\n  responseSerialize(value: ResponseIn): Uint8Array;\n  responseDeserialize(bytes: Uint8Array): ResponseOut;\n  options: {\n    idempotencyLevel?: 'IDEMPOTENT' | 'NO_SIDE_EFFECTS';\n  };\n};\n\nexport type AnyMethodDefinition = MethodDefinition<any, any, any, any>;\n\nexport type CompatServiceDefinition =\n  | ServiceDefinition\n  | grpc.ServiceDefinition\n  | TsProtoServiceDefinition;\n\nexport type NormalizedServiceDefinition<\n  Service extends CompatServiceDefinition,\n> = Service extends ServiceDefinition\n  ? Service\n  : Service extends grpc.ServiceDefinition\n  ? FromGrpcWebServiceDefinition<Service>\n  : Service extends TsProtoServiceDefinition\n  ? FromTsProtoServiceDefinition<Service>\n  : never;\n\n/** @internal */\nexport function normalizeServiceDefinition(\n  definition: CompatServiceDefinition,\n): ServiceDefinition {\n  if (isGrpcWebServiceDefinition(definition)) {\n    return fromGrpcWebServiceDefinition(definition);\n  } else if (isTsProtoServiceDefinition(definition)) {\n    return fromTsProtoServiceDefinition(definition);\n  } else {\n    return definition;\n  }\n}\n\n/** @internal */\nexport function toGrpcWebMethodDefinition(\n  definition: AnyMethodDefinition,\n): grpc.MethodDefinition<any, any> {\n  const [, serviceName, methodName] = definition.path.split('/');\n\n  return {\n    service: {\n      serviceName,\n    },\n    methodName,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    requestType: class {\n      constructor() {\n        throw new Error('Unexpected instantiation');\n      }\n\n      static deserializeBinary(bytes: Uint8Array) {\n        return definition.requestDeserialize(bytes);\n      }\n    },\n    responseType: class {\n      constructor() {\n        throw new Error('Unexpected instantiation');\n      }\n\n      static deserializeBinary(bytes: Uint8Array) {\n        return definition.responseDeserialize(bytes);\n      }\n    },\n  };\n}\n","import {grpc} from '@improbable-eng/grpc-web';\nimport {CompatServiceDefinition, MethodDefinition, ServiceDefinition} from '.';\n\nexport type FromGrpcWebServiceDefinition<\n  Service extends grpc.ServiceDefinition,\n> = {\n  [M in GrpcWebServiceMethodKeys<Service> as Uncapitalize<M>]: FromGrpcWebMethodDefinition<\n    Service[M]\n  >;\n};\n\nexport type GrpcWebServiceMethodKeys<Service extends grpc.ServiceDefinition> = {\n  [K in keyof Service]: Service[K] extends grpc.MethodDefinition<any, any>\n    ? K\n    : never;\n}[keyof Service] &\n  string;\n\nexport type FromGrpcWebMethodDefinition<Method> =\n  Method extends grpc.MethodDefinition<infer Request, infer Response>\n    ? MethodDefinition<\n        Request,\n        Request,\n        Response,\n        Response,\n        Method['requestStream'],\n        Method['responseStream']\n      >\n    : never;\n\nexport function fromGrpcWebServiceDefinition(\n  definition: grpc.ServiceDefinition,\n): ServiceDefinition {\n  const result: ServiceDefinition = {};\n\n  for (const [key, value] of Object.entries(definition)) {\n    if (key === 'serviceName') {\n      continue;\n    }\n\n    const method = value as grpc.MethodDefinition<any, any>;\n\n    result[uncapitalize(key)] = {\n      path: `/${definition.serviceName}/${key}`,\n      requestStream: method.requestStream,\n      responseStream: method.responseStream,\n      requestDeserialize: method.requestType.deserializeBinary,\n      requestSerialize: (value: grpc.ProtobufMessage) =>\n        value.serializeBinary(),\n      responseDeserialize: method.responseType.deserializeBinary,\n      responseSerialize: (value: grpc.ProtobufMessage) =>\n        value.serializeBinary(),\n      options: {},\n    };\n  }\n\n  return result;\n}\n\nexport function isGrpcWebServiceDefinition(\n  definition: CompatServiceDefinition,\n): definition is grpc.ServiceDefinition {\n  return 'prototype' in definition;\n}\n\nfunction uncapitalize(value: string): string {\n  if (value.length === 0) {\n    return value;\n  }\n\n  return value[0].toLowerCase() + value.slice(1);\n}\n","import {CompatServiceDefinition, MethodDefinition, ServiceDefinition} from '.';\n\nexport type TsProtoServiceDefinition = {\n  name: string;\n  fullName: string;\n  methods: {\n    [method: string]: TsProtoMethodDefinition<any, any>;\n  };\n};\n\nexport type TsProtoMethodDefinition<Request, Response> = {\n  name: string;\n  requestType: TsProtoMessageType<Request>;\n  requestStream: boolean;\n  responseType: TsProtoMessageType<Response>;\n  responseStream: boolean;\n  options: {\n    idempotencyLevel?: 'IDEMPOTENT' | 'NO_SIDE_EFFECTS';\n  };\n};\n\nexport type TsProtoMessageType<Message> = {\n  encode(message: Message): ProtobufJsWriter;\n  decode(input: Uint8Array): Message;\n  fromPartial?(object: unknown): Message;\n};\n\nexport type ProtobufJsWriter = {\n  finish(): Uint8Array;\n};\n\nexport type TsProtoMessageIn<Type extends TsProtoMessageType<any>> =\n  Type['fromPartial'] extends Function\n    ? Parameters<Type['fromPartial']>[0]\n    : Type extends TsProtoMessageType<infer Message>\n    ? Message\n    : never;\n\nexport type FromTsProtoServiceDefinition<\n  Service extends TsProtoServiceDefinition,\n> = {\n  [M in keyof Service['methods']]: FromTsProtoMethodDefinition<\n    Service['methods'][M]\n  >;\n};\n\nexport type FromTsProtoMethodDefinition<Method> =\n  Method extends TsProtoMethodDefinition<infer Request, infer Response>\n    ? MethodDefinition<\n        TsProtoMessageIn<Method['requestType']>,\n        Request,\n        TsProtoMessageIn<Method['responseType']>,\n        Response,\n        Method['requestStream'],\n        Method['responseStream']\n      >\n    : never;\n\nexport function fromTsProtoServiceDefinition(\n  definition: TsProtoServiceDefinition,\n): ServiceDefinition {\n  const result: ServiceDefinition = {};\n\n  for (const [key, method] of Object.entries(definition.methods)) {\n    const requestEncode = method.requestType.encode;\n    const requestFromPartial = method.requestType.fromPartial;\n    const responseEncode = method.responseType.encode;\n    const responseFromPartial = method.responseType.fromPartial;\n\n    result[key] = {\n      path: `/${definition.fullName}/${method.name}`,\n      requestStream: method.requestStream,\n      responseStream: method.responseStream,\n      requestDeserialize: method.requestType.decode,\n      requestSerialize:\n        requestFromPartial != null\n          ? value => requestEncode(requestFromPartial(value)).finish()\n          : value => requestEncode(value).finish(),\n      responseDeserialize: method.responseType.decode,\n      responseSerialize:\n        responseFromPartial != null\n          ? value => responseEncode(responseFromPartial(value)).finish()\n          : value => responseEncode(value).finish(),\n      options: method.options,\n    };\n  }\n\n  return result;\n}\n\nexport function isTsProtoServiceDefinition(\n  definition: CompatServiceDefinition,\n): definition is TsProtoServiceDefinition {\n  return (\n    'name' in definition && 'fullName' in definition && 'methods' in definition\n  );\n}\n","import {grpc} from '@improbable-eng/grpc-web';\n\nexport type Channel = {\n  address: string;\n  transport?: grpc.TransportFactory;\n};\n\nexport function createChannel(\n  address: string,\n  transport?: grpc.TransportFactory,\n): Channel {\n  return {address, transport};\n}\n","import {\n  CallOptions,\n  ClientMiddleware,\n  composeClientMiddleware,\n} from 'nice-grpc-common';\nimport {\n  AnyMethodDefinition,\n  CompatServiceDefinition,\n  NormalizedServiceDefinition,\n  normalizeServiceDefinition,\n  ServiceDefinition,\n} from '../service-definitions';\nimport {Channel} from './channel';\nimport {Client} from './Client';\nimport {createBidiStreamingMethod} from './createBidiStreamingMethod';\nimport {createClientStreamingMethod} from './createClientStreamingMethod';\nimport {createServerStreamingMethod} from './createServerStreamingMethod';\nimport {createUnaryMethod} from './createUnaryMethod';\n\nexport type ClientFactory<CallOptionsExt = {}> = {\n  use<Ext>(\n    middleware: ClientMiddleware<Ext, CallOptionsExt>,\n  ): ClientFactory<CallOptionsExt & Ext>;\n\n  create<Service extends CompatServiceDefinition>(\n    definition: Service,\n    channel: Channel,\n    defaultCallOptions?: DefaultCallOptions<\n      NormalizedServiceDefinition<Service>,\n      CallOptionsExt\n    >,\n  ): Client<Service, CallOptionsExt>;\n};\n\nexport type DefaultCallOptions<\n  Service extends ServiceDefinition,\n  CallOptionsExt = {},\n> = {\n  [K in keyof Service | '*']?: CallOptions & Partial<CallOptionsExt>;\n};\n\nexport function createClientFactory(): ClientFactory {\n  return createClientFactoryWithMiddleware();\n}\n\nexport function createClient<Service extends CompatServiceDefinition>(\n  definition: Service,\n  channel: Channel,\n  defaultCallOptions?: DefaultCallOptions<NormalizedServiceDefinition<Service>>,\n): Client<Service> {\n  return createClientFactory().create(definition, channel, defaultCallOptions);\n}\n\nfunction createClientFactoryWithMiddleware<CallOptionsExt = {}>(\n  middleware?: ClientMiddleware<CallOptionsExt>,\n): ClientFactory<CallOptionsExt> {\n  return {\n    use<Ext>(newMiddleware: ClientMiddleware<Ext, CallOptionsExt>) {\n      return createClientFactoryWithMiddleware(\n        middleware == null\n          ? (newMiddleware as ClientMiddleware<Ext & CallOptionsExt>)\n          : composeClientMiddleware(middleware, newMiddleware),\n      );\n    },\n\n    create<Service extends CompatServiceDefinition>(\n      definition: Service,\n      channel: Channel,\n      defaultCallOptions: DefaultCallOptions<\n        NormalizedServiceDefinition<Service>,\n        CallOptionsExt\n      > = {},\n    ) {\n      type NormalizedService = NormalizedServiceDefinition<Service>;\n\n      const client = {} as {\n        [K in keyof NormalizedService]: Function;\n      };\n\n      const methodEntries = Object.entries(\n        normalizeServiceDefinition(definition),\n      ) as Array<[keyof NormalizedService, AnyMethodDefinition]>;\n\n      for (const [methodName, methodDefinition] of methodEntries) {\n        const defaultOptions = {\n          ...defaultCallOptions['*'],\n          ...defaultCallOptions[methodName],\n        } as CallOptions;\n\n        if (!methodDefinition.requestStream) {\n          if (!methodDefinition.responseStream) {\n            client[methodName] = createUnaryMethod(\n              methodDefinition,\n              channel,\n              middleware,\n              defaultOptions,\n            );\n          } else {\n            client[methodName] = createServerStreamingMethod(\n              methodDefinition,\n              channel,\n              middleware,\n              defaultOptions,\n            );\n          }\n        } else {\n          if (!methodDefinition.responseStream) {\n            client[methodName] = createClientStreamingMethod(\n              methodDefinition,\n              channel,\n              middleware,\n              defaultOptions,\n            );\n          } else {\n            client[methodName] = createBidiStreamingMethod(\n              methodDefinition,\n              channel,\n              middleware,\n              defaultOptions,\n            );\n          }\n        }\n      }\n\n      return client as Client<Service>;\n    },\n  };\n}\n","export * from './Metadata';\nexport * from './Status';\nexport * from './MethodDescriptor';\n\nexport * from './client/CallOptions';\nexport * from './client/ClientMiddleware';\nexport * from './client/composeClientMiddleware';\nexport * from './client/ClientError';\n\nexport * from './server/CallContext';\nexport * from './server/ServerMiddleware';\nexport * from './server/composeServerMiddleware';\nexport * from './server/ServerError';\n","import {\n  CallOptions,\n  ClientMiddleware,\n  MethodDescriptor,\n  ClientError,\n  Metadata,\n  Status,\n} from 'nice-grpc-common';\nimport {grpc} from '@improbable-eng/grpc-web';\nimport {AbortError, isAbortError, throwIfAborted} from 'abort-controller-x';\nimport {AsyncSink} from '../utils/AsyncSink';\nimport {\n  AnyMethodDefinition,\n  MethodDefinition,\n  toGrpcWebMethodDefinition,\n} from '../service-definitions';\nimport {isAsyncIterable} from '../utils/isAsyncIterable';\nimport {BidiStreamingClientMethod} from './Client';\nimport {\n  convertMetadataFromGrpcWeb,\n  convertMetadataToGrpcWeb,\n} from '../utils/convertMetadata';\nimport {Channel} from './channel';\n\n/** @internal */\nexport function createBidiStreamingMethod<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  middleware: ClientMiddleware | undefined,\n  defaultOptions: CallOptions,\n): BidiStreamingClientMethod<Request, Response> {\n  const grpcMethodDefinition = toGrpcWebMethodDefinition(definition);\n\n  const methodDescriptor: MethodDescriptor = {\n    path: definition.path,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    options: definition.options,\n  };\n\n  async function* bidiStreamingMethod(\n    request: AsyncIterable<Request>,\n    options: CallOptions,\n  ): AsyncGenerator<Response, void, undefined> {\n    if (!isAsyncIterable(request)) {\n      throw new Error(\n        'A middleware passed invalid request to next(): expected a single message for bidirectional streaming method',\n      );\n    }\n\n    const {\n      metadata = Metadata(),\n      signal = new AbortController().signal,\n      onHeader,\n      onTrailer,\n    } = options;\n\n    const pipeAbortController = new AbortController();\n\n    const sink = new AsyncSink<Response>();\n\n    const client = grpc.client<any, any, any>(grpcMethodDefinition, {\n      host: channel.address,\n      transport: channel.transport,\n    });\n\n    client.onHeaders(headers => {\n      onHeader?.(convertMetadataFromGrpcWeb(headers));\n    });\n\n    client.onMessage(message => {\n      sink.write(message);\n    });\n\n    client.onEnd((code, message, trailers) => {\n      onTrailer?.(convertMetadataFromGrpcWeb(trailers));\n\n      if (code === grpc.Code.OK) {\n        sink.end();\n      } else {\n        sink.error(new ClientError(definition.path, +code as Status, message));\n      }\n    });\n\n    client.start(convertMetadataToGrpcWeb(metadata));\n\n    let pipeError: unknown;\n\n    pipeRequest(pipeAbortController.signal, request, client, definition).then(\n      () => {\n        client.finishSend();\n      },\n      err => {\n        if (!isAbortError(err)) {\n          pipeError = err;\n          client.close();\n          sink.end();\n        }\n      },\n    );\n\n    const abortListener = () => {\n      sink.error(new AbortError());\n      pipeAbortController.abort();\n      client.close();\n    };\n\n    signal.addEventListener('abort', abortListener);\n\n    try {\n      yield* sink;\n    } finally {\n      pipeAbortController.abort();\n      signal.removeEventListener('abort', abortListener);\n      throwIfAborted(signal);\n\n      if (pipeError) {\n        throw pipeError;\n      }\n    }\n  }\n\n  const method =\n    middleware == null\n      ? bidiStreamingMethod\n      : (request: AsyncIterable<Request>, options: CallOptions) =>\n          middleware(\n            {\n              method: methodDescriptor,\n              requestStream: true,\n              request,\n              responseStream: true,\n              next: bidiStreamingMethod,\n            },\n            options,\n          );\n\n  return (request, options) => {\n    const iterable = method(request, {\n      ...defaultOptions,\n      ...options,\n    });\n    const iterator = iterable[Symbol.asyncIterator]();\n\n    return {\n      [Symbol.asyncIterator]() {\n        return {\n          async next() {\n            const result = await iterator.next();\n\n            if (result.done && result.value != null) {\n              return await iterator.throw(\n                new Error(\n                  'A middleware returned a message, but expected to return void for bidirectional streaming method',\n                ),\n              );\n            }\n\n            return result;\n          },\n          return() {\n            return iterator.return();\n          },\n          throw(err) {\n            return iterator.throw(err);\n          },\n        };\n      },\n    };\n  };\n}\n\nasync function pipeRequest<Request>(\n  signal: AbortSignal,\n  request: AsyncIterable<Request>,\n  client: grpc.Client<any, any>,\n  definition: AnyMethodDefinition,\n): Promise<void> {\n  for await (const item of request) {\n    throwIfAborted(signal);\n\n    client.send({\n      serializeBinary: () => definition.requestSerialize(item),\n    });\n  }\n}\n","!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)(\"object\"==typeof exports?exports:e)[n]=r[n]}}(this,(function(){return e={418:function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=1)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(3),o=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={splitValues:!1});var r,o=this;this.headersMap={},e&&(\"undefined\"!=typeof Headers&&e instanceof Headers?n.getHeaderKeys(e).forEach((function(r){n.getHeaderValues(e,r).forEach((function(e){t.splitValues?o.append(r,n.splitHeaderValue(e)):o.append(r,e)}))})):\"object\"==typeof(r=e)&&\"object\"==typeof r.headersMap&&\"function\"==typeof r.forEach?e.forEach((function(e,t){o.append(e,t)})):\"undefined\"!=typeof Map&&e instanceof Map?e.forEach((function(e,t){o.append(t,e)})):\"string\"==typeof e?this.appendFromString(e):\"object\"==typeof e&&Object.getOwnPropertyNames(e).forEach((function(t){var r=e[t];Array.isArray(r)?r.forEach((function(e){o.append(t,e)})):o.append(t,r)})))}return e.prototype.appendFromString=function(e){for(var t=e.split(\"\\r\\n\"),r=0;r<t.length;r++){var n=t[r],o=n.indexOf(\":\");if(o>0){var s=n.substring(0,o).trim(),i=n.substring(o+1).trim();this.append(s,i)}}},e.prototype.delete=function(e,t){var r=n.normalizeName(e);if(void 0===t)delete this.headersMap[r];else{var o=this.headersMap[r];if(o){var s=o.indexOf(t);s>=0&&o.splice(s,1),0===o.length&&delete this.headersMap[r]}}},e.prototype.append=function(e,t){var r=this,o=n.normalizeName(e);Array.isArray(this.headersMap[o])||(this.headersMap[o]=[]),Array.isArray(t)?t.forEach((function(e){r.headersMap[o].push(n.normalizeValue(e))})):this.headersMap[o].push(n.normalizeValue(t))},e.prototype.set=function(e,t){var r=n.normalizeName(e);if(Array.isArray(t)){var o=[];t.forEach((function(e){o.push(n.normalizeValue(e))})),this.headersMap[r]=o}else this.headersMap[r]=[n.normalizeValue(t)]},e.prototype.has=function(e,t){var r=this.headersMap[n.normalizeName(e)];if(!Array.isArray(r))return!1;if(void 0!==t){var o=n.normalizeValue(t);return r.indexOf(o)>=0}return!0},e.prototype.get=function(e){var t=this.headersMap[n.normalizeName(e)];return void 0!==t?t.concat():[]},e.prototype.forEach=function(e){var t=this;Object.getOwnPropertyNames(this.headersMap).forEach((function(r){e(r,t.headersMap[r])}),this)},e.prototype.toHeaders=function(){if(\"undefined\"!=typeof Headers){var e=new Headers;return this.forEach((function(t,r){r.forEach((function(r){e.append(t,r)}))})),e}throw new Error(\"Headers class is not defined\")},e}();t.BrowserHeaders=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0);t.BrowserHeaders=n.BrowserHeaders},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.iterateHeaders=function(e,t){for(var r=e[Symbol.iterator](),n=r.next();!n.done;)t(n.value[0]),n=r.next()},t.iterateHeadersKeys=function(e,t){for(var r=e.keys(),n=r.next();!n.done;)t(n.value),n=r.next()}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(2);t.normalizeName=function(e){if(\"string\"!=typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(e))throw new TypeError(\"Invalid character in header field name\");return e.toLowerCase()},t.normalizeValue=function(e){return\"string\"!=typeof e&&(e=String(e)),e},t.getHeaderValues=function(e,t){var r=e;if(r instanceof Headers&&r.getAll)return r.getAll(t);var n=r.get(t);return n&&\"string\"==typeof n?[n]:n},t.getHeaderKeys=function(e){var t=e,r={},o=[];return t.keys?n.iterateHeadersKeys(t,(function(e){r[e]||(r[e]=!0,o.push(e))})):t.forEach?t.forEach((function(e,t){r[t]||(r[t]=!0,o.push(t))})):n.iterateHeaders(t,(function(e){var t=e[0];r[t]||(r[t]=!0,o.push(t))})),o},t.splitHeaderValue=function(e){var t=[];return e.split(\", \").forEach((function(e){e.split(\",\").forEach((function(e){t.push(e)}))})),t}}]))},617:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkParser=t.ChunkType=t.encodeASCII=t.decodeASCII=void 0;var n,o=r(65);function s(e){return 9===(t=e)||10===t||13===t||e>=32&&e<=126;var t}function i(e){for(var t=0;t!==e.length;++t)if(!s(e[t]))throw new Error(\"Metadata is not valid (printable) ASCII\");return String.fromCharCode.apply(String,Array.prototype.slice.call(e))}function a(e){return 128==(128&e.getUint8(0))}function u(e){return e.getUint32(1,!1)}function d(e,t,r){return e.byteLength-t>=r}function c(e,t,r){if(e.slice)return e.slice(t,r);var n=e.length;void 0!==r&&(n=r);for(var o=new Uint8Array(n-t),s=0,i=t;i<n;i++)o[s++]=e[i];return o}t.decodeASCII=i,t.encodeASCII=function(e){for(var t=new Uint8Array(e.length),r=0;r!==e.length;++r){var n=e.charCodeAt(r);if(!s(n))throw new Error(\"Metadata contains invalid ASCII\");t[r]=n}return t},function(e){e[e.MESSAGE=1]=\"MESSAGE\",e[e.TRAILERS=2]=\"TRAILERS\"}(n=t.ChunkType||(t.ChunkType={}));var p=function(){function e(){this.buffer=null,this.position=0}return e.prototype.parse=function(e,t){if(0===e.length&&t)return[];var r,s=[];if(null==this.buffer)this.buffer=e,this.position=0;else if(this.position===this.buffer.byteLength)this.buffer=e,this.position=0;else{var p=this.buffer.byteLength-this.position,h=new Uint8Array(p+e.byteLength),f=c(this.buffer,this.position);h.set(f,0);var l=new Uint8Array(e);h.set(l,p),this.buffer=h,this.position=0}for(;;){if(!d(this.buffer,this.position,5))return s;var g=c(this.buffer,this.position,this.position+5),b=new DataView(g.buffer,g.byteOffset,g.byteLength),y=u(b);if(!d(this.buffer,this.position,5+y))return s;var v=c(this.buffer,this.position+5,this.position+5+y);if(this.position+=5+y,a(b))return s.push({chunkType:n.TRAILERS,trailers:(r=v,new o.Metadata(i(r)))}),s;s.push({chunkType:n.MESSAGE,data:v})}},e}();t.ChunkParser=p},8:function(e,t){\"use strict\";var r;Object.defineProperty(t,\"__esModule\",{value:!0}),t.httpStatusToCode=t.Code=void 0,function(e){e[e.OK=0]=\"OK\",e[e.Canceled=1]=\"Canceled\",e[e.Unknown=2]=\"Unknown\",e[e.InvalidArgument=3]=\"InvalidArgument\",e[e.DeadlineExceeded=4]=\"DeadlineExceeded\",e[e.NotFound=5]=\"NotFound\",e[e.AlreadyExists=6]=\"AlreadyExists\",e[e.PermissionDenied=7]=\"PermissionDenied\",e[e.ResourceExhausted=8]=\"ResourceExhausted\",e[e.FailedPrecondition=9]=\"FailedPrecondition\",e[e.Aborted=10]=\"Aborted\",e[e.OutOfRange=11]=\"OutOfRange\",e[e.Unimplemented=12]=\"Unimplemented\",e[e.Internal=13]=\"Internal\",e[e.Unavailable=14]=\"Unavailable\",e[e.DataLoss=15]=\"DataLoss\",e[e.Unauthenticated=16]=\"Unauthenticated\"}(r=t.Code||(t.Code={})),t.httpStatusToCode=function(e){switch(e){case 0:return r.Internal;case 200:return r.OK;case 400:return r.InvalidArgument;case 401:return r.Unauthenticated;case 403:return r.PermissionDenied;case 404:return r.NotFound;case 409:return r.Aborted;case 412:return r.FailedPrecondition;case 429:return r.ResourceExhausted;case 499:return r.Canceled;case 500:return r.Unknown;case 501:return r.Unimplemented;case 503:return r.Unavailable;case 504:return r.DeadlineExceeded;default:return r.Unknown}}},934:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.client=void 0;var n=r(65),o=r(617),s=r(8),i=r(346),a=r(57),u=r(882);t.client=function(e,t){return new d(e,t)};var d=function(){function e(e,t){this.started=!1,this.sentFirstMessage=!1,this.completed=!1,this.closed=!1,this.finishedSending=!1,this.onHeadersCallbacks=[],this.onMessageCallbacks=[],this.onEndCallbacks=[],this.parser=new o.ChunkParser,this.methodDefinition=e,this.props=t,this.createTransport()}return e.prototype.createTransport=function(){var e=this.props.host+\"/\"+this.methodDefinition.service.serviceName+\"/\"+this.methodDefinition.methodName,t={methodDefinition:this.methodDefinition,debug:this.props.debug||!1,url:e,onHeaders:this.onTransportHeaders.bind(this),onChunk:this.onTransportChunk.bind(this),onEnd:this.onTransportEnd.bind(this)};this.props.transport?this.transport=this.props.transport(t):this.transport=a.makeDefaultTransport(t)},e.prototype.onTransportHeaders=function(e,t){if(this.props.debug&&i.debug(\"onHeaders\",e,t),this.closed)this.props.debug&&i.debug(\"grpc.onHeaders received after request was closed - ignoring\");else if(0===t);else{this.responseHeaders=e,this.props.debug&&i.debug(\"onHeaders.responseHeaders\",JSON.stringify(this.responseHeaders,null,2));var r=c(e);this.props.debug&&i.debug(\"onHeaders.gRPCStatus\",r);var n=r&&r>=0?r:s.httpStatusToCode(t);this.props.debug&&i.debug(\"onHeaders.code\",n);var o=e.get(\"grpc-message\")||[];if(this.props.debug&&i.debug(\"onHeaders.gRPCMessage\",o),this.rawOnHeaders(e),n!==s.Code.OK){var a=this.decodeGRPCStatus(o[0]);this.rawOnError(n,a,e)}}},e.prototype.onTransportChunk=function(e){var t=this;if(this.closed)this.props.debug&&i.debug(\"grpc.onChunk received after request was closed - ignoring\");else{var r=[];try{r=this.parser.parse(e)}catch(e){return this.props.debug&&i.debug(\"onChunk.parsing error\",e,e.message),void this.rawOnError(s.Code.Internal,\"parsing error: \"+e.message)}r.forEach((function(e){if(e.chunkType===o.ChunkType.MESSAGE){var r=t.methodDefinition.responseType.deserializeBinary(e.data);t.rawOnMessage(r)}else e.chunkType===o.ChunkType.TRAILERS&&(t.responseHeaders?(t.responseTrailers=new n.Metadata(e.trailers),t.props.debug&&i.debug(\"onChunk.trailers\",t.responseTrailers)):(t.responseHeaders=new n.Metadata(e.trailers),t.rawOnHeaders(t.responseHeaders)))}))}},e.prototype.onTransportEnd=function(){if(this.props.debug&&i.debug(\"grpc.onEnd\"),this.closed)this.props.debug&&i.debug(\"grpc.onEnd received after request was closed - ignoring\");else if(void 0!==this.responseTrailers){var e=c(this.responseTrailers);if(null!==e){var t=this.responseTrailers.get(\"grpc-message\"),r=this.decodeGRPCStatus(t[0]);this.rawOnEnd(e,r,this.responseTrailers)}else this.rawOnError(s.Code.Internal,\"Response closed without grpc-status (Trailers provided)\")}else{if(void 0===this.responseHeaders)return void this.rawOnError(s.Code.Unknown,\"Response closed without headers\");var n=c(this.responseHeaders),o=this.responseHeaders.get(\"grpc-message\");if(this.props.debug&&i.debug(\"grpc.headers only response \",n,o),null===n)return void this.rawOnEnd(s.Code.Unknown,\"Response closed without grpc-status (Headers only)\",this.responseHeaders);var a=this.decodeGRPCStatus(o[0]);this.rawOnEnd(n,a,this.responseHeaders)}},e.prototype.decodeGRPCStatus=function(e){if(!e)return\"\";try{return decodeURIComponent(e)}catch(t){return e}},e.prototype.rawOnEnd=function(e,t,r){var n=this;this.props.debug&&i.debug(\"rawOnEnd\",e,t,r),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(o){if(!n.closed)try{o(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnHeaders=function(e){this.props.debug&&i.debug(\"rawOnHeaders\",e),this.completed||this.onHeadersCallbacks.forEach((function(t){try{t(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.rawOnError=function(e,t,r){var o=this;void 0===r&&(r=new n.Metadata),this.props.debug&&i.debug(\"rawOnError\",e,t),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(n){if(!o.closed)try{n(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnMessage=function(e){var t=this;this.props.debug&&i.debug(\"rawOnMessage\",e.toObject()),this.completed||this.closed||this.onMessageCallbacks.forEach((function(r){if(!t.closed)try{r(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.onHeaders=function(e){this.onHeadersCallbacks.push(e)},e.prototype.onMessage=function(e){this.onMessageCallbacks.push(e)},e.prototype.onEnd=function(e){this.onEndCallbacks.push(e)},e.prototype.start=function(e){if(this.started)throw new Error(\"Client already started - cannot .start()\");this.started=!0;var t=new n.Metadata(e||{});t.set(\"content-type\",\"application/grpc-web+proto\"),t.set(\"x-grpc-web\",\"1\"),this.transport.start(t)},e.prototype.send=function(e){if(!this.started)throw new Error(\"Client not started - .start() must be called before .send()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .send()\");if(!this.methodDefinition.requestStream&&this.sentFirstMessage)throw new Error(\"Message already sent for non-client-streaming method - cannot .send()\");this.sentFirstMessage=!0;var t=u.frameRequest(e);this.transport.sendMessage(t)},e.prototype.finishSend=function(){if(!this.started)throw new Error(\"Client not started - .finishSend() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .finishSend()\");this.finishedSending=!0,this.transport.finishSend()},e.prototype.close=function(){if(!this.started)throw new Error(\"Client not started - .start() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .close()\");this.closed=!0,this.props.debug&&i.debug(\"request.abort aborting request\"),this.transport.cancel()},e}();function c(e){var t=e.get(\"grpc-status\")||[];if(t.length>0)try{var r=t[0];return parseInt(r,10)}catch(e){return null}return null}},346:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.debug=void 0,t.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];console.debug?console.debug.apply(null,e):console.log.apply(null,e)}},607:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.grpc=void 0;var n,o=r(418),s=r(57),i=r(229),a=r(540),u=r(210),d=r(859),c=r(8),p=r(938),h=r(35),f=r(934);(n=t.grpc||(t.grpc={})).setDefaultTransport=s.setDefaultTransportFactory,n.CrossBrowserHttpTransport=d.CrossBrowserHttpTransport,n.FetchReadableStreamTransport=i.FetchReadableStreamTransport,n.XhrTransport=u.XhrTransport,n.WebsocketTransport=a.WebsocketTransport,n.Code=c.Code,n.Metadata=o.BrowserHeaders,n.client=function(e,t){return f.client(e,t)},n.invoke=p.invoke,n.unary=h.unary},938:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.invoke=void 0;var n=r(934);t.invoke=function(e,t){if(e.requestStream)throw new Error(\".invoke cannot be used with client-streaming methods. Use .client instead.\");var r=n.client(e,{host:t.host,transport:t.transport,debug:t.debug});return t.onHeaders&&r.onHeaders(t.onHeaders),t.onMessage&&r.onMessage(t.onMessage),t.onEnd&&r.onEnd(t.onEnd),r.start(t.metadata),r.send(t.request),r.finishSend(),{close:function(){r.close()}}}},65:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Metadata=void 0;var n=r(418);Object.defineProperty(t,\"Metadata\",{enumerable:!0,get:function(){return n.BrowserHeaders}})},57:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.makeDefaultTransport=t.setDefaultTransportFactory=void 0;var n=r(859),o=function(e){return n.CrossBrowserHttpTransport({withCredentials:!1})(e)};t.setDefaultTransportFactory=function(e){o=e},t.makeDefaultTransport=function(e){return o(e)}},229:function(e,t,r){\"use strict\";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectFetchSupport=t.FetchReadableStreamTransport=void 0;var o=r(65),s=r(346);t.FetchReadableStreamTransport=function(e){return function(t){return function(e,t){return e.debug&&s.debug(\"fetchRequest\",e),new i(e,t)}(t,e)}};var i=function(){function e(e,t){this.cancelled=!1,this.controller=self.AbortController&&new AbortController,this.options=e,this.init=t}return e.prototype.pump=function(e,t){var r=this;if(this.reader=e,this.cancelled)return this.options.debug&&s.debug(\"Fetch.pump.cancel at first pump\"),void this.reader.cancel().catch((function(e){r.options.debug&&s.debug(\"Fetch.pump.reader.cancel exception\",e)}));this.reader.read().then((function(e){if(e.done)return r.options.onEnd(),t;r.options.onChunk(e.value),r.pump(r.reader,t)})).catch((function(e){r.cancelled?r.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(r.cancelled=!0,r.options.debug&&s.debug(\"Fetch.catch\",e.message),r.options.onEnd(e))}))},e.prototype.send=function(e){var t=this;fetch(this.options.url,n(n({},this.init),{headers:this.metadata.toHeaders(),method:\"POST\",body:e,signal:this.controller&&this.controller.signal})).then((function(e){if(t.options.debug&&s.debug(\"Fetch.response\",e),t.options.onHeaders(new o.Metadata(e.headers),e.status),!e.body)return e;t.pump(e.body.getReader(),e)})).catch((function(e){t.cancelled?t.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(t.cancelled=!0,t.options.debug&&s.debug(\"Fetch.catch\",e.message),t.options.onEnd(e))}))},e.prototype.sendMessage=function(e){this.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){this.metadata=e},e.prototype.cancel=function(){var e=this;this.cancelled?this.options.debug&&s.debug(\"Fetch.cancel already cancelled\"):(this.cancelled=!0,this.controller?(this.options.debug&&s.debug(\"Fetch.cancel.controller.abort\"),this.controller.abort()):this.options.debug&&s.debug(\"Fetch.cancel.missing abort controller\"),this.reader?(this.options.debug&&s.debug(\"Fetch.cancel.reader.cancel\"),this.reader.cancel().catch((function(t){e.options.debug&&s.debug(\"Fetch.cancel.reader.cancel exception\",t)}))):this.options.debug&&s.debug(\"Fetch.cancel before reader\"))},e}();t.detectFetchSupport=function(){return\"undefined\"!=typeof Response&&Response.prototype.hasOwnProperty(\"body\")&&\"function\"==typeof Headers}},859:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CrossBrowserHttpTransport=void 0;var n=r(229),o=r(210);t.CrossBrowserHttpTransport=function(e){if(n.detectFetchSupport()){var t={credentials:e.withCredentials?\"include\":\"same-origin\"};return n.FetchReadableStreamTransport(t)}return o.XhrTransport({withCredentials:e.withCredentials})}},210:function(e,t,r){\"use strict\";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringToArrayBuffer=t.MozChunkedArrayBufferXHR=t.XHR=t.XhrTransport=void 0;var s=r(65),i=r(346),a=r(849);t.XhrTransport=function(e){return function(t){if(a.detectMozXHRSupport())return new d(t,e);if(a.detectXHROverrideMimeTypeSupport())return new u(t,e);throw new Error(\"This environment's XHR implementation cannot support binary transfer.\")}};var u=function(){function e(e,t){this.options=e,this.init=t}return e.prototype.onProgressEvent=function(){this.options.debug&&i.debug(\"XHR.onProgressEvent.length: \",this.xhr.response.length);var e=this.xhr.response.substr(this.index);this.index=this.xhr.response.length;var t=p(e);this.options.onChunk(t)},e.prototype.onLoadEvent=function(){this.options.debug&&i.debug(\"XHR.onLoadEvent\"),this.options.onEnd()},e.prototype.onStateChange=function(){this.options.debug&&i.debug(\"XHR.onStateChange\",this.xhr.readyState),this.xhr.readyState===XMLHttpRequest.HEADERS_RECEIVED&&this.options.onHeaders(new s.Metadata(this.xhr.getAllResponseHeaders()),this.xhr.status)},e.prototype.sendMessage=function(e){this.xhr.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){var t=this;this.metadata=e;var r=new XMLHttpRequest;this.xhr=r,r.open(\"POST\",this.options.url),this.configureXhr(),this.metadata.forEach((function(e,t){r.setRequestHeader(e,t.join(\", \"))})),r.withCredentials=Boolean(this.init.withCredentials),r.addEventListener(\"readystatechange\",this.onStateChange.bind(this)),r.addEventListener(\"progress\",this.onProgressEvent.bind(this)),r.addEventListener(\"loadend\",this.onLoadEvent.bind(this)),r.addEventListener(\"error\",(function(e){t.options.debug&&i.debug(\"XHR.error\",e),t.options.onEnd(e.error)}))},e.prototype.configureXhr=function(){this.xhr.responseType=\"text\",this.xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")},e.prototype.cancel=function(){this.options.debug&&i.debug(\"XHR.abort\"),this.xhr.abort()},e}();t.XHR=u;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.configureXhr=function(){this.options.debug&&i.debug(\"MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'\"),this.xhr.responseType=\"moz-chunked-arraybuffer\"},t.prototype.onProgressEvent=function(){var e=this.xhr.response;this.options.debug&&i.debug(\"MozXHR.onProgressEvent: \",new Uint8Array(e)),this.options.onChunk(new Uint8Array(e))},t}(u);function c(e,t){var r=e.charCodeAt(t);if(r>=55296&&r<=56319){var n=e.charCodeAt(t+1);n>=56320&&n<=57343&&(r=65536+(r-55296<<10)+(n-56320))}return r}function p(e){for(var t=new Uint8Array(e.length),r=0,n=0;n<e.length;n++){var o=String.prototype.codePointAt?e.codePointAt(n):c(e,n);t[r++]=255&o}return t}t.MozChunkedArrayBufferXHR=d,t.stringToArrayBuffer=p},849:function(e,t){\"use strict\";var r;function n(){if(void 0!==r)return r;if(XMLHttpRequest){r=new XMLHttpRequest;try{r.open(\"GET\",\"https://localhost\")}catch(e){}}return r}function o(e){var t=n();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectXHROverrideMimeTypeSupport=t.detectMozXHRSupport=t.xhrSupportsResponseType=void 0,t.xhrSupportsResponseType=o,t.detectMozXHRSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&o(\"moz-chunked-arraybuffer\")},t.detectXHROverrideMimeTypeSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&XMLHttpRequest.prototype.hasOwnProperty(\"overrideMimeType\")}},540:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WebsocketTransport=void 0;var n,o=r(346),s=r(617);!function(e){e[e.FINISH_SEND=1]=\"FINISH_SEND\"}(n||(n={}));var i=new Uint8Array([1]);t.WebsocketTransport=function(){return function(e){return function(e){e.debug&&o.debug(\"websocketRequest\",e);var t,r=function(e){if(\"https://\"===e.substr(0,8))return\"wss://\"+e.substr(8);if(\"http://\"===e.substr(0,7))return\"ws://\"+e.substr(7);throw new Error(\"Websocket transport constructed with non-https:// or http:// host.\")}(e.url),a=[];function u(e){if(e===n.FINISH_SEND)t.send(i);else{var r=e,o=new Int8Array(r.byteLength+1);o.set(new Uint8Array([0])),o.set(r,1),t.send(o)}}return{sendMessage:function(e){t&&t.readyState!==t.CONNECTING?u(e):a.push(e)},finishSend:function(){t&&t.readyState!==t.CONNECTING?u(n.FINISH_SEND):a.push(n.FINISH_SEND)},start:function(n){(t=new WebSocket(r,[\"grpc-websockets\"])).binaryType=\"arraybuffer\",t.onopen=function(){var r;e.debug&&o.debug(\"websocketRequest.onopen\"),t.send((r=\"\",n.forEach((function(e,t){r+=e+\": \"+t.join(\", \")+\"\\r\\n\"})),s.encodeASCII(r))),a.forEach((function(e){u(e)}))},t.onclose=function(t){e.debug&&o.debug(\"websocketRequest.onclose\",t),e.onEnd()},t.onerror=function(t){e.debug&&o.debug(\"websocketRequest.onerror\",t)},t.onmessage=function(t){e.onChunk(new Uint8Array(t.data))}},cancel:function(){e.debug&&o.debug(\"websocket.abort\"),t.close()}}}(e)}}},35:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.unary=void 0;var n=r(65),o=r(934);t.unary=function(e,t){if(e.responseStream)throw new Error(\".unary cannot be used with server-streaming methods. Use .invoke or .client instead.\");if(e.requestStream)throw new Error(\".unary cannot be used with client-streaming methods. Use .client instead.\");var r=null,s=null,i=o.client(e,{host:t.host,transport:t.transport,debug:t.debug});return i.onHeaders((function(e){r=e})),i.onMessage((function(e){s=e})),i.onEnd((function(e,o,i){t.onEnd({status:e,statusMessage:o,headers:r||new n.Metadata,message:s,trailers:i})})),i.start(t.metadata),i.send(t.request),i.finishSend(),{close:function(){i.close()}}}},882:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.frameRequest=void 0,t.frameRequest=function(e){var t=e.serializeBinary(),r=new ArrayBuffer(t.byteLength+5);return new DataView(r,1,4).setUint32(0,t.length,!1),new Uint8Array(r,5).set(t),new Uint8Array(r)}}},t={},function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(607);var e,t}));","/**\n * Thrown when an abortable function was aborted.\n *\n * **Warning**: do not use `instanceof` with this class. Instead, use\n * `isAbortError` function.\n */\nexport class AbortError extends Error {\n  constructor() {\n    super('The operation has been aborted');\n\n    this.message = 'The operation has been aborted';\n\n    this.name = 'AbortError';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\n/**\n * Checks whether given `error` is an `AbortError`.\n */\nexport function isAbortError(error: unknown): error is Error {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).name === 'AbortError'\n  );\n}\n\n/**\n * If `signal` is aborted, throws `AbortError`. Otherwise does nothing.\n */\nexport function throwIfAborted(signal: AbortSignal): void {\n  if (signal.aborted) {\n    throw new AbortError();\n  }\n}\n\n/**\n * If `error` is `AbortError`, throws it. Otherwise does nothing.\n *\n * Useful for `try/catch` blocks around abortable code:\n *\n *    try {\n *      await somethingAbortable(signal);\n *    } catch (err) {\n *      rethrowAbortError(err);\n *\n *      // do normal error handling\n *    }\n */\nexport function rethrowAbortError(error: unknown): void {\n  if (isAbortError(error)) {\n    throw error;\n  }\n\n  return;\n}\n\n/**\n * If `error` is `AbortError`, does nothing. Otherwise throws it.\n *\n * Useful for invoking top-level abortable functions:\n *\n *    somethingAbortable(signal).catch(catchAbortError)\n *\n * Without `catchAbortError`, aborting would result in unhandled promise\n * rejection.\n */\nexport function catchAbortError(error: unknown): void {\n  if (isAbortError(error)) {\n    return;\n  }\n\n  throw error;\n}\n","// borrowed from IxJS\n// https://github.com/ReactiveX/IxJS/blob/v4.5.1/src/asynciterable/asyncsink.ts\n\nconst ARRAY_VALUE = 'value';\nconst ARRAY_ERROR = 'error';\n\ninterface AsyncSinkItem<T> {\n  type: string;\n  value?: T;\n  error?: any;\n}\n\ninterface AsyncResolver<T> {\n  resolve: (value: T | PromiseLike<T>) => void;\n  reject: (reason: any) => void;\n}\n\nexport class AsyncSink<TSource> implements AsyncIterableIterator<TSource> {\n  private _ended: boolean;\n  private _values: AsyncSinkItem<TSource>[];\n  private _resolvers: AsyncResolver<IteratorResult<TSource>>[];\n\n  constructor() {\n    this._ended = false;\n    this._values = [];\n    this._resolvers = [];\n  }\n\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n\n  write(value: TSource) {\n    this._push({type: ARRAY_VALUE, value});\n  }\n\n  error(error: any) {\n    this._push({type: ARRAY_ERROR, error});\n  }\n\n  private _push(item: AsyncSinkItem<TSource>) {\n    if (this._ended) {\n      throw new Error('AsyncSink already ended');\n    }\n\n    if (this._resolvers.length > 0) {\n      const {resolve, reject} = this._resolvers.shift()!;\n      if (item.type === ARRAY_ERROR) {\n        reject(item.error!);\n      } else {\n        resolve({done: false, value: item.value!});\n      }\n    } else {\n      this._values.push(item);\n    }\n  }\n\n  next() {\n    if (this._values.length > 0) {\n      const {type, value, error} = this._values.shift()!;\n      if (type === ARRAY_ERROR) {\n        return Promise.reject(error);\n      } else {\n        return Promise.resolve({done: false, value} as IteratorResult<TSource>);\n      }\n    }\n\n    if (this._ended) {\n      return Promise.resolve({done: true} as IteratorResult<TSource>);\n    }\n\n    return new Promise<IteratorResult<TSource>>((resolve, reject) => {\n      this._resolvers.push({resolve, reject});\n    });\n  }\n\n  end() {\n    while (this._resolvers.length > 0) {\n      this._resolvers.shift()!.resolve({done: true} as IteratorResult<TSource>);\n    }\n    this._ended = true;\n  }\n}\n","/** @internal */\nexport function isAsyncIterable(value: any): value is AsyncIterable<unknown> {\n  return value != null && Symbol.asyncIterator in value;\n}\n","import {grpc} from '@improbable-eng/grpc-web';\nimport {Metadata} from 'nice-grpc-common';\nimport {Base64} from 'js-base64';\n\nexport function convertMetadataToGrpcWeb(metadata: Metadata): grpc.Metadata {\n  const grpcMetadata = new grpc.Metadata();\n\n  for (const [key, values] of metadata) {\n    for (const value of values) {\n      grpcMetadata.append(\n        key,\n        typeof value === 'string' ? value : Base64.fromUint8Array(value),\n      );\n    }\n  }\n\n  return grpcMetadata;\n}\n\nexport function convertMetadataFromGrpcWeb(\n  grpcMetadata: grpc.Metadata,\n): Metadata {\n  const metadata = Metadata();\n\n  for (const [key, values] of Object.entries(grpcMetadata.headersMap)) {\n    metadata.set(\n      key,\n      key.endsWith('-bin')\n        ? values.map(value => Base64.toUint8Array(value))\n        : values,\n    );\n  }\n\n  return metadata;\n}\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import {\n  CallOptions,\n  ClientMiddleware,\n  MethodDescriptor,\n  ClientError,\n  Metadata,\n  Status,\n} from 'nice-grpc-common';\nimport {grpc} from '@improbable-eng/grpc-web';\nimport {execute, isAbortError, throwIfAborted} from 'abort-controller-x';\nimport {\n  AnyMethodDefinition,\n  MethodDefinition,\n  toGrpcWebMethodDefinition,\n} from '../service-definitions';\nimport {isAsyncIterable} from '../utils/isAsyncIterable';\nimport {ClientStreamingClientMethod} from './Client';\nimport {\n  convertMetadataFromGrpcWeb,\n  convertMetadataToGrpcWeb,\n} from '../utils/convertMetadata';\nimport {Channel} from './channel';\n\n/** @internal */\nexport function createClientStreamingMethod<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  middleware: ClientMiddleware | undefined,\n  defaultOptions: CallOptions,\n): ClientStreamingClientMethod<Request, Response> {\n  const grpcMethodDefinition = toGrpcWebMethodDefinition(definition);\n\n  const methodDescriptor: MethodDescriptor = {\n    path: definition.path,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    options: definition.options,\n  };\n\n  async function* clientStreamingMethod(\n    request: AsyncIterable<Request>,\n    options: CallOptions,\n  ): AsyncGenerator<never, Response, undefined> {\n    if (!isAsyncIterable(request)) {\n      throw new Error(\n        'A middleware passed invalid request to next(): expected a single message for client streaming method',\n      );\n    }\n\n    const {\n      metadata = Metadata(),\n      signal = new AbortController().signal,\n      onHeader,\n      onTrailer,\n    } = options;\n\n    return await execute<Response>(signal, (resolve, reject) => {\n      const pipeAbortController = new AbortController();\n\n      let response: Response;\n\n      const client = grpc.client<any, any, any>(grpcMethodDefinition, {\n        host: channel.address,\n        transport: channel.transport,\n      });\n\n      client.onHeaders(headers => {\n        onHeader?.(convertMetadataFromGrpcWeb(headers));\n      });\n\n      client.onMessage(message => {\n        response = message;\n      });\n\n      client.onEnd((code, message, trailers) => {\n        onTrailer?.(convertMetadataFromGrpcWeb(trailers));\n\n        pipeAbortController.abort();\n\n        if (code === grpc.Code.OK) {\n          resolve(response!);\n        } else {\n          reject(new ClientError(definition.path, +code as Status, message));\n        }\n      });\n\n      client.start(convertMetadataToGrpcWeb(metadata));\n\n      pipeRequest(pipeAbortController.signal, request, client, definition).then(\n        () => {\n          client.finishSend();\n        },\n        err => {\n          if (!isAbortError(err)) {\n            reject(err);\n            client.close();\n          }\n        },\n      );\n\n      return () => {\n        pipeAbortController.abort();\n        client.close();\n      };\n    });\n  }\n\n  const method =\n    middleware == null\n      ? clientStreamingMethod\n      : (request: AsyncIterable<Request>, options: CallOptions) =>\n          middleware(\n            {\n              method: methodDescriptor,\n              requestStream: true,\n              request,\n              responseStream: false,\n              next: clientStreamingMethod,\n            },\n            options,\n          );\n\n  return async (request, options) => {\n    const iterable = method(request, {\n      ...defaultOptions,\n      ...options,\n    });\n    const iterator = iterable[Symbol.asyncIterator]();\n\n    let result = await iterator.next();\n\n    while (true) {\n      if (!result.done) {\n        result = await iterator.throw(\n          new Error(\n            'A middleware yielded a message, but expected to only return a message for client streaming method',\n          ),\n        );\n\n        continue;\n      }\n\n      if (result.value == null) {\n        result = await iterator.throw(\n          new Error(\n            'A middleware returned void, but expected to return a message for client streaming method',\n          ),\n        );\n\n        continue;\n      }\n\n      return result.value;\n    }\n  };\n}\n\nasync function pipeRequest<Request>(\n  signal: AbortSignal,\n  request: AsyncIterable<Request>,\n  client: grpc.Client<any, any>,\n  definition: AnyMethodDefinition,\n): Promise<void> {\n  for await (const item of request) {\n    throwIfAborted(signal);\n\n    client.send({\n      serializeBinary: () => definition.requestSerialize(item),\n    });\n  }\n}\n","import {AbortError} from './AbortError';\n\n/**\n * Similar to `new Promise(executor)`, but allows executor to return abort\n * callback that is called once `signal` is aborted.\n *\n * Returned promise rejects with `AbortError` once `signal` is aborted.\n *\n * Callback can return a promise, e.g. for doing any async cleanup. In this\n * case, the promise returned from `execute` rejects with `AbortError` after\n * that promise fulfills.\n */\nexport function execute<T>(\n  signal: AbortSignal,\n  executor: (\n    resolve: (value: T) => void,\n    reject: (reason?: any) => void,\n  ) => () => void | PromiseLike<void>,\n): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    if (signal.aborted) {\n      reject(new AbortError());\n      return;\n    }\n\n    let removeAbortListener: (() => void) | undefined;\n    let finished = false;\n\n    function finish() {\n      if (!finished) {\n        finished = true;\n        if (removeAbortListener != null) {\n          removeAbortListener();\n        }\n      }\n    }\n\n    const callback = executor(\n      value => {\n        resolve(value);\n        finish();\n      },\n      reason => {\n        reject(reason);\n        finish();\n      },\n    );\n\n    if (!finished) {\n      const listener = () => {\n        const callbackResult = callback();\n\n        if (callbackResult == null) {\n          reject(new AbortError());\n        } else {\n          callbackResult.then(\n            () => {\n              reject(new AbortError());\n            },\n            reason => {\n              reject(reason);\n            },\n          );\n        }\n\n        finish();\n      };\n\n      signal.addEventListener('abort', listener);\n\n      removeAbortListener = () => {\n        signal.removeEventListener('abort', listener);\n      };\n    }\n  });\n}\n","import {grpc} from '@improbable-eng/grpc-web';\nimport {AbortError, throwIfAborted} from 'abort-controller-x';\nimport {AsyncSink} from '../utils/AsyncSink';\nimport {\n  CallOptions,\n  ClientError,\n  ClientMiddleware,\n  Metadata,\n  MethodDescriptor,\n  Status,\n} from 'nice-grpc-common';\nimport {\n  MethodDefinition,\n  toGrpcWebMethodDefinition,\n} from '../service-definitions';\nimport {\n  convertMetadataFromGrpcWeb,\n  convertMetadataToGrpcWeb,\n} from '../utils/convertMetadata';\nimport {isAsyncIterable} from '../utils/isAsyncIterable';\nimport {Channel} from './channel';\nimport {ServerStreamingClientMethod} from './Client';\n\n/** @internal */\nexport function createServerStreamingMethod<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  middleware: ClientMiddleware | undefined,\n  defaultOptions: CallOptions,\n): ServerStreamingClientMethod<Request, Response> {\n  const grpcMethodDefinition = toGrpcWebMethodDefinition(definition);\n\n  const methodDescriptor: MethodDescriptor = {\n    path: definition.path,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    options: definition.options,\n  };\n\n  async function* serverStreamingMethod(\n    request: Request,\n    options: CallOptions,\n  ): AsyncGenerator<Response, void, undefined> {\n    if (isAsyncIterable(request)) {\n      throw new Error(\n        'A middleware passed invalid request to next(): expected a single message for server streaming method',\n      );\n    }\n\n    const {\n      metadata = Metadata(),\n      signal = new AbortController().signal,\n      onHeader,\n      onTrailer,\n    } = options;\n\n    const sink = new AsyncSink<Response>();\n\n    const client = grpc.client<any, any, any>(grpcMethodDefinition, {\n      host: channel.address,\n      transport: channel.transport,\n    });\n\n    client.onHeaders(headers => {\n      onHeader?.(convertMetadataFromGrpcWeb(headers));\n    });\n\n    client.onMessage(message => {\n      sink.write(message);\n    });\n\n    client.onEnd((code, message, trailers) => {\n      onTrailer?.(convertMetadataFromGrpcWeb(trailers));\n\n      if (code === grpc.Code.OK) {\n        sink.end();\n      } else {\n        sink.error(new ClientError(definition.path, +code as Status, message));\n      }\n    });\n\n    client.start(convertMetadataToGrpcWeb(metadata));\n    client.send({\n      serializeBinary: () => definition.requestSerialize(request),\n    });\n    client.finishSend();\n\n    const abortListener = () => {\n      sink.error(new AbortError());\n      client.close();\n    };\n\n    signal.addEventListener('abort', abortListener);\n\n    try {\n      yield* sink;\n    } finally {\n      signal.removeEventListener('abort', abortListener);\n      throwIfAborted(signal);\n    }\n  }\n\n  const method =\n    middleware == null\n      ? serverStreamingMethod\n      : (request: Request, options: CallOptions) =>\n          middleware(\n            {\n              method: methodDescriptor,\n              requestStream: false,\n              request,\n              responseStream: true,\n              next: serverStreamingMethod,\n            },\n            options,\n          );\n\n  return (request, options) => {\n    const iterable = method(request, {\n      ...defaultOptions,\n      ...options,\n    });\n    const iterator = iterable[Symbol.asyncIterator]();\n\n    return {\n      [Symbol.asyncIterator]() {\n        return {\n          async next() {\n            const result = await iterator.next();\n\n            if (result.done && result.value != null) {\n              return await iterator.throw(\n                new Error(\n                  'A middleware returned a message, but expected to return void for server streaming method',\n                ),\n              );\n            }\n\n            return result;\n          },\n          return() {\n            return iterator.return();\n          },\n          throw(err) {\n            return iterator.throw(err);\n          },\n        };\n      },\n    };\n  };\n}\n","import {\n  CallOptions,\n  ClientMiddleware,\n  MethodDescriptor,\n  ClientError,\n  Metadata,\n  Status,\n} from 'nice-grpc-common';\nimport {grpc} from '@improbable-eng/grpc-web';\nimport {execute} from 'abort-controller-x';\nimport {\n  MethodDefinition,\n  toGrpcWebMethodDefinition,\n} from '../service-definitions';\nimport {isAsyncIterable} from '../utils/isAsyncIterable';\nimport {UnaryClientMethod} from './Client';\nimport {\n  convertMetadataFromGrpcWeb,\n  convertMetadataToGrpcWeb,\n} from '../utils/convertMetadata';\nimport {Channel} from './channel';\n\n/** @internal */\nexport function createUnaryMethod<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  middleware: ClientMiddleware | undefined,\n  defaultOptions: CallOptions,\n): UnaryClientMethod<Request, Response> {\n  const grpcMethodDefinition = toGrpcWebMethodDefinition(definition);\n\n  const methodDescriptor: MethodDescriptor = {\n    path: definition.path,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    options: definition.options,\n  };\n\n  async function* unaryMethod(\n    request: Request,\n    options: CallOptions,\n  ): AsyncGenerator<never, Response, undefined> {\n    if (isAsyncIterable(request)) {\n      throw new Error(\n        'A middleware passed invalid request to next(): expected a single message for unary method',\n      );\n    }\n\n    const {\n      metadata = Metadata(),\n      signal = new AbortController().signal,\n      onHeader,\n      onTrailer,\n    } = options;\n\n    return await execute<Response>(signal, (resolve, reject) => {\n      let response: Response;\n\n      const client = grpc.client<any, any, any>(grpcMethodDefinition, {\n        host: channel.address,\n        transport: channel.transport,\n      });\n\n      client.onHeaders(headers => {\n        onHeader?.(convertMetadataFromGrpcWeb(headers));\n      });\n\n      client.onMessage(message => {\n        response = message;\n      });\n\n      client.onEnd((code, message, trailers) => {\n        onTrailer?.(convertMetadataFromGrpcWeb(trailers));\n\n        if (code === grpc.Code.OK) {\n          resolve(response!);\n        } else {\n          reject(new ClientError(definition.path, +code as Status, message));\n        }\n      });\n\n      client.start(convertMetadataToGrpcWeb(metadata));\n      client.send({\n        serializeBinary: () => definition.requestSerialize(request),\n      });\n      client.finishSend();\n\n      return () => {\n        client.close();\n      };\n    });\n  }\n\n  const method =\n    middleware == null\n      ? unaryMethod\n      : (request: Request, options: CallOptions) =>\n          middleware(\n            {\n              method: methodDescriptor,\n              requestStream: false,\n              request,\n              responseStream: false,\n              next: unaryMethod,\n            },\n            options,\n          );\n\n  return async (request, options) => {\n    const iterable = method(request, {\n      ...defaultOptions,\n      ...options,\n    });\n    const iterator = iterable[Symbol.asyncIterator]();\n\n    let result = await iterator.next();\n\n    while (true) {\n      if (!result.done) {\n        result = await iterator.throw(\n          new Error(\n            'A middleware yielded a message, but expected to only return a message for unary method',\n          ),\n        );\n\n        continue;\n      }\n\n      if (result.value == null) {\n        result = await iterator.throw(\n          new Error(\n            'A middleware returned void, but expected to return a message for unary method',\n          ),\n        );\n\n        continue;\n      }\n\n      return result.value;\n    }\n  };\n}\n","const niceErrors = {\n    0: `Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'`,\n    1(annotationType, key: PropertyKey) {\n        return `Cannot apply '${annotationType}' to '${key.toString()}': Field not found.`\n    },\n    /*\n    2(prop) {\n        return `invalid decorator for '${prop.toString()}'`\n    },\n    3(prop) {\n        return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`\n    },\n    4(prop) {\n        return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`\n    },\n    */\n    5: \"'keys()' can only be used on observable objects, arrays, sets and maps\",\n    6: \"'values()' can only be used on observable objects, arrays, sets and maps\",\n    7: \"'entries()' can only be used on observable objects, arrays and maps\",\n    8: \"'set()' can only be used on observable objects, arrays and maps\",\n    9: \"'remove()' can only be used on observable objects, arrays and maps\",\n    10: \"'has()' can only be used on observable objects, arrays and maps\",\n    11: \"'get()' can only be used on observable objects, arrays and maps\",\n    12: `Invalid annotation`,\n    13: `Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)`,\n    14: \"Intercept handlers should return nothing or a change object\",\n    15: `Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)`,\n    16: `Modification exception: the internal structure of an observable array was changed.`,\n    17(index, length) {\n        return `[mobx.array] Index out of bounds, ${index} is larger than ${length}`\n    },\n    18: \"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\",\n    19(other) {\n        return \"Cannot initialize from classes that inherit from Map: \" + other.constructor.name\n    },\n    20(other) {\n        return \"Cannot initialize map from \" + other\n    },\n    21(dataStructure) {\n        return `Cannot convert to map from '${dataStructure}'`\n    },\n    22: \"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\",\n    23: \"It is not possible to get index atoms from arrays\",\n    24(thing) {\n        return \"Cannot obtain administration from \" + thing\n    },\n    25(property, name) {\n        return `the entry '${property}' does not exist in the observable map '${name}'`\n    },\n    26: \"please specify a property\",\n    27(property, name) {\n        return `no observable property '${property.toString()}' found on the observable object '${name}'`\n    },\n    28(thing) {\n        return \"Cannot obtain atom from \" + thing\n    },\n    29: \"Expecting some object\",\n    30: \"invalid action stack. did you forget to finish an action?\",\n    31: \"missing option for computed: get\",\n    32(name, derivation) {\n        return `Cycle detected in computation ${name}: ${derivation}`\n    },\n    33(name) {\n        return `The setter of computed value '${name}' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?`\n    },\n    34(name) {\n        return `[ComputedValue '${name}'] It is not possible to assign a new value to a computed value.`\n    },\n    35: \"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\",\n    36: \"isolateGlobalState should be called before MobX is running any reactions\",\n    37(method) {\n        return `[mobx] \\`observableArray.${method}()\\` mutates the array in-place, which is not allowed inside a derivation. Use \\`array.slice().${method}()\\` instead`\n    },\n    38: \"'ownKeys()' can only be used on observable objects\",\n    39: \"'defineProperty()' can only be used on observable objects\"\n} as const\n\nconst errors: typeof niceErrors = __DEV__ ? niceErrors : ({} as any)\n\nexport function die(error: string | keyof typeof errors, ...args: any[]): never {\n    if (__DEV__) {\n        let e: any = typeof error === \"string\" ? error : errors[error]\n        if (typeof e === \"function\") e = e.apply(null, args as any)\n        throw new Error(`[MobX] ${e}`)\n    }\n    throw new Error(\n        typeof error === \"number\"\n            ? `[MobX] minified error nr: ${error}${\n                  args.length ? \" \" + args.map(String).join(\",\") : \"\"\n              }. Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts`\n            : `[MobX] ${error}`\n    )\n}\n","declare const window: any\ndeclare const self: any\n\nconst mockGlobal = {}\n\nexport function getGlobal() {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis\n    }\n    if (typeof window !== \"undefined\") {\n        return window\n    }\n    if (typeof global !== \"undefined\") {\n        return global\n    }\n    if (typeof self !== \"undefined\") {\n        return self\n    }\n    return mockGlobal\n}\n","import { globalState, die } from \"../internal\"\n\n// We shorten anything used > 5 times\nexport const assign = Object.assign\nexport const getDescriptor = Object.getOwnPropertyDescriptor\nexport const defineProperty = Object.defineProperty\nexport const objectPrototype = Object.prototype\n\nexport const EMPTY_ARRAY = []\nObject.freeze(EMPTY_ARRAY)\n\nexport const EMPTY_OBJECT = {}\nObject.freeze(EMPTY_OBJECT)\n\nexport interface Lambda {\n    (): void\n    name?: string\n}\n\nconst hasProxy = typeof Proxy !== \"undefined\"\nconst plainObjectString = Object.toString()\n\nexport function assertProxies() {\n    if (!hasProxy) {\n        die(\n            __DEV__\n                ? \"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`\"\n                : \"Proxy not available\"\n        )\n    }\n}\n\nexport function warnAboutProxyRequirement(msg: string) {\n    if (__DEV__ && globalState.verifyProxies) {\n        die(\n            \"MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to \" +\n                msg\n        )\n    }\n}\n\nexport function getNextId() {\n    return ++globalState.mobxGuid\n}\n\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nexport function once(func: Lambda): Lambda {\n    let invoked = false\n    return function () {\n        if (invoked) {\n            return\n        }\n        invoked = true\n        return (func as any).apply(this, arguments)\n    }\n}\n\nexport const noop = () => {}\n\nexport function isFunction(fn: any): fn is Function {\n    return typeof fn === \"function\"\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\"\n}\n\nexport function isStringish(value: any): value is string | number | symbol {\n    const t = typeof value\n    switch (t) {\n        case \"string\":\n        case \"symbol\":\n        case \"number\":\n            return true\n    }\n    return false\n}\n\nexport function isObject(value: any): value is Object {\n    return value !== null && typeof value === \"object\"\n}\n\nexport function isPlainObject(value: any) {\n    if (!isObject(value)) {\n        return false\n    }\n    const proto = Object.getPrototypeOf(value)\n    if (proto == null) {\n        return true\n    }\n    const protoConstructor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n    return (\n        typeof protoConstructor === \"function\" && protoConstructor.toString() === plainObjectString\n    )\n}\n\n// https://stackoverflow.com/a/37865170\nexport function isGenerator(obj: any): boolean {\n    const constructor = obj?.constructor\n    if (!constructor) {\n        return false\n    }\n    if (\n        \"GeneratorFunction\" === constructor.name ||\n        \"GeneratorFunction\" === constructor.displayName\n    ) {\n        return true\n    }\n    return false\n}\n\nexport function addHiddenProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value\n    })\n}\n\nexport function addHiddenFinalProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value\n    })\n}\n\nexport function createInstanceofPredicate<T>(\n    name: string,\n    theClass: new (...args: any[]) => T\n): (x: any) => x is T {\n    const propName = \"isMobX\" + name\n    theClass.prototype[propName] = true\n    return function (x) {\n        return isObject(x) && x[propName] === true\n    } as any\n}\n\nexport function isES6Map(thing: any): thing is Map<any, any> {\n    return thing instanceof Map\n}\n\nexport function isES6Set(thing: any): thing is Set<any> {\n    return thing instanceof Set\n}\n\nconst hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== \"undefined\"\n\n/**\n * Returns the following: own enumerable keys and symbols.\n */\nexport function getPlainObjectKeys(object: any) {\n    const keys = Object.keys(object)\n    // Not supported in IE, so there are not going to be symbol props anyway...\n    if (!hasGetOwnPropertySymbols) {\n        return keys\n    }\n    const symbols = Object.getOwnPropertySymbols(object)\n    if (!symbols.length) {\n        return keys\n    }\n    return [...keys, ...symbols.filter(s => objectPrototype.propertyIsEnumerable.call(object, s))]\n}\n\n// From Immer utils\n// Returns all own keys, including non-enumerable and symbolic\nexport const ownKeys: (target: any) => Array<string | symbol> =\n    typeof Reflect !== \"undefined\" && Reflect.ownKeys\n        ? Reflect.ownKeys\n        : hasGetOwnPropertySymbols\n        ? obj => Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj) as any)\n        : /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function stringifyKey(key: any): string {\n    if (typeof key === \"string\") {\n        return key\n    }\n    if (typeof key === \"symbol\") {\n        return key.toString()\n    }\n    return new String(key).toString()\n}\n\nexport function toPrimitive(value: any) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value\n}\n\nexport function hasProp(target: Object, prop: PropertyKey): boolean {\n    return objectPrototype.hasOwnProperty.call(target, prop)\n}\n\n// From Immer utils\nexport const getOwnPropertyDescriptors =\n    Object.getOwnPropertyDescriptors ||\n    function getOwnPropertyDescriptors(target: any) {\n        // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n        const res: any = {}\n        // Note: without polyfill for ownKeys, symbols won't be picked up\n        ownKeys(target).forEach(key => {\n            res[key] = getDescriptor(target, key)\n        })\n        return res\n    }\n","import { Annotation, addHiddenProp, AnnotationsMap, hasProp, die, isOverride } from \"../internal\"\n\nexport const storedAnnotationsSymbol = Symbol(\"mobx-stored-annotations\")\n\n/**\n * Creates a function that acts as\n * - decorator\n * - annotation object\n */\nexport function createDecoratorAnnotation(annotation: Annotation): PropertyDecorator & Annotation {\n    function decorator(target, property) {\n        storeAnnotation(target, property, annotation)\n    }\n    return Object.assign(decorator, annotation)\n}\n\n/**\n * Stores annotation to prototype,\n * so it can be inspected later by `makeObservable` called from constructor\n */\nexport function storeAnnotation(prototype: any, key: PropertyKey, annotation: Annotation) {\n    if (!hasProp(prototype, storedAnnotationsSymbol)) {\n        addHiddenProp(prototype, storedAnnotationsSymbol, {\n            // Inherit annotations\n            ...prototype[storedAnnotationsSymbol]\n        })\n    }\n    // @override must override something\n    if (__DEV__ && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        die(\n            `'${fieldName}' is decorated with 'override', ` +\n                `but no such decorated member was found on prototype.`\n        )\n    }\n    // Cannot re-decorate\n    assertNotDecorated(prototype, annotation, key)\n\n    // Ignore override\n    if (!isOverride(annotation)) {\n        prototype[storedAnnotationsSymbol][key] = annotation\n    }\n}\n\nfunction assertNotDecorated(prototype: object, annotation: Annotation, key: PropertyKey) {\n    if (__DEV__ && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        const currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '@${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already decorated with '@${currentAnnotationType}'.` +\n                `\\nRe-decorating fields is not allowed.` +\n                `\\nUse '@override' decorator for methods overriden by subclass.`\n        )\n    }\n}\n\n/**\n * Collects annotations from prototypes and stores them on target (instance)\n */\nexport function collectStoredAnnotations(target): AnnotationsMap<any, any> {\n    if (!hasProp(target, storedAnnotationsSymbol)) {\n        if (__DEV__ && !target[storedAnnotationsSymbol]) {\n            die(\n                `No annotations were passed to makeObservable, but no decorated members have been found either`\n            )\n        }\n        // We need a copy as we will remove annotation from the list once it's applied.\n        addHiddenProp(target, storedAnnotationsSymbol, { ...target[storedAnnotationsSymbol] })\n    }\n    return target[storedAnnotationsSymbol]\n}\n","import {\n    IDerivationState_,\n    IObservable,\n    IDerivation,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    noop,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    propagateChanged,\n    reportObserved,\n    startBatch,\n    Lambda\n} from \"../internal\"\n\nexport const $mobx = Symbol(\"mobx administration\")\n\nexport interface IAtom extends IObservable {\n    reportObserved(): boolean\n    reportChanged()\n}\n\nexport class Atom implements IAtom {\n    isPendingUnobservation_ = false // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n    isBeingObserved_ = false\n    observers_ = new Set<IDerivation>()\n\n    diffValue_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.NOT_TRACKING_\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    constructor(public name_ = __DEV__ ? \"Atom@\" + getNextId() : \"Atom\") {}\n\n    // onBecomeObservedListeners\n    public onBOL: Set<Lambda> | undefined\n    // onBecomeUnobservedListeners\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    public reportObserved(): boolean {\n        return reportObserved(this)\n    }\n\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    public reportChanged() {\n        startBatch()\n        propagateChanged(this)\n        endBatch()\n    }\n\n    toString() {\n        return this.name_\n    }\n}\n\nexport const isAtom = createInstanceofPredicate(\"Atom\", Atom)\n\nexport function createAtom(\n    name: string,\n    onBecomeObservedHandler: () => void = noop,\n    onBecomeUnobservedHandler: () => void = noop\n): IAtom {\n    const atom = new Atom(name)\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler)\n    }\n\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler)\n    }\n    return atom\n}\n","import {\n    deepEqual,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    isPlainObject,\n    observable,\n    die,\n    isAction,\n    autoAction,\n    flow,\n    isFlow,\n    isGenerator\n} from \"../internal\"\n\nexport interface IEnhancer<T> {\n    (newValue: T, oldValue: T | undefined, name: string): T\n}\n\nexport function deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v)) {\n        return v\n    }\n\n    // something that can be converted and mutated?\n    if (Array.isArray(v)) {\n        return observable.array(v, { name })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name })\n    }\n    if (typeof v === \"function\" && !isAction(v) && !isFlow(v)) {\n        if (isGenerator(v)) {\n            return flow(v)\n        } else {\n            return autoAction(name, v)\n        }\n    }\n    return v\n}\n\nexport function shallowEnhancer(v, _, name): any {\n    if (v === undefined || v === null) {\n        return v\n    }\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) {\n        return v\n    }\n    if (Array.isArray(v)) {\n        return observable.array(v, { name, deep: false })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name, deep: false })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name, deep: false })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name, deep: false })\n    }\n\n    if (__DEV__) {\n        die(\n            \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\"\n        )\n    }\n}\n\nexport function referenceEnhancer(newValue?) {\n    // never turn into an observable\n    return newValue\n}\n\nexport function refStructEnhancer(v, oldValue): any {\n    if (__DEV__ && isObservable(v)) {\n        die(`observable.struct should not be used with observable values`)\n    }\n    if (deepEqual(v, oldValue)) {\n        return oldValue\n    }\n    return v\n}\n","import { deepEqual } from \"../internal\"\n\nexport interface IEqualsComparer<T> {\n    (a: T, b: T): boolean\n}\n\nfunction identityComparer(a: any, b: any): boolean {\n    return a === b\n}\n\nfunction structuralComparer(a: any, b: any): boolean {\n    return deepEqual(a, b)\n}\n\nfunction shallowComparer(a: any, b: any): boolean {\n    return deepEqual(a, b, 1)\n}\n\nfunction defaultComparer(a: any, b: any): boolean {\n    if (Object.is) {\n        return Object.is(a, b)\n    }\n\n    return a === b ? a !== 0 || 1 / a === 1 / b : a !== a && b !== b\n}\n\nexport const comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n}\n","import {\n    die,\n    Annotation,\n    hasProp,\n    createDecoratorAnnotation,\n    ObservableObjectAdministration,\n    MakeResult\n} from \"../internal\"\n\nconst OVERRIDE = \"override\"\n\nexport const override: Annotation & PropertyDecorator = createDecoratorAnnotation({\n    annotationType_: OVERRIDE,\n    make_,\n    extend_\n})\n\nexport function isOverride(annotation: Annotation): boolean {\n    return annotation.annotationType_ === OVERRIDE\n}\n\nfunction make_(adm: ObservableObjectAdministration, key): MakeResult {\n    // Must not be plain object\n    if (__DEV__ && adm.isPlainObject_) {\n        die(\n            `Cannot apply '${this.annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${this.annotationType_}' cannot be used on plain objects.`\n        )\n    }\n    // Must override something\n    if (__DEV__ && !hasProp(adm.appliedAnnotations_!, key)) {\n        die(\n            `'${adm.name_}.${key.toString()}' is annotated with '${this.annotationType_}', ` +\n                `but no such annotated member was found on prototype.`\n        )\n    }\n    return MakeResult.Cancel\n}\n\nfunction extend_(adm, key, descriptor, proxyTrap): boolean {\n    die(`'${this.annotationType_}' can only be used with 'makeObservable'`)\n}\n","import {\n    ObservableObjectAdministration,\n    createAction,\n    isAction,\n    defineProperty,\n    die,\n    isFunction,\n    Annotation,\n    globalState,\n    MakeResult\n} from \"../internal\"\n\nexport function createActionAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // bound\n    if (this.options_?.bound) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Break\n    }\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    if (isAction(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false)\n    defineProperty(source, key, actionDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor)\n    return adm.defineProperty_(key, actionDescriptor, proxyTrap)\n}\n\nfunction assertActionDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a function value.`\n        )\n    }\n}\n\nexport function createActionDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n) {\n    assertActionDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    if (annotation.options_?.bound) {\n        value = value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return {\n        value: createAction(\n            annotation.options_?.name ?? key.toString(),\n            value,\n            annotation.options_?.autoAction ?? false,\n            // https://github.com/mobxjs/mobx/discussions/3140\n            annotation.options_?.bound ? adm.proxy_ ?? adm.target_ : undefined\n        ),\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    Annotation,\n    defineProperty,\n    die,\n    flow,\n    isFlow,\n    isFunction,\n    globalState,\n    MakeResult,\n    hasProp\n} from \"../internal\"\n\nexport function createFlowAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    // bound - must annotate protos to support super.flow()\n    if (this.options_?.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {\n        if (this.extend_(adm, key, descriptor, false) === null) {\n            return MakeResult.Cancel\n        }\n    }\n    if (isFlow(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false)\n    defineProperty(source, key, flowDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, this.options_?.bound)\n    return adm.defineProperty_(key, flowDescriptor, proxyTrap)\n}\n\nfunction assertFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a generator function value.`\n        )\n    }\n}\n\nfunction createFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    bound: boolean,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n): PropertyDescriptor {\n    assertFlowDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    // In case of flow.bound, the descriptor can be from already annotated prototype\n    if (!isFlow(value)) {\n        value = flow(value)\n    }\n    if (bound) {\n        // We do not keep original function around, so we bind the existing flow\n        value = value.bind(adm.proxy_ ?? adm.target_)\n        // This is normally set by `flow`, but `bind` returns new function...\n        value.isMobXFlow = true\n    }\n    return {\n        value,\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n","import { ObservableObjectAdministration, die, Annotation, MakeResult } from \"../internal\"\n\nexport function createComputedAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertComputedDescriptor(adm, this, key, descriptor)\n    return adm.defineComputedProperty_(\n        key,\n        {\n            ...this.options_,\n            get: descriptor.get,\n            set: descriptor.set\n        },\n        proxyTrap\n    )\n}\n\nfunction assertComputedDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { get }: PropertyDescriptor\n) {\n    if (__DEV__ && !get) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on getter(+setter) properties.`\n        )\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    deepEnhancer,\n    die,\n    Annotation,\n    MakeResult\n} from \"../internal\"\n\nexport function createObservableAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertObservableDescriptor(adm, this, key, descriptor)\n    return adm.defineObservableProperty_(\n        key,\n        descriptor.value,\n        this.options_?.enhancer ?? deepEnhancer,\n        proxyTrap\n    )\n}\n\nfunction assertObservableDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n) {\n    if (__DEV__ && !(\"value\" in descriptor)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' cannot be used on getter/setter properties`\n        )\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    observable,\n    Annotation,\n    defineProperty,\n    createAction,\n    globalState,\n    flow,\n    computed,\n    autoAction,\n    isGenerator,\n    MakeResult\n} from \"../internal\"\n\nconst AUTO = \"true\"\n\nexport const autoAnnotation: Annotation = createAutoAnnotation()\n\nexport function createAutoAnnotation(options?: object): Annotation {\n    return {\n        annotationType_: AUTO,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.make_(adm, key, descriptor, source)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.make_\n        const set = createAction(key.toString(), descriptor.set) as (v: any) => void\n        // own\n        if (source === adm.target_) {\n            return adm.defineProperty_(key, {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set\n            }) === null\n                ? MakeResult.Cancel\n                : MakeResult.Continue\n        }\n        // proto\n        defineProperty(source, key, {\n            configurable: true,\n            set\n        })\n        return MakeResult.Continue\n    }\n    // function on proto -> autoAction/flow\n    if (source !== adm.target_ && typeof descriptor.value === \"function\") {\n        if (isGenerator(descriptor.value)) {\n            const flowAnnotation = this.options_?.autoBind ? flow.bound : flow\n            return flowAnnotation.make_(adm, key, descriptor, source)\n        }\n        const actionAnnotation = this.options_?.autoBind ? autoAction.bound : autoAction\n        return actionAnnotation.make_(adm, key, descriptor, source)\n    }\n    // other -> observable\n    // Copy props from proto as well, see test:\n    // \"decorate should work with Object.create\"\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return observableAnnotation.make_(adm, key, descriptor, source)\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.extend_(adm, key, descriptor, proxyTrap)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.extend_\n        return adm.defineProperty_(\n            key,\n            {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set: createAction(key.toString(), descriptor.set) as (v: any) => void\n            },\n            proxyTrap\n        )\n    }\n    // other -> observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    return observableAnnotation.extend_(adm, key, descriptor, proxyTrap)\n}\n","import {\n    IEnhancer,\n    IEqualsComparer,\n    IObservableArray,\n    IObservableMapInitialValues,\n    IObservableSetInitialValues,\n    IObservableValue,\n    ObservableMap,\n    ObservableSet,\n    ObservableValue,\n    asDynamicObservableObject,\n    createObservableArray,\n    deepEnhancer,\n    extendObservable,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isPlainObject,\n    referenceEnhancer,\n    Annotation,\n    shallowEnhancer,\n    refStructEnhancer,\n    AnnotationsMap,\n    asObservableObject,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    createLegacyArray,\n    globalState,\n    assign,\n    isStringish,\n    createObservableAnnotation,\n    createAutoAnnotation\n} from \"../internal\"\n\nexport const OBSERVABLE = \"observable\"\nexport const OBSERVABLE_REF = \"observable.ref\"\nexport const OBSERVABLE_SHALLOW = \"observable.shallow\"\nexport const OBSERVABLE_STRUCT = \"observable.struct\"\n\nexport type CreateObservableOptions = {\n    name?: string\n    equals?: IEqualsComparer<any>\n    deep?: boolean\n    defaultDecorator?: Annotation\n    proxy?: boolean\n    autoBind?: boolean\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nexport const defaultCreateObservableOptions: CreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n}\nObject.freeze(defaultCreateObservableOptions)\n\nexport function asCreateObservableOptions(thing: any): CreateObservableOptions {\n    return thing || defaultCreateObservableOptions\n}\n\nconst observableAnnotation = createObservableAnnotation(OBSERVABLE)\nconst observableRefAnnotation = createObservableAnnotation(OBSERVABLE_REF, {\n    enhancer: referenceEnhancer\n})\nconst observableShallowAnnotation = createObservableAnnotation(OBSERVABLE_SHALLOW, {\n    enhancer: shallowEnhancer\n})\nconst observableStructAnnotation = createObservableAnnotation(OBSERVABLE_STRUCT, {\n    enhancer: refStructEnhancer\n})\nconst observableDecoratorAnnotation = createDecoratorAnnotation(observableAnnotation)\n\nexport function getEnhancerFromOptions(options: CreateObservableOptions): IEnhancer<any> {\n    return options.deep === true\n        ? deepEnhancer\n        : options.deep === false\n        ? referenceEnhancer\n        : getEnhancerFromAnnotation(options.defaultDecorator)\n}\n\nexport function getAnnotationFromOptions(\n    options?: CreateObservableOptions\n): Annotation | undefined {\n    return options ? options.defaultDecorator ?? createAutoAnnotation(options) : undefined\n}\n\nexport function getEnhancerFromAnnotation(annotation?: Annotation): IEnhancer<any> {\n    return !annotation ? deepEnhancer : annotation.options_?.enhancer ?? deepEnhancer\n}\n\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v: any, arg2?: any, arg3?: any) {\n    // @observable someProp;\n    if (isStringish(arg2)) {\n        storeAnnotation(v, arg2, observableAnnotation)\n        return\n    }\n\n    // already observable - ignore\n    if (isObservable(v)) {\n        return v\n    }\n\n    // plain object\n    if (isPlainObject(v)) {\n        return observable.object(v, arg2, arg3)\n    }\n\n    // Array\n    if (Array.isArray(v)) {\n        return observable.array(v, arg2)\n    }\n\n    // Map\n    if (isES6Map(v)) {\n        return observable.map(v, arg2)\n    }\n\n    // Set\n    if (isES6Set(v)) {\n        return observable.set(v, arg2)\n    }\n\n    // other object - ignore\n    if (typeof v === \"object\" && v !== null) {\n        return v\n    }\n\n    // anything else\n    return observable.box(v, arg2)\n}\nObject.assign(createObservable, observableDecoratorAnnotation)\n\nexport interface IObservableFactory extends Annotation, PropertyDecorator {\n    <T = any>(value: T[], options?: CreateObservableOptions): IObservableArray<T>\n    <T = any>(value: Set<T>, options?: CreateObservableOptions): ObservableSet<T>\n    <K = any, V = any>(value: Map<K, V>, options?: CreateObservableOptions): ObservableMap<K, V>\n    <T extends object>(\n        value: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T\n\n    box: <T = any>(value?: T, options?: CreateObservableOptions) => IObservableValue<T>\n    array: <T = any>(initialValues?: T[], options?: CreateObservableOptions) => IObservableArray<T>\n    set: <T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ) => ObservableSet<T>\n    map: <K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ) => ObservableMap<K, V>\n    object: <T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ) => T\n\n    /**\n     * Decorator that creates an observable that only observes the references, but doesn't try to turn the assigned value into an observable.ts.\n     */\n    ref: Annotation & PropertyDecorator\n    /**\n     * Decorator that creates an observable converts its value (objects, maps or arrays) into a shallow observable structure\n     */\n    shallow: Annotation & PropertyDecorator\n    deep: Annotation & PropertyDecorator\n    struct: Annotation & PropertyDecorator\n}\n\nconst observableFactories: IObservableFactory = {\n    box<T = any>(value?: T, options?: CreateObservableOptions): IObservableValue<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals)\n    },\n    array<T = any>(initialValues?: T[], options?: CreateObservableOptions): IObservableArray<T> {\n        const o = asCreateObservableOptions(options)\n        return (\n            globalState.useProxies === false || o.proxy === false\n                ? createLegacyArray\n                : createObservableArray\n        )(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    map<K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ): ObservableMap<K, V> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableMap<K, V>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    set<T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ): ObservableSet<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableSet<T>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    object<T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T {\n        return extendObservable(\n            globalState.useProxies === false || options?.proxy === false\n                ? asObservableObject({}, options)\n                : asDynamicObservableObject({}, options),\n            props,\n            decorators\n        )\n    },\n    ref: createDecoratorAnnotation(observableRefAnnotation),\n    shallow: createDecoratorAnnotation(observableShallowAnnotation),\n    deep: observableDecoratorAnnotation,\n    struct: createDecoratorAnnotation(observableStructAnnotation)\n} as any\n\n// eslint-disable-next-line\nexport var observable: IObservableFactory = assign(createObservable, observableFactories)\n","import {\n    ComputedValue,\n    IComputedValueOptions,\n    Annotation,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    isStringish,\n    isPlainObject,\n    isFunction,\n    die,\n    IComputedValue,\n    createComputedAnnotation,\n    comparer\n} from \"../internal\"\n\nexport const COMPUTED = \"computed\"\nexport const COMPUTED_STRUCT = \"computed.struct\"\n\nexport interface IComputedFactory extends Annotation, PropertyDecorator {\n    // @computed(opts)\n    <T>(options: IComputedValueOptions<T>): Annotation & PropertyDecorator\n    // computed(fn, opts)\n    <T>(func: () => T, options?: IComputedValueOptions<T>): IComputedValue<T>\n\n    struct: Annotation & PropertyDecorator\n}\n\nconst computedAnnotation = createComputedAnnotation(COMPUTED)\nconst computedStructAnnotation = createComputedAnnotation(COMPUTED_STRUCT, {\n    equals: comparer.structural\n})\n\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nexport const computed: IComputedFactory = function computed(arg1, arg2) {\n    if (isStringish(arg2)) {\n        // @computed\n        return storeAnnotation(arg1, arg2, computedAnnotation)\n    }\n    if (isPlainObject(arg1)) {\n        // @computed({ options })\n        return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1))\n    }\n\n    // computed(expr, options?)\n    if (__DEV__) {\n        if (!isFunction(arg1)) {\n            die(\"First argument to `computed` should be an expression.\")\n        }\n        if (isFunction(arg2)) {\n            die(\n                \"A setter as second argument is no longer supported, use `{ set: fn }` option instead\"\n            )\n        }\n    }\n    const opts: IComputedValueOptions<any> = isPlainObject(arg2) ? arg2 : {}\n    opts.get = arg1\n    opts.name ||= arg1.name || \"\" /* for generated name */\n\n    return new ComputedValue(opts)\n} as any\n\nObject.assign(computed, computedAnnotation)\n\ncomputed.struct = createDecoratorAnnotation(computedStructAnnotation)\n","import {\n    IDerivation,\n    endBatch,\n    globalState,\n    isSpyEnabled,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    untrackedEnd,\n    untrackedStart,\n    isFunction,\n    allowStateReadsStart,\n    allowStateReadsEnd,\n    ACTION,\n    EMPTY_ARRAY,\n    die,\n    getDescriptor\n} from \"../internal\"\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nlet currentActionId = 0\nlet nextActionId = 1\nconst isFunctionNameConfigurable = getDescriptor(() => {}, \"name\")?.configurable ?? false\n\n// we can safely recycle this object\nconst tmpNameDescriptor: PropertyDescriptor = {\n    value: \"action\",\n    configurable: true,\n    writable: false,\n    enumerable: false\n}\n\nexport function createAction(\n    actionName: string,\n    fn: Function,\n    autoAction: boolean = false,\n    ref?: Object\n): Function {\n    if (__DEV__) {\n        if (!isFunction(fn)) {\n            die(\"`action` can only be invoked on functions\")\n        }\n        if (typeof actionName !== \"string\" || !actionName) {\n            die(`actions should have valid names, got: '${actionName}'`)\n        }\n    }\n    function res() {\n        return executeAction(actionName, autoAction, fn, ref || this, arguments)\n    }\n    res.isMobxAction = true\n    if (isFunctionNameConfigurable) {\n        tmpNameDescriptor.value = actionName\n        Object.defineProperty(res, \"name\", tmpNameDescriptor)\n    }\n    return res\n}\n\nexport function executeAction(\n    actionName: string,\n    canRunAsDerivation: boolean,\n    fn: Function,\n    scope?: any,\n    args?: IArguments\n) {\n    const runInfo = _startAction(actionName, canRunAsDerivation, scope, args)\n    try {\n        return fn.apply(scope, args)\n    } catch (err) {\n        runInfo.error_ = err\n        throw err\n    } finally {\n        _endAction(runInfo)\n    }\n}\n\nexport interface IActionRunInfo {\n    prevDerivation_: IDerivation | null\n    prevAllowStateChanges_: boolean\n    prevAllowStateReads_: boolean\n    notifySpy_: boolean\n    startTime_: number\n    error_?: any\n    parentActionId_: number\n    actionId_: number\n    runAsAction_?: boolean\n}\n\nexport function _startAction(\n    actionName: string,\n    canRunAsDerivation: boolean, // true for autoAction\n    scope: any,\n    args?: IArguments\n): IActionRunInfo {\n    const notifySpy_ = __DEV__ && isSpyEnabled() && !!actionName\n    let startTime_: number = 0\n    if (__DEV__ && notifySpy_) {\n        startTime_ = Date.now()\n        const flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY\n        spyReportStart({\n            type: ACTION,\n            name: actionName,\n            object: scope,\n            arguments: flattenedArgs\n        })\n    }\n    const prevDerivation_ = globalState.trackingDerivation\n    const runAsAction = !canRunAsDerivation || !prevDerivation_\n    startBatch()\n    let prevAllowStateChanges_ = globalState.allowStateChanges // by default preserve previous allow\n    if (runAsAction) {\n        untrackedStart()\n        prevAllowStateChanges_ = allowStateChangesStart(true)\n    }\n    const prevAllowStateReads_ = allowStateReadsStart(true)\n    const runInfo = {\n        runAsAction_: runAsAction,\n        prevDerivation_,\n        prevAllowStateChanges_,\n        prevAllowStateReads_,\n        notifySpy_,\n        startTime_,\n        actionId_: nextActionId++,\n        parentActionId_: currentActionId\n    }\n    currentActionId = runInfo.actionId_\n    return runInfo\n}\n\nexport function _endAction(runInfo: IActionRunInfo) {\n    if (currentActionId !== runInfo.actionId_) {\n        die(30)\n    }\n    currentActionId = runInfo.parentActionId_\n\n    if (runInfo.error_ !== undefined) {\n        globalState.suppressReactionErrors = true\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges_)\n    allowStateReadsEnd(runInfo.prevAllowStateReads_)\n    endBatch()\n    if (runInfo.runAsAction_) {\n        untrackedEnd(runInfo.prevDerivation_)\n    }\n    if (__DEV__ && runInfo.notifySpy_) {\n        spyReportEnd({ time: Date.now() - runInfo.startTime_ })\n    }\n    globalState.suppressReactionErrors = false\n}\n\nexport function allowStateChanges<T>(allowStateChanges: boolean, func: () => T): T {\n    const prev = allowStateChangesStart(allowStateChanges)\n    try {\n        return func()\n    } finally {\n        allowStateChangesEnd(prev)\n    }\n}\n\nexport function allowStateChangesStart(allowStateChanges: boolean) {\n    const prev = globalState.allowStateChanges\n    globalState.allowStateChanges = allowStateChanges\n    return prev\n}\n\nexport function allowStateChangesEnd(prev: boolean) {\n    globalState.allowStateChanges = prev\n}\n","import {\n    Atom,\n    IEnhancer,\n    IInterceptable,\n    IEqualsComparer,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    checkIfStateModificationsAreAllowed,\n    comparer,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    toPrimitive,\n    globalState,\n    IUNCHANGED,\n    UPDATE\n} from \"../internal\"\n\nexport interface IValueWillChange<T> {\n    object: IObservableValue<T>\n    type: \"update\"\n    newValue: T\n}\n\nexport type IValueDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"value\"\n    object: IObservableValue<T>\n    debugObjectName: string\n    newValue: unknown\n    oldValue: unknown\n}\nexport type IBoxDidChange<T = any> =\n    | {\n          type: \"create\"\n          observableKind: \"value\"\n          object: IObservableValue<T>\n          debugObjectName: string\n          newValue: unknown\n      }\n    | IValueDidChange<T>\n\nexport interface IObservableValue<T> {\n    get(): T\n    set(value: T): void\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nconst CREATE = \"create\"\n\nexport class ObservableValue<T>\n    extends Atom\n    implements IObservableValue<T>, IInterceptable<IValueWillChange<T>>, IListenable\n{\n    hasUnreportedChange_ = false\n    interceptors_\n    changeListeners_\n    value_\n    dehancer: any\n\n    constructor(\n        value: T,\n        public enhancer: IEnhancer<T>,\n        public name_ = __DEV__ ? \"ObservableValue@\" + getNextId() : \"ObservableValue\",\n        notifySpy = true,\n        private equals: IEqualsComparer<any> = comparer.default\n    ) {\n        super(name_)\n        this.value_ = enhancer(value, undefined, name_)\n        if (__DEV__ && notifySpy && isSpyEnabled()) {\n            // only notify spy if this is a stand-alone observable\n            spyReport({\n                type: CREATE,\n                object: this,\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                newValue: \"\" + this.value_\n            })\n        }\n    }\n\n    private dehanceValue(value: T): T {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    public set(newValue: T) {\n        const oldValue = this.value_\n        newValue = this.prepareNewValue_(newValue) as any\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            if (__DEV__ && notifySpy) {\n                spyReportStart({\n                    type: UPDATE,\n                    object: this,\n                    observableKind: \"value\",\n                    debugObjectName: this.name_,\n                    newValue,\n                    oldValue\n                })\n            }\n            this.setNewValue_(newValue)\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private prepareNewValue_(newValue): T | IUNCHANGED {\n        checkIfStateModificationsAreAllowed(this)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IValueWillChange<T>>(this, {\n                object: this,\n                type: UPDATE,\n                newValue\n            })\n            if (!change) {\n                return globalState.UNCHANGED\n            }\n            newValue = change.newValue\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value_, this.name_)\n        return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue\n    }\n\n    setNewValue_(newValue: T) {\n        const oldValue = this.value_\n        this.value_ = newValue\n        this.reportChanged()\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: UPDATE,\n                object: this,\n                newValue,\n                oldValue\n            })\n        }\n    }\n\n    public get(): T {\n        this.reportObserved()\n        return this.dehanceValue(this.value_)\n    }\n\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        if (fireImmediately) {\n            listener({\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                object: this,\n                type: UPDATE,\n                newValue: this.value_,\n                oldValue: undefined\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    raw() {\n        // used by MST ot get undehanced value\n        return this.value_\n    }\n\n    toJSON() {\n        return this.get()\n    }\n\n    toString() {\n        return `${this.name_}[${this.value_}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue) as (\n    x: any\n) => x is IObservableValue<any>\n","import {\n    CaughtException,\n    IDerivation,\n    IDerivationState_,\n    IEqualsComparer,\n    IObservable,\n    Lambda,\n    TraceMode,\n    autorun,\n    clearObserving,\n    comparer,\n    createAction,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    propagateChangeConfirmed,\n    propagateMaybeChanged,\n    reportObserved,\n    shouldCompute,\n    spyReport,\n    startBatch,\n    toPrimitive,\n    trackDerivedFunction,\n    untrackedEnd,\n    untrackedStart,\n    UPDATE,\n    die,\n    allowStateChangesStart,\n    allowStateChangesEnd\n} from \"../internal\"\n\nexport interface IComputedValue<T> {\n    get(): T\n    set(value: T): void\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nexport interface IComputedValueOptions<T> {\n    get?: () => T\n    set?: (value: T) => void\n    name?: string\n    equals?: IEqualsComparer<T>\n    context?: any\n    requiresReaction?: boolean\n    keepAlive?: boolean\n}\n\nexport type IComputedDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"computed\"\n    object: unknown\n    debugObjectName: string\n    newValue: T\n    oldValue: T | undefined\n}\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nexport class ComputedValue<T> implements IObservable, IComputedValue<T>, IDerivation {\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_ = null // during tracking it's an array with new observed observers\n    isBeingObserved_ = false\n    isPendingUnobservation_: boolean = false\n    observers_ = new Set<IDerivation>()\n    diffValue_ = 0\n    runId_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    unboundDepsCount_ = 0\n    protected value_: T | undefined | CaughtException = new CaughtException(null)\n    name_: string\n    triggeredBy_?: string\n    isComputing_: boolean = false // to check for cycles\n    isRunningSetter_: boolean = false\n    derivation: () => T // N.B: unminified as it is used by MST\n    setter_?: (value: T) => void\n    isTracing_: TraceMode = TraceMode.NONE\n    scope_: Object | undefined\n    private equals_: IEqualsComparer<any>\n    private requiresReaction_: boolean | undefined\n    keepAlive_: boolean\n\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    constructor(options: IComputedValueOptions<T>) {\n        if (!options.get) {\n            die(31)\n        }\n        this.derivation = options.get!\n        this.name_ = options.name || (__DEV__ ? \"ComputedValue@\" + getNextId() : \"ComputedValue\")\n        if (options.set) {\n            this.setter_ = createAction(\n                __DEV__ ? this.name_ + \"-setter\" : \"ComputedValue-setter\",\n                options.set\n            ) as any\n        }\n        this.equals_ =\n            options.equals ||\n            ((options as any).compareStructural || (options as any).struct\n                ? comparer.structural\n                : comparer.default)\n        this.scope_ = options.context\n        this.requiresReaction_ = options.requiresReaction\n        this.keepAlive_ = !!options.keepAlive\n    }\n\n    onBecomeStale_() {\n        propagateMaybeChanged(this)\n    }\n\n    public onBOL: Set<Lambda> | undefined\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    public get(): T {\n        if (this.isComputing_) {\n            die(32, this.name_, this.derivation)\n        }\n        if (\n            globalState.inBatch === 0 &&\n            // !globalState.trackingDerivatpion &&\n            this.observers_.size === 0 &&\n            !this.keepAlive_\n        ) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead_()\n                startBatch() // See perf test 'computed memoization'\n                this.value_ = this.computeValue_(false)\n                endBatch()\n            }\n        } else {\n            reportObserved(this)\n            if (shouldCompute(this)) {\n                let prevTrackingContext = globalState.trackingContext\n                if (this.keepAlive_ && !prevTrackingContext) {\n                    globalState.trackingContext = this\n                }\n                if (this.trackAndCompute()) {\n                    propagateChangeConfirmed(this)\n                }\n                globalState.trackingContext = prevTrackingContext\n            }\n        }\n        const result = this.value_!\n\n        if (isCaughtException(result)) {\n            throw result.cause\n        }\n        return result\n    }\n\n    public set(value: T) {\n        if (this.setter_) {\n            if (this.isRunningSetter_) {\n                die(33, this.name_)\n            }\n            this.isRunningSetter_ = true\n            try {\n                this.setter_.call(this.scope_, value)\n            } finally {\n                this.isRunningSetter_ = false\n            }\n        } else {\n            die(34, this.name_)\n        }\n    }\n\n    trackAndCompute(): boolean {\n        // N.B: unminified as it is used by MST\n        const oldValue = this.value_\n        const wasSuspended =\n            /* see #1208 */ this.dependenciesState_ === IDerivationState_.NOT_TRACKING_\n        const newValue = this.computeValue_(true)\n\n        const changed =\n            wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals_(oldValue, newValue)\n\n        if (changed) {\n            this.value_ = newValue\n\n            if (__DEV__ && isSpyEnabled()) {\n                spyReport({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    object: this.scope_,\n                    type: \"update\",\n                    oldValue,\n                    newValue\n                } as IComputedDidChange)\n            }\n        }\n\n        return changed\n    }\n\n    computeValue_(track: boolean) {\n        this.isComputing_ = true\n        // don't allow state changes during computation\n        const prev = allowStateChangesStart(false)\n        let res: T | CaughtException\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope_)\n        } else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope_)\n            } else {\n                try {\n                    res = this.derivation.call(this.scope_)\n                } catch (e) {\n                    res = new CaughtException(e)\n                }\n            }\n        }\n        allowStateChangesEnd(prev)\n        this.isComputing_ = false\n        return res\n    }\n\n    suspend_() {\n        if (!this.keepAlive_) {\n            clearObserving(this)\n            this.value_ = undefined // don't hold on to computed value!\n            if (__DEV__ && this.isTracing_ !== TraceMode.NONE) {\n                console.log(\n                    `[mobx.trace] Computed value '${this.name_}' was suspended and it will recompute on the next access.`\n                )\n            }\n        }\n    }\n\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        let firstTime = true\n        let prevValue: T | undefined = undefined\n        return autorun(() => {\n            // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place\n            let newValue = this.get()\n            if (!firstTime || fireImmediately) {\n                const prevU = untrackedStart()\n                listener({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    type: UPDATE,\n                    object: this,\n                    newValue,\n                    oldValue: prevValue\n                })\n                untrackedEnd(prevU)\n            }\n            firstTime = false\n            prevValue = newValue\n        })\n    }\n\n    warnAboutUntrackedRead_() {\n        if (!__DEV__) {\n            return\n        }\n        if (this.isTracing_ !== TraceMode.NONE) {\n            console.log(\n                `[mobx.trace] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n        if (\n            typeof this.requiresReaction_ === \"boolean\"\n                ? this.requiresReaction_\n                : globalState.computedRequiresReaction\n        ) {\n            console.warn(\n                `[mobx] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n    }\n\n    toString() {\n        return `${this.name_}[${this.derivation.toString()}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue)\n","import {\n    IAtom,\n    IDepTreeNode,\n    IObservable,\n    addObserver,\n    globalState,\n    isComputedValue,\n    removeObserver\n} from \"../internal\"\n\nexport enum IDerivationState_ {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    NOT_TRACKING_ = -1,\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    UP_TO_DATE_ = 0,\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    POSSIBLY_STALE_ = 1,\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    STALE_ = 2\n}\n\nexport enum TraceMode {\n    NONE,\n    LOG,\n    BREAK\n}\n\n/**\n * A derivation is everything that can be derived from the state (all the atoms) in a pure manner.\n * See https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n */\nexport interface IDerivation extends IDepTreeNode {\n    observing_: IObservable[]\n    newObserving_: null | IObservable[]\n    dependenciesState_: IDerivationState_\n    /**\n     * Id of the current run of a derivation. Each time the derivation is tracked\n     * this number is increased by one. This number is globally unique\n     */\n    runId_: number\n    /**\n     * amount of dependencies used by the derivation in this run, which has not been bound yet.\n     */\n    unboundDepsCount_: number\n    onBecomeStale_(): void\n    isTracing_: TraceMode\n\n    /**\n     *  warn if the derivation has no dependencies after creation/update\n     */\n    requiresObservable_?: boolean\n}\n\nexport class CaughtException {\n    constructor(public cause: any) {\n        // Empty\n    }\n}\n\nexport function isCaughtException(e: any): e is CaughtException {\n    return e instanceof CaughtException\n}\n\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nexport function shouldCompute(derivation: IDerivation): boolean {\n    switch (derivation.dependenciesState_) {\n        case IDerivationState_.UP_TO_DATE_:\n            return false\n        case IDerivationState_.NOT_TRACKING_:\n        case IDerivationState_.STALE_:\n            return true\n        case IDerivationState_.POSSIBLY_STALE_: {\n            // state propagation can occur outside of action/reactive context #2195\n            const prevAllowStateReads = allowStateReadsStart(true)\n            const prevUntracked = untrackedStart() // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            const obs = derivation.observing_,\n                l = obs.length\n            for (let i = 0; i < l; i++) {\n                const obj = obs[i]\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get()\n                    } else {\n                        try {\n                            obj.get()\n                        } catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked)\n                            allowStateReadsEnd(prevAllowStateReads)\n                            return true\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if ((derivation.dependenciesState_ as any) === IDerivationState_.STALE_) {\n                        untrackedEnd(prevUntracked)\n                        allowStateReadsEnd(prevAllowStateReads)\n                        return true\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation)\n            untrackedEnd(prevUntracked)\n            allowStateReadsEnd(prevAllowStateReads)\n            return false\n        }\n    }\n}\n\nexport function isComputingDerivation() {\n    return globalState.trackingDerivation !== null // filter out actions inside computations\n}\n\nexport function checkIfStateModificationsAreAllowed(atom: IAtom) {\n    if (!__DEV__) {\n        return\n    }\n    const hasObservers = atom.observers_.size > 0\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (\n        !globalState.allowStateChanges &&\n        (hasObservers || globalState.enforceActions === \"always\")\n    ) {\n        console.warn(\n            \"[MobX] \" +\n                (globalState.enforceActions\n                    ? \"Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: \"\n                    : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: \") +\n                atom.name_\n        )\n    }\n}\n\nexport function checkIfStateReadsAreAllowed(observable: IObservable) {\n    if (__DEV__ && !globalState.allowStateReads && globalState.observableRequiresReaction) {\n        console.warn(\n            `[mobx] Observable '${observable.name_}' being read outside a reactive context.`\n        )\n    }\n}\n\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nexport function trackDerivedFunction<T>(derivation: IDerivation, f: () => T, context: any) {\n    const prevAllowStateReads = allowStateReadsStart(true)\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation)\n    derivation.newObserving_ = new Array(derivation.observing_.length + 100)\n    derivation.unboundDepsCount_ = 0\n    derivation.runId_ = ++globalState.runId\n    const prevTracking = globalState.trackingDerivation\n    globalState.trackingDerivation = derivation\n    globalState.inBatch++\n    let result\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context)\n    } else {\n        try {\n            result = f.call(context)\n        } catch (e) {\n            result = new CaughtException(e)\n        }\n    }\n    globalState.inBatch--\n    globalState.trackingDerivation = prevTracking\n    bindDependencies(derivation)\n\n    warnAboutDerivationWithoutDependencies(derivation)\n    allowStateReadsEnd(prevAllowStateReads)\n    return result\n}\n\nfunction warnAboutDerivationWithoutDependencies(derivation: IDerivation) {\n    if (!__DEV__) {\n        return\n    }\n\n    if (derivation.observing_.length !== 0) {\n        return\n    }\n\n    if (\n        typeof derivation.requiresObservable_ === \"boolean\"\n            ? derivation.requiresObservable_\n            : globalState.reactionRequiresObservable\n    ) {\n        console.warn(\n            `[mobx] Derivation '${derivation.name_}' is created/updated without reading any observable value.`\n        )\n    }\n}\n\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation: IDerivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    const prevObserving = derivation.observing_\n    const observing = (derivation.observing_ = derivation.newObserving_!)\n    let lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_\n\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    let i0 = 0,\n        l = derivation.unboundDepsCount_\n    for (let i = 0; i < l; i++) {\n        const dep = observing[i]\n        if (dep.diffValue_ === 0) {\n            dep.diffValue_ = 1\n            if (i0 !== i) {\n                observing[i0] = dep\n            }\n            i0++\n        }\n\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if ((dep as any as IDerivation).dependenciesState_ > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = (dep as any as IDerivation).dependenciesState_\n        }\n    }\n    observing.length = i0\n\n    derivation.newObserving_ = null // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length\n    while (l--) {\n        const dep = prevObserving[l]\n        if (dep.diffValue_ === 0) {\n            removeObserver(dep, derivation)\n        }\n        dep.diffValue_ = 0\n    }\n\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        const dep = observing[i0]\n        if (dep.diffValue_ === 1) {\n            dep.diffValue_ = 0\n            addObserver(dep, derivation)\n        }\n    }\n\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {\n        derivation.dependenciesState_ = lowestNewObservingDerivationState\n        derivation.onBecomeStale_()\n    }\n}\n\nexport function clearObserving(derivation: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    const obs = derivation.observing_\n    derivation.observing_ = []\n    let i = obs.length\n    while (i--) {\n        removeObserver(obs[i], derivation)\n    }\n\n    derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_\n}\n\nexport function untracked<T>(action: () => T): T {\n    const prev = untrackedStart()\n    try {\n        return action()\n    } finally {\n        untrackedEnd(prev)\n    }\n}\n\nexport function untrackedStart(): IDerivation | null {\n    const prev = globalState.trackingDerivation\n    globalState.trackingDerivation = null\n    return prev\n}\n\nexport function untrackedEnd(prev: IDerivation | null) {\n    globalState.trackingDerivation = prev\n}\n\nexport function allowStateReadsStart(allowStateReads: boolean) {\n    const prev = globalState.allowStateReads\n    globalState.allowStateReads = allowStateReads\n    return prev\n}\n\nexport function allowStateReadsEnd(prev: boolean) {\n    globalState.allowStateReads = prev\n}\n\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nexport function changeDependenciesStateTo0(derivation: IDerivation) {\n    if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_\n\n    const obs = derivation.observing_\n    let i = obs.length\n    while (i--) {\n        obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    }\n}\n","import { IDerivation, IObservable, Reaction, die, getGlobal } from \"../internal\"\nimport { ComputedValue } from \"./computedvalue\"\n\n/**\n * These values will persist if global state is reset\n */\nconst persistentKeys: (keyof MobXGlobals)[] = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\",\n    \"useProxies\"\n]\n\nexport type IUNCHANGED = {}\n\nexport class MobXGlobals {\n    /**\n     * MobXGlobals version.\n     * MobX compatiblity with other versions loaded in memory as long as this version matches.\n     * It indicates that the global state still stores similar information\n     *\n     * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n     * internal state storage of MobX, and can be the same across many different package versions\n     */\n    version = 6\n\n    /**\n     * globally unique token to signal unchanged\n     */\n    UNCHANGED: IUNCHANGED = {}\n\n    /**\n     * Currently running derivation\n     */\n    trackingDerivation: IDerivation | null = null\n\n    /**\n     * Currently running reaction. This determines if we currently have a reactive context.\n     * (Tracking derivation is also set for temporal tracking of computed values inside actions,\n     * but trackingReaction can only be set by a form of Reaction)\n     */\n    trackingContext: Reaction | ComputedValue<any> | null = null\n\n    /**\n     * Each time a derivation is tracked, it is assigned a unique run-id\n     */\n    runId = 0\n\n    /**\n     * 'guid' for general purpose. Will be persisted amongst resets.\n     */\n    mobxGuid = 0\n\n    /**\n     * Are we in a batch block? (and how many of them)\n     */\n    inBatch: number = 0\n\n    /**\n     * Observables that don't have observers anymore, and are about to be\n     * suspended, unless somebody else accesses it in the same batch\n     *\n     * @type {IObservable[]}\n     */\n    pendingUnobservations: IObservable[] = []\n\n    /**\n     * List of scheduled, not yet executed, reactions.\n     */\n    pendingReactions: Reaction[] = []\n\n    /**\n     * Are we currently processing reactions?\n     */\n    isRunningReactions = false\n\n    /**\n     * Is it allowed to change observables at this point?\n     * In general, MobX doesn't allow that when running computations and React.render.\n     * To ensure that those functions stay pure.\n     */\n    allowStateChanges = false\n\n    /**\n     * Is it allowed to read observables at this point?\n     * Used to hold the state needed for `observableRequiresReaction`\n     */\n    allowStateReads = true\n\n    /**\n     * If strict mode is enabled, state changes are by default not allowed\n     */\n    enforceActions: boolean | \"always\" = true\n\n    /**\n     * Spy callbacks\n     */\n    spyListeners: { (change: any): void }[] = []\n\n    /**\n     * Globally attached error handlers that react specifically to errors in reactions\n     */\n    globalReactionErrorHandlers: ((error: any, derivation: IDerivation) => void)[] = []\n\n    /**\n     * Warn if computed values are accessed outside a reactive context\n     */\n    computedRequiresReaction = false\n\n    /**\n     * (Experimental)\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable = false\n\n    /**\n     * (Experimental)\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction = false\n\n    /*\n     * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n     * the stack when an exception occurs while debugging.\n     */\n    disableErrorBoundaries = false\n\n    /*\n     * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n     * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n     */\n    suppressReactionErrors = false\n\n    useProxies = true\n    /*\n     * print warnings about code that would fail if proxies weren't available\n     */\n    verifyProxies = false\n\n    /**\n     * False forces all object's descriptors to\n     * writable: true\n     * configurable: true\n     */\n    safeDescriptors = true\n}\n\nlet canMergeGlobalState = true\nlet isolateCalled = false\n\nexport let globalState: MobXGlobals = (function () {\n    let global = getGlobal()\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) {\n        canMergeGlobalState = false\n    }\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) {\n        canMergeGlobalState = false\n    }\n\n    if (!canMergeGlobalState) {\n        // Because this is a IIFE we need to let isolateCalled a chance to change\n        // so we run it after the event loop completed at least 1 iteration\n        setTimeout(() => {\n            if (!isolateCalled) {\n                die(35)\n            }\n        }, 1)\n        return new MobXGlobals()\n    } else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1\n        if (!global.__mobxGlobals.UNCHANGED) {\n            global.__mobxGlobals.UNCHANGED = {}\n        } // make merge backward compatible\n        return global.__mobxGlobals\n    } else {\n        global.__mobxInstanceCount = 1\n        return (global.__mobxGlobals = new MobXGlobals())\n    }\n})()\n\nexport function isolateGlobalState() {\n    if (\n        globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions\n    ) {\n        die(36)\n    }\n    isolateCalled = true\n    if (canMergeGlobalState) {\n        let global = getGlobal()\n        if (--global.__mobxInstanceCount === 0) {\n            global.__mobxGlobals = undefined\n        }\n        globalState = new MobXGlobals()\n    }\n}\n\nexport function getGlobalState(): any {\n    return globalState\n}\n\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nexport function resetGlobalState() {\n    const defaultGlobals = new MobXGlobals()\n    for (let key in defaultGlobals) {\n        if (persistentKeys.indexOf(key as any) === -1) {\n            globalState[key] = defaultGlobals[key]\n        }\n    }\n    globalState.allowStateChanges = !globalState.enforceActions\n}\n","import {\n    Lambda,\n    ComputedValue,\n    IDependencyTree,\n    IDerivation,\n    IDerivationState_,\n    TraceMode,\n    getDependencyTree,\n    globalState,\n    runReactions,\n    checkIfStateReadsAreAllowed\n} from \"../internal\"\n\nexport interface IDepTreeNode {\n    name_: string\n    observing_?: IObservable[]\n}\n\nexport interface IObservable extends IDepTreeNode {\n    diffValue_: number\n    /**\n     * Id of the derivation *run* that last accessed this observable.\n     * If this id equals the *run* id of the current derivation,\n     * the dependency is already established\n     */\n    lastAccessedBy_: number\n    isBeingObserved_: boolean\n\n    lowestObserverState_: IDerivationState_ // Used to avoid redundant propagations\n    isPendingUnobservation_: boolean // Used to push itself to global.pendingUnobservations at most once per batch.\n\n    observers_: Set<IDerivation>\n\n    onBUO(): void\n    onBO(): void\n\n    onBUOL: Set<Lambda> | undefined\n    onBOL: Set<Lambda> | undefined\n}\n\nexport function hasObservers(observable: IObservable): boolean {\n    return observable.observers_ && observable.observers_.size > 0\n}\n\nexport function getObservers(observable: IObservable): Set<IDerivation> {\n    return observable.observers_\n}\n\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nexport function addObserver(observable: IObservable, node: IDerivation) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n\n    observable.observers_.add(node)\n    if (observable.lowestObserverState_ > node.dependenciesState_) {\n        observable.lowestObserverState_ = node.dependenciesState_\n    }\n\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\n\nexport function removeObserver(observable: IObservable, node: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers_.delete(node)\n    if (observable.observers_.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable)\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\n\nexport function queueForUnobservation(observable: IObservable) {\n    if (observable.isPendingUnobservation_ === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation_ = true\n        globalState.pendingUnobservations.push(observable)\n    }\n}\n\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nexport function startBatch() {\n    globalState.inBatch++\n}\n\nexport function endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions()\n        // the batch is actually about to finish, all unobserving should happen here.\n        const list = globalState.pendingUnobservations\n        for (let i = 0; i < list.length; i++) {\n            const observable = list[i]\n            observable.isPendingUnobservation_ = false\n            if (observable.observers_.size === 0) {\n                if (observable.isBeingObserved_) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved_ = false\n                    observable.onBUO()\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend_()\n                }\n            }\n        }\n        globalState.pendingUnobservations = []\n    }\n}\n\nexport function reportObserved(observable: IObservable): boolean {\n    checkIfStateReadsAreAllowed(observable)\n\n    const derivation = globalState.trackingDerivation\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId_ !== observable.lastAccessedBy_) {\n            observable.lastAccessedBy_ = derivation.runId_\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving_![derivation.unboundDepsCount_++] = observable\n            if (!observable.isBeingObserved_ && globalState.trackingContext) {\n                observable.isBeingObserved_ = true\n                observable.onBO()\n            }\n        }\n        return true\n    } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable)\n    }\n\n    return false\n}\n\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n\n// Called by Atom when its value changes\nexport function propagateChanged(observable: IObservable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n            d.onBecomeStale_()\n        }\n        d.dependenciesState_ = IDerivationState_.STALE_\n    })\n    // invariantLOS(observable, \"changed end\");\n}\n\n// Called by ComputedValue when it recalculate and its value changed\nexport function propagateChangeConfirmed(observable: IObservable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {\n            d.dependenciesState_ = IDerivationState_.STALE_\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n        } else if (\n            d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.\n        ) {\n            observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n        }\n    })\n    // invariantLOS(observable, \"confirmed end\");\n}\n\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nexport function propagateMaybeChanged(observable: IObservable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_\n            d.onBecomeStale_()\n        }\n    })\n    // invariantLOS(observable, \"maybe end\");\n}\n\nfunction logTraceInfo(derivation: IDerivation, observable: IObservable) {\n    console.log(\n        `[mobx.trace] '${derivation.name_}' is invalidated due to a change in: '${observable.name_}'`\n    )\n    if (derivation.isTracing_ === TraceMode.BREAK) {\n        const lines = []\n        printDepTree(getDependencyTree(derivation), lines, 1)\n\n        // prettier-ignore\n        new Function(\n`debugger;\n/*\nTracing '${derivation.name_}'\n\nYou are entering this break point because derivation '${derivation.name_}' is being traced and '${observable.name_}' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n${derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\"}\n\nThe dependencies for this derivation are:\n\n${lines.join(\"\\n\")}\n*/\n    `)()\n    }\n}\n\nfunction printDepTree(tree: IDependencyTree, lines: string[], depth: number) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\")\n        return\n    }\n    lines.push(`${\"\\t\".repeat(depth - 1)}${tree.name}`)\n    if (tree.dependencies) {\n        tree.dependencies.forEach(child => printDepTree(child, lines, depth + 1))\n    }\n}\n","import {\n    $mobx,\n    IDerivation,\n    IDerivationState_,\n    IObservable,\n    Lambda,\n    TraceMode,\n    clearObserving,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    shouldCompute,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    trace,\n    trackDerivedFunction\n} from \"../internal\"\n\n/**\n * Reactions are a special kind of derivations. Several things distinguishes them from normal reactive computations\n *\n * 1) They will always run, whether they are used by other computations or not.\n * This means that they are very suitable for triggering side effects like logging, updating the DOM and making network requests.\n * 2) They are not observable themselves\n * 3) They will always run after any 'normal' derivations\n * 4) They are allowed to change the state and thereby triggering themselves again, as long as they make sure the state propagates to a stable state in a reasonable amount of iterations.\n *\n * The state machine of a Reaction is as follows:\n *\n * 1) after creating, the reaction should be started by calling `runReaction` or by scheduling it (see also `autorun`)\n * 2) the `onInvalidate` handler should somehow result in a call to `this.track(someFunction)`\n * 3) all observables accessed in `someFunction` will be observed by this reaction.\n * 4) as soon as some of the dependencies has changed the Reaction will be rescheduled for another run (after the current mutation or transaction). `isScheduled` will yield true once a dependency is stale and during this period\n * 5) `onInvalidate` will be called, and we are back at step 1.\n *\n */\n\nexport interface IReactionPublic {\n    dispose(): void\n    trace(enterBreakPoint?: boolean): void\n}\n\nexport interface IReactionDisposer {\n    (): void\n    $mobx: Reaction\n}\n\nexport class Reaction implements IDerivation, IReactionPublic {\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_: IObservable[] = []\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    diffValue_ = 0\n    runId_ = 0\n    unboundDepsCount_ = 0\n    isDisposed_ = false\n    isScheduled_ = false\n    isTrackPending_ = false\n    isRunning_ = false\n    isTracing_: TraceMode = TraceMode.NONE\n\n    constructor(\n        public name_: string = __DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\",\n        private onInvalidate_: () => void,\n        private errorHandler_?: (error: any, derivation: IDerivation) => void,\n        public requiresObservable_?\n    ) {}\n\n    onBecomeStale_() {\n        this.schedule_()\n    }\n\n    schedule_() {\n        if (!this.isScheduled_) {\n            this.isScheduled_ = true\n            globalState.pendingReactions.push(this)\n            runReactions()\n        }\n    }\n\n    isScheduled() {\n        return this.isScheduled_\n    }\n\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    runReaction_() {\n        if (!this.isDisposed_) {\n            startBatch()\n            this.isScheduled_ = false\n            const prev = globalState.trackingContext\n            globalState.trackingContext = this\n            if (shouldCompute(this)) {\n                this.isTrackPending_ = true\n\n                try {\n                    this.onInvalidate_()\n                    if (__DEV__ && this.isTrackPending_ && isSpyEnabled()) {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name_,\n                            type: \"scheduled-reaction\"\n                        })\n                    }\n                } catch (e) {\n                    this.reportExceptionInDerivation_(e)\n                }\n            }\n            globalState.trackingContext = prev\n            endBatch()\n        }\n    }\n\n    track(fn: () => void) {\n        if (this.isDisposed_) {\n            return\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch()\n        const notify = isSpyEnabled()\n        let startTime\n        if (__DEV__ && notify) {\n            startTime = Date.now()\n            spyReportStart({\n                name: this.name_,\n                type: \"reaction\"\n            })\n        }\n        this.isRunning_ = true\n        const prevReaction = globalState.trackingContext // reactions could create reactions...\n        globalState.trackingContext = this\n        const result = trackDerivedFunction(this, fn, undefined)\n        globalState.trackingContext = prevReaction\n        this.isRunning_ = false\n        this.isTrackPending_ = false\n        if (this.isDisposed_) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this)\n        }\n        if (isCaughtException(result)) {\n            this.reportExceptionInDerivation_(result.cause)\n        }\n        if (__DEV__ && notify) {\n            spyReportEnd({\n                time: Date.now() - startTime\n            })\n        }\n        endBatch()\n    }\n\n    reportExceptionInDerivation_(error: any) {\n        if (this.errorHandler_) {\n            this.errorHandler_(error, this)\n            return\n        }\n\n        if (globalState.disableErrorBoundaries) {\n            throw error\n        }\n\n        const message = __DEV__\n            ? `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`\n            : `[mobx] uncaught error in '${this}'`\n        if (!globalState.suppressReactionErrors) {\n            console.error(message, error)\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        } else if (__DEV__) { console.warn(`[mobx] (error in reaction '${this.name_}' suppressed, fix error of causing action below)`) } // prettier-ignore\n\n        if (__DEV__ && isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name_,\n                message,\n                error: \"\" + error\n            })\n        }\n\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this))\n    }\n\n    dispose() {\n        if (!this.isDisposed_) {\n            this.isDisposed_ = true\n            if (!this.isRunning_) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch()\n                clearObserving(this)\n                endBatch()\n            }\n        }\n    }\n\n    getDisposer_(): IReactionDisposer {\n        const r = this.dispose.bind(this) as IReactionDisposer\n        r[$mobx] = this\n        return r\n    }\n\n    toString() {\n        return `Reaction[${this.name_}]`\n    }\n\n    trace(enterBreakPoint: boolean = false) {\n        trace(this, enterBreakPoint)\n    }\n}\n\nexport function onReactionError(handler: (error: any, derivation: IDerivation) => void): Lambda {\n    globalState.globalReactionErrorHandlers.push(handler)\n    return () => {\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler)\n        if (idx >= 0) {\n            globalState.globalReactionErrorHandlers.splice(idx, 1)\n        }\n    }\n}\n\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nconst MAX_REACTION_ITERATIONS = 100\n\nlet reactionScheduler: (fn: () => void) => void = f => f()\n\nexport function runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions) {\n        return\n    }\n    reactionScheduler(runReactionsHelper)\n}\n\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true\n    const allReactions = globalState.pendingReactions\n    let iterations = 0\n\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\n                __DEV__\n                    ? `Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\n                          ` Probably there is a cycle in the reactive function: ${allReactions[0]}`\n                    : `[mobx] cycle in reaction: ${allReactions[0]}`\n            )\n            allReactions.splice(0) // clear reactions\n        }\n        let remainingReactions = allReactions.splice(0)\n        for (let i = 0, l = remainingReactions.length; i < l; i++) {\n            remainingReactions[i].runReaction_()\n        }\n    }\n    globalState.isRunningReactions = false\n}\n\nexport const isReaction = createInstanceofPredicate(\"Reaction\", Reaction)\n\nexport function setReactionScheduler(fn: (f: () => void) => void) {\n    const baseScheduler = reactionScheduler\n    reactionScheduler = f => fn(() => baseScheduler(f))\n}\n","import { IComputedDidChange } from \"./computedvalue\"\nimport { IValueDidChange, IBoxDidChange } from \"./../types/observablevalue\"\nimport { IObjectDidChange } from \"./../types/observableobject\"\nimport { IArrayDidChange } from \"./../types/observablearray\"\nimport { Lambda, globalState, once, ISetDidChange, IMapDidChange } from \"../internal\"\n\nexport function isSpyEnabled() {\n    return __DEV__ && !!globalState.spyListeners.length\n}\n\nexport type PureSpyEvent =\n    | { type: \"action\"; name: string; object: unknown; arguments: unknown[] }\n    | { type: \"scheduled-reaction\"; name: string }\n    | { type: \"reaction\"; name: string }\n    | { type: \"error\"; name: string; message: string; error: string }\n    | IComputedDidChange<unknown>\n    | IObjectDidChange<unknown>\n    | IArrayDidChange<unknown>\n    | IMapDidChange<unknown, unknown>\n    | ISetDidChange<unknown>\n    | IValueDidChange<unknown>\n    | IBoxDidChange<unknown>\n    | { type: \"report-end\"; spyReportEnd: true; time?: number }\n\ntype SpyEvent = PureSpyEvent & { spyReportStart?: true }\n\nexport function spyReport(event: SpyEvent) {\n    if (!__DEV__) {\n        return\n    } // dead code elimination can do the rest\n    if (!globalState.spyListeners.length) {\n        return\n    }\n    const listeners = globalState.spyListeners\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](event)\n    }\n}\n\nexport function spyReportStart(event: PureSpyEvent) {\n    if (!__DEV__) {\n        return\n    }\n    const change = { ...event, spyReportStart: true as const }\n    spyReport(change)\n}\n\nconst END_EVENT: SpyEvent = { type: \"report-end\", spyReportEnd: true }\n\nexport function spyReportEnd(change?: { time?: number }) {\n    if (!__DEV__) {\n        return\n    }\n    if (change) {\n        spyReport({ ...change, type: \"report-end\", spyReportEnd: true })\n    } else {\n        spyReport(END_EVENT)\n    }\n}\n\nexport function spy(listener: (change: SpyEvent) => void): Lambda {\n    if (!__DEV__) {\n        console.warn(`[mobx.spy] Is a no-op in production builds`)\n        return function () {}\n    } else {\n        globalState.spyListeners.push(listener)\n        return once(() => {\n            globalState.spyListeners = globalState.spyListeners.filter(l => l !== listener)\n        })\n    }\n}\n","import {\n    createAction,\n    executeAction,\n    Annotation,\n    storeAnnotation,\n    die,\n    isFunction,\n    isStringish,\n    createDecoratorAnnotation,\n    createActionAnnotation\n} from \"../internal\"\n\nexport const ACTION = \"action\"\nexport const ACTION_BOUND = \"action.bound\"\nexport const AUTOACTION = \"autoAction\"\nexport const AUTOACTION_BOUND = \"autoAction.bound\"\n\nconst DEFAULT_ACTION_NAME = \"<unnamed action>\"\n\nconst actionAnnotation = createActionAnnotation(ACTION)\nconst actionBoundAnnotation = createActionAnnotation(ACTION_BOUND, {\n    bound: true\n})\nconst autoActionAnnotation = createActionAnnotation(AUTOACTION, {\n    autoAction: true\n})\nconst autoActionBoundAnnotation = createActionAnnotation(AUTOACTION_BOUND, {\n    autoAction: true,\n    bound: true\n})\n\nexport interface IActionFactory extends Annotation, PropertyDecorator {\n    // nameless actions\n    <T extends Function | undefined | null>(fn: T): T\n    // named actions\n    <T extends Function | undefined | null>(name: string, fn: T): T\n\n    // named decorator\n    (customName: string): PropertyDecorator & Annotation\n\n    // decorator (name no longer supported)\n    bound: Annotation & PropertyDecorator\n}\n\nfunction createActionFactory(autoAction: boolean): IActionFactory {\n    const res: IActionFactory = function action(arg1, arg2?): any {\n        // action(fn() {})\n        if (isFunction(arg1)) {\n            return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction)\n        }\n        // action(\"name\", fn() {})\n        if (isFunction(arg2)) {\n            return createAction(arg1, arg2, autoAction)\n        }\n        // @action\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation)\n        }\n        // action(\"name\") & @action(\"name\")\n        if (isStringish(arg1)) {\n            return createDecoratorAnnotation(\n                createActionAnnotation(autoAction ? AUTOACTION : ACTION, {\n                    name: arg1,\n                    autoAction\n                })\n            )\n        }\n\n        if (__DEV__) {\n            die(\"Invalid arguments for `action`\")\n        }\n    } as IActionFactory\n    return res\n}\n\nexport const action: IActionFactory = createActionFactory(false)\nObject.assign(action, actionAnnotation)\nexport const autoAction: IActionFactory = createActionFactory(true)\nObject.assign(autoAction, autoActionAnnotation)\n\naction.bound = createDecoratorAnnotation(actionBoundAnnotation)\nautoAction.bound = createDecoratorAnnotation(autoActionBoundAnnotation)\n\nexport function runInAction<T>(fn: () => T): T {\n    return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined)\n}\n\nexport function isAction(thing: any) {\n    return isFunction(thing) && thing.isMobxAction === true\n}\n","import {\n    EMPTY_OBJECT,\n    IEqualsComparer,\n    IReactionDisposer,\n    IReactionPublic,\n    Lambda,\n    Reaction,\n    action,\n    comparer,\n    getNextId,\n    isAction,\n    isFunction,\n    isPlainObject,\n    die,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IAutorunOptions {\n    delay?: number\n    name?: string\n    /**\n     * Experimental.\n     * Warns if the view doesn't track observables\n     */\n    requiresObservable?: boolean\n    scheduler?: (callback: () => void) => any\n    onError?: (error: any) => void\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nexport function autorun(\n    view: (r: IReactionPublic) => any,\n    opts: IAutorunOptions = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(view)) {\n            die(\"Autorun expects a function as first argument\")\n        }\n        if (isAction(view)) {\n            die(\"Autorun does not accept actions since actions are untrackable\")\n        }\n    }\n\n    const name: string =\n        opts?.name ?? (__DEV__ ? (view as any).name || \"Autorun@\" + getNextId() : \"Autorun\")\n    const runSync = !opts.scheduler && !opts.delay\n    let reaction: Reaction\n\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(\n            name,\n            function (this: Reaction) {\n                this.track(reactionRunner)\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    } else {\n        const scheduler = createSchedulerFromOptions(opts)\n        // debounced autorun\n        let isScheduled = false\n\n        reaction = new Reaction(\n            name,\n            () => {\n                if (!isScheduled) {\n                    isScheduled = true\n                    scheduler(() => {\n                        isScheduled = false\n                        if (!reaction.isDisposed_) {\n                            reaction.track(reactionRunner)\n                        }\n                    })\n                }\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    }\n\n    function reactionRunner() {\n        view(reaction)\n    }\n\n    reaction.schedule_()\n    return reaction.getDisposer_()\n}\n\nexport type IReactionOptions<T, FireImmediately extends boolean> = IAutorunOptions & {\n    fireImmediately?: FireImmediately\n    equals?: IEqualsComparer<T>\n}\n\nconst run = (f: Lambda) => f()\n\nfunction createSchedulerFromOptions(opts: IAutorunOptions) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n        ? (f: Lambda) => setTimeout(f, opts.delay!)\n        : run\n}\n\nexport function reaction<T, FireImmediately extends boolean = false>(\n    expression: (r: IReactionPublic) => T,\n    effect: (\n        arg: T,\n        prev: FireImmediately extends true ? T | undefined : T,\n        r: IReactionPublic\n    ) => void,\n    opts: IReactionOptions<T, FireImmediately> = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(expression) || !isFunction(effect)) {\n            die(\"First and second argument to reaction should be functions\")\n        }\n        if (!isPlainObject(opts)) {\n            die(\"Third argument of reactions should be an object\")\n        }\n    }\n    const name = opts.name ?? (__DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\")\n    const effectAction = action(\n        name,\n        opts.onError ? wrapErrorHandler(opts.onError, effect) : effect\n    )\n    const runSync = !opts.scheduler && !opts.delay\n    const scheduler = createSchedulerFromOptions(opts)\n\n    let firstTime = true\n    let isScheduled = false\n    let value: T\n    let oldValue: T | undefined\n\n    const equals: IEqualsComparer<T> = (opts as any).compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default\n\n    const r = new Reaction(\n        name,\n        () => {\n            if (firstTime || runSync) {\n                reactionRunner()\n            } else if (!isScheduled) {\n                isScheduled = true\n                scheduler!(reactionRunner)\n            }\n        },\n        opts.onError,\n        opts.requiresObservable\n    )\n\n    function reactionRunner() {\n        isScheduled = false\n        if (r.isDisposed_) {\n            return\n        }\n        let changed: boolean = false\n        r.track(() => {\n            const nextValue = allowStateChanges(false, () => expression(r))\n            changed = firstTime || !equals(value, nextValue)\n            oldValue = value\n            value = nextValue\n        })\n\n        // This casting is nesessary as TS cannot infer proper type in current funciton implementation\n        type OldValue = FireImmediately extends true ? T | undefined : T\n        if (firstTime && opts.fireImmediately!) {\n            effectAction(value, oldValue as OldValue, r)\n        } else if (!firstTime && changed) {\n            effectAction(value, oldValue as OldValue, r)\n        }\n        firstTime = false\n    }\n\n    r.schedule_()\n    return r.getDisposer_()\n}\n\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments)\n        } catch (e) {\n            errorHandler.call(this, e)\n        }\n    }\n}\n","import {\n    IComputedValue,\n    IObservable,\n    IObservableArray,\n    Lambda,\n    ObservableMap,\n    getAtom,\n    ObservableSet,\n    isFunction,\n    IObservableValue\n} from \"../internal\"\n\nconst ON_BECOME_OBSERVED = \"onBO\"\nconst ON_BECOME_UNOBSERVED = \"onBUO\"\n\nexport function onBecomeObserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3)\n}\n\nexport function onBecomeUnobserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3)\n}\n\nfunction interceptHook(hook: \"onBO\" | \"onBUO\", thing, arg2, arg3) {\n    const atom: IObservable =\n        typeof arg3 === \"function\" ? getAtom(thing, arg2) : (getAtom(thing) as any)\n    const cb = isFunction(arg3) ? arg3 : arg2\n    const listenersKey = `${hook}L` as \"onBOL\" | \"onBUOL\"\n\n    if (atom[listenersKey]) {\n        atom[listenersKey]!.add(cb)\n    } else {\n        atom[listenersKey] = new Set<Lambda>([cb])\n    }\n\n    return function () {\n        const hookListeners = atom[listenersKey]\n        if (hookListeners) {\n            hookListeners.delete(cb)\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey]\n            }\n        }\n    }\n}\n","import { globalState, isolateGlobalState, setReactionScheduler } from \"../internal\"\n\nconst NEVER = \"never\"\nconst ALWAYS = \"always\"\nconst OBSERVED = \"observed\"\n// const IF_AVAILABLE = \"ifavailable\"\n\nexport function configure(options: {\n    enforceActions?: \"never\" | \"always\" | \"observed\"\n    computedRequiresReaction?: boolean\n    /**\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable?: boolean\n    /**\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction?: boolean\n    isolateGlobalState?: boolean\n    disableErrorBoundaries?: boolean\n    safeDescriptors?: boolean\n    reactionScheduler?: (f: () => void) => void\n    useProxies?: \"always\" | \"never\" | \"ifavailable\"\n}): void {\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState()\n    }\n    const { useProxies, enforceActions } = options\n    if (useProxies !== undefined) {\n        globalState.useProxies =\n            useProxies === ALWAYS\n                ? true\n                : useProxies === NEVER\n                ? false\n                : typeof Proxy !== \"undefined\"\n    }\n    if (useProxies === \"ifavailable\") {\n        globalState.verifyProxies = true\n    }\n    if (enforceActions !== undefined) {\n        const ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED\n        globalState.enforceActions = ea\n        globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true\n    }\n    ;[\n        \"computedRequiresReaction\",\n        \"reactionRequiresObservable\",\n        \"observableRequiresReaction\",\n        \"disableErrorBoundaries\",\n        \"safeDescriptors\"\n    ].forEach(key => {\n        if (key in options) {\n            globalState[key] = !!options[key]\n        }\n    })\n    globalState.allowStateReads = !globalState.observableRequiresReaction\n    if (__DEV__ && globalState.disableErrorBoundaries === true) {\n        console.warn(\n            \"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\"\n        )\n    }\n    if (options.reactionScheduler) {\n        setReactionScheduler(options.reactionScheduler)\n    }\n}\n","import {\n    CreateObservableOptions,\n    isObservableMap,\n    AnnotationsMap,\n    startBatch,\n    endBatch,\n    asObservableObject,\n    isPlainObject,\n    ObservableObjectAdministration,\n    isObservable,\n    die,\n    getOwnPropertyDescriptors,\n    $mobx,\n    ownKeys\n} from \"../internal\"\n\nexport function extendObservable<A extends Object, B extends Object>(\n    target: A,\n    properties: B,\n    annotations?: AnnotationsMap<B, never>,\n    options?: CreateObservableOptions\n): A & B {\n    if (__DEV__) {\n        if (arguments.length > 4) {\n            die(\"'extendObservable' expected 2-4 arguments\")\n        }\n        if (typeof target !== \"object\") {\n            die(\"'extendObservable' expects an object as first argument\")\n        }\n        if (isObservableMap(target)) {\n            die(\"'extendObservable' should not be used on maps, use map.merge instead\")\n        }\n        if (!isPlainObject(properties)) {\n            die(`'extendObservable' only accepts plain objects as second argument`)\n        }\n        if (isObservable(properties) || isObservable(annotations)) {\n            die(`Extending an object with another observable (object) is not supported`)\n        }\n    }\n    // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)\n    const descriptors = getOwnPropertyDescriptors(properties)\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        ownKeys(descriptors).forEach(key => {\n            adm.extend_(\n                key,\n                descriptors[key as any],\n                // must pass \"undefined\" for { key: undefined }\n                !annotations ? true : key in annotations ? annotations[key] : true\n            )\n        })\n    } finally {\n        endBatch()\n    }\n    return target as any\n}\n","import { IDepTreeNode, getAtom, getObservers, hasObservers } from \"../internal\"\n\nexport interface IDependencyTree {\n    name: string\n    dependencies?: IDependencyTree[]\n}\n\nexport interface IObserverTree {\n    name: string\n    observers?: IObserverTree[]\n}\n\nexport function getDependencyTree(thing: any, property?: string): IDependencyTree {\n    return nodeToDependencyTree(getAtom(thing, property))\n}\n\nfunction nodeToDependencyTree(node: IDepTreeNode): IDependencyTree {\n    const result: IDependencyTree = {\n        name: node.name_\n    }\n    if (node.observing_ && node.observing_.length > 0) {\n        result.dependencies = unique(node.observing_).map(nodeToDependencyTree)\n    }\n    return result\n}\n\nexport function getObserverTree(thing: any, property?: string): IObserverTree {\n    return nodeToObserverTree(getAtom(thing, property))\n}\n\nfunction nodeToObserverTree(node: IDepTreeNode): IObserverTree {\n    const result: IObserverTree = {\n        name: node.name_\n    }\n    if (hasObservers(node as any)) {\n        result.observers = Array.from(<any>getObservers(node as any)).map(<any>nodeToObserverTree)\n    }\n    return result\n}\n\nfunction unique<T>(list: T[]): T[] {\n    return Array.from(new Set(list))\n}\n","import {\n    action,\n    noop,\n    die,\n    isFunction,\n    Annotation,\n    isStringish,\n    storeAnnotation,\n    createFlowAnnotation,\n    createDecoratorAnnotation\n} from \"../internal\"\n\nexport const FLOW = \"flow\"\n\nlet generatorId = 0\n\nexport function FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\"\n}\nFlowCancellationError.prototype = Object.create(Error.prototype)\n\nexport function isFlowCancellationError(error: Error) {\n    return error instanceof FlowCancellationError\n}\n\nexport type CancellablePromise<T> = Promise<T> & { cancel(): void }\n\ninterface Flow extends Annotation, PropertyDecorator {\n    <R, Args extends any[]>(\n        generator: (...args: Args) => Generator<any, R, any> | AsyncGenerator<any, R, any>\n    ): (...args: Args) => CancellablePromise<R>\n    bound: Annotation & PropertyDecorator\n}\n\nconst flowAnnotation = createFlowAnnotation(\"flow\")\nconst flowBoundAnnotation = createFlowAnnotation(\"flow.bound\", { bound: true })\n\nexport const flow: Flow = Object.assign(\n    function flow(arg1, arg2?) {\n        // @flow\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, flowAnnotation)\n        }\n        // flow(fn)\n        if (__DEV__ && arguments.length !== 1) {\n            die(`Flow expects single argument with generator function`)\n        }\n        const generator = arg1\n        const name = generator.name || \"<unnamed flow>\"\n\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\n        const res = function () {\n            const ctx = this\n            const args = arguments\n            const runId = ++generatorId\n            const gen = action(`${name} - runid: ${runId} - init`, generator).apply(ctx, args)\n            let rejector: (error: any) => void\n            let pendingPromise: CancellablePromise<any> | undefined = undefined\n\n            const promise = new Promise(function (resolve, reject) {\n                let stepId = 0\n                rejector = reject\n\n                function onFulfilled(res: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.next\n                        ).call(gen, res)\n                    } catch (e) {\n                        return reject(e)\n                    }\n\n                    next(ret)\n                }\n\n                function onRejected(err: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.throw!\n                        ).call(gen, err)\n                    } catch (e) {\n                        return reject(e)\n                    }\n                    next(ret)\n                }\n\n                function next(ret: any) {\n                    if (isFunction(ret?.then)) {\n                        // an async iterator\n                        ret.then(next, reject)\n                        return\n                    }\n                    if (ret.done) {\n                        return resolve(ret.value)\n                    }\n                    pendingPromise = Promise.resolve(ret.value) as any\n                    return pendingPromise!.then(onFulfilled, onRejected)\n                }\n\n                onFulfilled(undefined) // kick off the process\n            }) as any\n\n            promise.cancel = action(`${name} - runid: ${runId} - cancel`, function () {\n                try {\n                    if (pendingPromise) {\n                        cancelPromise(pendingPromise)\n                    }\n                    // Finally block can return (or yield) stuff..\n                    const res = gen.return!(undefined as any)\n                    // eat anything that promise would do, it's cancelled!\n                    const yieldedPromise = Promise.resolve(res.value)\n                    yieldedPromise.then(noop, noop)\n                    cancelPromise(yieldedPromise) // maybe it can be cancelled :)\n                    // reject our original promise\n                    rejector(new FlowCancellationError())\n                } catch (e) {\n                    rejector(e) // there could be a throwing finally block\n                }\n            })\n            return promise\n        }\n        res.isMobXFlow = true\n        return res\n    } as any,\n    flowAnnotation\n)\n\nflow.bound = createDecoratorAnnotation(flowBoundAnnotation)\n\nfunction cancelPromise(promise) {\n    if (isFunction(promise.cancel)) {\n        promise.cancel()\n    }\n}\n\nexport function flowResult<T>(\n    result: T\n): T extends Generator<any, infer R, any>\n    ? CancellablePromise<R>\n    : T extends CancellablePromise<any>\n    ? T\n    : never {\n    return result as any // just tricking TypeScript :)\n}\n\nexport function isFlow(fn: any): boolean {\n    return fn?.isMobXFlow === true\n}\n","import {\n    IObservableArray,\n    IObservableValue,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isObservableValue,\n    ObservableSet,\n    die,\n    isStringish\n} from \"../internal\"\n\nexport type ReadInterceptor<T> = (value: any) => T\n\n/** Experimental feature right now, tested indirectly via Mobx-State-Tree */\nexport function interceptReads<T>(value: IObservableValue<T>, handler: ReadInterceptor<T>): Lambda\nexport function interceptReads<T>(\n    observableArray: IObservableArray<T>,\n    handler: ReadInterceptor<T>\n): Lambda\nexport function interceptReads<K, V>(\n    observableMap: ObservableMap<K, V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads<V>(\n    observableSet: ObservableSet<V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads(\n    object: Object,\n    property: string,\n    handler: ReadInterceptor<any>\n): Lambda\nexport function interceptReads(thing, propOrHandler?, handler?): Lambda {\n    let target\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing)\n    } else if (isObservableObject(thing)) {\n        if (__DEV__ && !isStringish(propOrHandler)) {\n            return die(\n                `InterceptReads can only be used with a specific property, not with an object in general`\n            )\n        }\n        target = getAdministration(thing, propOrHandler)\n    } else if (__DEV__) {\n        return die(`Expected observable map, object or array as first array`)\n    }\n    if (__DEV__ && target.dehancer !== undefined) {\n        return die(`An intercept reader was already established`)\n    }\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler\n    return () => {\n        target.dehancer = undefined\n    }\n}\n","import {\n    IArrayWillChange,\n    IArrayWillSplice,\n    IInterceptor,\n    IMapWillChange,\n    IObjectWillChange,\n    IObservableArray,\n    IObservableValue,\n    IValueWillChange,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    ObservableSet,\n    ISetWillChange,\n    isFunction\n} from \"../internal\"\n\nexport function intercept<T>(\n    value: IObservableValue<T>,\n    handler: IInterceptor<IValueWillChange<T>>\n): Lambda\nexport function intercept<T>(\n    observableArray: IObservableArray<T> | Array<T>,\n    handler: IInterceptor<IArrayWillChange<T> | IArrayWillSplice<T>>\n): Lambda\nexport function intercept<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    handler: IInterceptor<IMapWillChange<K, V>>\n): Lambda\nexport function intercept<V>(\n    observableSet: ObservableSet<V> | Set<V>,\n    handler: IInterceptor<ISetWillChange<V>>\n): Lambda\nexport function intercept<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    property: K,\n    handler: IInterceptor<IValueWillChange<V>>\n): Lambda\nexport function intercept(object: object, handler: IInterceptor<IObjectWillChange>): Lambda\nexport function intercept<T extends object, K extends keyof T>(\n    object: T,\n    property: K,\n    handler: IInterceptor<IValueWillChange<T[K]>>\n): Lambda\nexport function intercept(thing, propOrHandler?, handler?): Lambda {\n    if (isFunction(handler)) {\n        return interceptProperty(thing, propOrHandler, handler)\n    } else {\n        return interceptInterceptable(thing, propOrHandler)\n    }\n}\n\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept_(handler)\n}\n\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept_(handler)\n}\n","import { $mobx, getAtom, isComputedValue, isObservableObject, die, isStringish } from \"../internal\"\n\nexport function _isComputed(value, property?: PropertyKey): boolean {\n    if (property === undefined) {\n        return isComputedValue(value)\n    }\n    if (isObservableObject(value) === false) {\n        return false\n    }\n    if (!value[$mobx].values_.has(property)) {\n        return false\n    }\n    const atom = getAtom(value, property)\n    return isComputedValue(atom)\n}\n\nexport function isComputed(value: any): boolean {\n    if (__DEV__ && arguments.length > 1) {\n        return die(\n            `isComputed expects only 1 argument. Use isComputedProp to inspect the observability of a property`\n        )\n    }\n    return _isComputed(value)\n}\n\nexport function isComputedProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`isComputed expected a property name as second argument`)\n    }\n    return _isComputed(value, propName)\n}\n","import {\n    $mobx,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    die,\n    isStringish\n} from \"../internal\"\n\nfunction _isObservable(value, property?: PropertyKey): boolean {\n    if (!value) {\n        return false\n    }\n    if (property !== undefined) {\n        if (__DEV__ && (isObservableMap(value) || isObservableArray(value))) {\n            return die(\n                \"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\"\n            )\n        }\n        if (isObservableObject(value)) {\n            return value[$mobx].values_.has(property)\n        }\n        return false\n    }\n    // For first check, see #701\n    return (\n        isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value)\n    )\n}\n\nexport function isObservable(value: any): boolean {\n    if (__DEV__ && arguments.length !== 1) {\n        die(\n            `isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`\n        )\n    }\n    return _isObservable(value)\n}\n\nexport function isObservableProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`expected a property name as second argument`)\n    }\n    return _isObservable(value, propName)\n}\n","import {\n    $mobx,\n    IIsObservableObject,\n    IObservableArray,\n    ObservableMap,\n    ObservableSet,\n    ObservableObjectAdministration,\n    endBatch,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    startBatch,\n    die\n} from \"../internal\"\n\nexport function keys<K>(map: ObservableMap<K, any>): ReadonlyArray<K>\nexport function keys<T>(ar: IObservableArray<T>): ReadonlyArray<number>\nexport function keys<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function keys<T extends Object>(obj: T): ReadonlyArray<PropertyKey>\nexport function keys(obj: any): any {\n    if (isObservableObject(obj)) {\n        return (\n            (obj as any as IIsObservableObject)[$mobx] as ObservableObjectAdministration\n        ).keys_()\n    }\n    if (isObservableMap(obj) || isObservableSet(obj)) {\n        return Array.from(obj.keys())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((_, index) => index)\n    }\n    die(5)\n}\n\nexport function values<K, T>(map: ObservableMap<K, T>): ReadonlyArray<T>\nexport function values<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function values<T>(ar: IObservableArray<T>): ReadonlyArray<T>\nexport function values<T = any>(obj: T): ReadonlyArray<T extends object ? T[keyof T] : any>\nexport function values(obj: any): string[] {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => obj[key])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => obj.get(key))\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values())\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice()\n    }\n    die(6)\n}\n\nexport function entries<K, T>(map: ObservableMap<K, T>): ReadonlyArray<[K, T]>\nexport function entries<T>(set: ObservableSet<T>): ReadonlyArray<[T, T]>\nexport function entries<T>(ar: IObservableArray<T>): ReadonlyArray<[number, T]>\nexport function entries<T = any>(\n    obj: T\n): ReadonlyArray<[string, T extends object ? T[keyof T] : any]>\nexport function entries(obj: any): any {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => [key, obj[key]])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => [key, obj.get(key)])\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((key, index) => [index, key])\n    }\n    die(7)\n}\n\nexport function set<V>(obj: ObservableMap<PropertyKey, V>, values: { [key: string]: V })\nexport function set<K, V>(obj: ObservableMap<K, V>, key: K, value: V)\nexport function set<T>(obj: ObservableSet<T>, value: T)\nexport function set<T>(obj: IObservableArray<T>, index: number, value: T)\nexport function set<T extends Object>(obj: T, values: { [key: string]: any })\nexport function set<T extends Object>(obj: T, key: PropertyKey, value: any)\nexport function set(obj: any, key: any, value?: any): void {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch()\n        const values = key\n        try {\n            for (let key in values) {\n                set(obj, key, values[key])\n            }\n        } finally {\n            endBatch()\n        }\n        return\n    }\n    if (isObservableObject(obj)) {\n        ;(obj as any as IIsObservableObject)[$mobx].set_(key, value)\n    } else if (isObservableMap(obj)) {\n        obj.set(key, value)\n    } else if (isObservableSet(obj)) {\n        obj.add(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") {\n            key = parseInt(key, 10)\n        }\n        if (key < 0) {\n            die(`Invalid index: '${key}'`)\n        }\n        startBatch()\n        if (key >= obj.length) {\n            obj.length = key + 1\n        }\n        obj[key] = value\n        endBatch()\n    } else {\n        die(8)\n    }\n}\n\nexport function remove<K, V>(obj: ObservableMap<K, V>, key: K)\nexport function remove<T>(obj: ObservableSet<T>, key: T)\nexport function remove<T>(obj: IObservableArray<T>, index: number)\nexport function remove<T extends Object>(obj: T, key: string)\nexport function remove(obj: any, key: any): void {\n    if (isObservableObject(obj)) {\n        ;(obj as any as IIsObservableObject)[$mobx].delete_(key)\n    } else if (isObservableMap(obj)) {\n        obj.delete(key)\n    } else if (isObservableSet(obj)) {\n        obj.delete(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") {\n            key = parseInt(key, 10)\n        }\n        obj.splice(key, 1)\n    } else {\n        die(9)\n    }\n}\n\nexport function has<K>(obj: ObservableMap<K, any>, key: K): boolean\nexport function has<T>(obj: ObservableSet<T>, key: T): boolean\nexport function has<T>(obj: IObservableArray<T>, index: number): boolean\nexport function has<T extends Object>(obj: T, key: string): boolean\nexport function has(obj: any, key: any): boolean {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].has_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.has(key)\n    } else if (isObservableSet(obj)) {\n        return obj.has(key)\n    } else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length\n    }\n    die(10)\n}\n\nexport function get<K, V>(obj: ObservableMap<K, V>, key: K): V | undefined\nexport function get<T>(obj: IObservableArray<T>, index: number): T | undefined\nexport function get<T extends Object>(obj: T, key: string): any\nexport function get(obj: any, key: any): any {\n    if (!has(obj, key)) {\n        return undefined\n    }\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].get_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.get(key)\n    } else if (isObservableArray(obj)) {\n        return obj[key]\n    }\n    die(11)\n}\n\nexport function apiDefineProperty(obj: Object, key: PropertyKey, descriptor: PropertyDescriptor) {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].defineProperty_(key, descriptor)\n    }\n    die(39)\n}\n\nexport function apiOwnKeys(obj: Object) {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].ownKeys_()\n    }\n    die(38)\n}\n","import {\n    IArrayDidChange,\n    IComputedValue,\n    IMapDidChange,\n    IObjectDidChange,\n    IObservableArray,\n    IObservableValue,\n    IValueDidChange,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    ObservableSet,\n    ISetDidChange,\n    isFunction\n} from \"../internal\"\n\nexport function observe<T>(\n    value: IObservableValue<T> | IComputedValue<T>,\n    listener: (change: IValueDidChange<T>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<T>(\n    observableArray: IObservableArray<T> | Array<T>,\n    listener: (change: IArrayDidChange<T>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<V>(\n    // ObservableSet/ObservableMap are required despite they implement Set/Map: https://github.com/mobxjs/mobx/pull/3180#discussion_r746542929\n    observableSet: ObservableSet<V> | Set<V>,\n    listener: (change: ISetDidChange<V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    listener: (change: IMapDidChange<K, V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    property: K,\n    listener: (change: IValueDidChange<V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe(\n    object: Object,\n    listener: (change: IObjectDidChange) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<T, K extends keyof T>(\n    object: T,\n    property: K,\n    listener: (change: IValueDidChange<T[K]>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe(thing, propOrCb?, cbOrFire?, fireImmediately?): Lambda {\n    if (isFunction(cbOrFire)) {\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately)\n    } else {\n        return observeObservable(thing, propOrCb, cbOrFire)\n    }\n}\n\nfunction observeObservable(thing, listener, fireImmediately: boolean) {\n    return getAdministration(thing).observe_(listener, fireImmediately)\n}\n\nfunction observeObservableProperty(thing, property, listener, fireImmediately: boolean) {\n    return getAdministration(thing, property).observe_(listener, fireImmediately)\n}\n","import {\n    isObservable,\n    isObservableArray,\n    isObservableValue,\n    isObservableMap,\n    isObservableSet,\n    isComputedValue,\n    die,\n    apiOwnKeys,\n    objectPrototype\n} from \"../internal\"\n\nfunction cache<K, V>(map: Map<any, any>, key: K, value: V): V {\n    map.set(key, value)\n    return value\n}\n\nfunction toJSHelper(source, __alreadySeen: Map<any, any>) {\n    if (\n        source == null ||\n        typeof source !== \"object\" ||\n        source instanceof Date ||\n        !isObservable(source)\n    ) {\n        return source\n    }\n\n    if (isObservableValue(source) || isComputedValue(source)) {\n        return toJSHelper(source.get(), __alreadySeen)\n    }\n    if (__alreadySeen.has(source)) {\n        return __alreadySeen.get(source)\n    }\n    if (isObservableArray(source)) {\n        const res = cache(__alreadySeen, source, new Array(source.length))\n        source.forEach((value, idx) => {\n            res[idx] = toJSHelper(value, __alreadySeen)\n        })\n        return res\n    }\n    if (isObservableSet(source)) {\n        const res = cache(__alreadySeen, source, new Set())\n        source.forEach(value => {\n            res.add(toJSHelper(value, __alreadySeen))\n        })\n        return res\n    }\n    if (isObservableMap(source)) {\n        const res = cache(__alreadySeen, source, new Map())\n        source.forEach((value, key) => {\n            res.set(key, toJSHelper(value, __alreadySeen))\n        })\n        return res\n    } else {\n        // must be observable object\n        const res = cache(__alreadySeen, source, {})\n        apiOwnKeys(source).forEach((key: any) => {\n            if (objectPrototype.propertyIsEnumerable.call(source, key)) {\n                res[key] = toJSHelper(source[key], __alreadySeen)\n            }\n        })\n        return res\n    }\n}\n\n/**\n * Recursively converts an observable to it's non-observable native counterpart.\n * It does NOT recurse into non-observables, these are left as they are, even if they contain observables.\n * Computed and other non-enumerable properties are completely ignored.\n * Complex scenarios require custom solution, eg implementing `toJSON` or using `serializr` lib.\n */\nexport function toJS<T>(source: T, options?: any): T {\n    if (__DEV__ && options) {\n        die(\"toJS no longer supports options\")\n    }\n    return toJSHelper(source, new Map())\n}\n","import { TraceMode, die, getAtom, globalState } from \"../internal\"\n\nexport function trace(thing?: any, prop?: string, enterBreakPoint?: boolean): void\nexport function trace(thing?: any, enterBreakPoint?: boolean): void\nexport function trace(enterBreakPoint?: boolean): void\nexport function trace(...args: any[]): void {\n    if (!__DEV__) {\n        die(`trace() is not available in production builds`)\n    }\n    let enterBreakPoint = false\n    if (typeof args[args.length - 1] === \"boolean\") {\n        enterBreakPoint = args.pop()\n    }\n    const derivation = getAtomFromArgs(args)\n    if (!derivation) {\n        return die(\n            `'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly`\n        )\n    }\n    if (derivation.isTracing_ === TraceMode.NONE) {\n        console.log(`[mobx.trace] '${derivation.name_}' tracing enabled`)\n    }\n    derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG\n}\n\nfunction getAtomFromArgs(args): any {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation\n        case 1:\n            return getAtom(args[0])\n        case 2:\n            return getAtom(args[0], args[1])\n    }\n}\n","import { endBatch, startBatch } from \"../internal\"\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nexport function transaction<T>(action: () => T, thisArg = undefined): T {\n    startBatch()\n    try {\n        return action.apply(thisArg)\n    } finally {\n        endBatch()\n    }\n}\n","import {\n    $mobx,\n    IReactionDisposer,\n    Lambda,\n    autorun,\n    createAction,\n    getNextId,\n    die,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IWhenOptions {\n    name?: string\n    timeout?: number\n    onError?: (error: any) => void\n}\n\nexport function when(\n    predicate: () => boolean,\n    opts?: IWhenOptions\n): Promise<void> & { cancel(): void }\nexport function when(\n    predicate: () => boolean,\n    effect: Lambda,\n    opts?: IWhenOptions\n): IReactionDisposer\nexport function when(predicate: any, arg1?: any, arg2?: any): any {\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\")) {\n        return whenPromise(predicate, arg1)\n    }\n    return _when(predicate, arg1, arg2 || {})\n}\n\nfunction _when(predicate: () => boolean, effect: Lambda, opts: IWhenOptions): IReactionDisposer {\n    let timeoutHandle: any\n    if (typeof opts.timeout === \"number\") {\n        const error = new Error(\"WHEN_TIMEOUT\")\n        timeoutHandle = setTimeout(() => {\n            if (!disposer[$mobx].isDisposed_) {\n                disposer()\n                if (opts.onError) {\n                    opts.onError(error)\n                } else {\n                    throw error\n                }\n            }\n        }, opts.timeout)\n    }\n\n    opts.name = __DEV__ ? opts.name || \"When@\" + getNextId() : \"When\"\n    const effectAction = createAction(\n        __DEV__ ? opts.name + \"-effect\" : \"When-effect\",\n        effect as Function\n    )\n    // eslint-disable-next-line\n    var disposer = autorun(r => {\n        // predicate should not change state\n        let cond = allowStateChanges(false, predicate)\n        if (cond) {\n            r.dispose()\n            if (timeoutHandle) {\n                clearTimeout(timeoutHandle)\n            }\n            effectAction()\n        }\n    }, opts)\n    return disposer\n}\n\nfunction whenPromise(\n    predicate: () => boolean,\n    opts?: IWhenOptions\n): Promise<void> & { cancel(): void } {\n    if (__DEV__ && opts && opts.onError) {\n        return die(`the options 'onError' and 'promise' cannot be combined`)\n    }\n    let cancel\n    const res = new Promise((resolve, reject) => {\n        let disposer = _when(predicate, resolve as Lambda, { ...opts, onError: reject })\n        cancel = () => {\n            disposer()\n            reject(new Error(\"WHEN_CANCELLED\"))\n        }\n    })\n    ;(res as any).cancel = cancel\n    return res as any\n}\n","import {\n    $mobx,\n    IIsObservableObject,\n    ObservableObjectAdministration,\n    warnAboutProxyRequirement,\n    assertProxies,\n    die,\n    isStringish,\n    globalState,\n    CreateObservableOptions,\n    asObservableObject\n} from \"../internal\"\n\nfunction getAdm(target): ObservableObjectAdministration {\n    return target[$mobx]\n}\n\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nconst objectProxyTraps: ProxyHandler<any> = {\n    has(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__ && globalState.trackingDerivation) {\n            warnAboutProxyRequirement(\n                \"detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.\"\n            )\n        }\n        return getAdm(target).has_(name)\n    },\n    get(target: IIsObservableObject, name: PropertyKey): any {\n        return getAdm(target).get_(name)\n    },\n    set(target: IIsObservableObject, name: PropertyKey, value: any): boolean {\n        if (!isStringish(name)) {\n            return false\n        }\n        if (__DEV__ && !getAdm(target).values_.has(name)) {\n            warnAboutProxyRequirement(\n                \"add a new observable property through direct assignment. Use 'set' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).set_(name, value, true) ?? true\n    },\n    deleteProperty(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"delete properties from an observable object. Use 'remove' from 'mobx' instead.\"\n            )\n        }\n        if (!isStringish(name)) {\n            return false\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).delete_(name, true) ?? true\n    },\n    defineProperty(\n        target: IIsObservableObject,\n        name: PropertyKey,\n        descriptor: PropertyDescriptor\n    ): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"define property on an observable object. Use 'defineProperty' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).defineProperty_(name, descriptor) ?? true\n    },\n    ownKeys(target: IIsObservableObject): ArrayLike<string | symbol> {\n        if (__DEV__ && globalState.trackingDerivation) {\n            warnAboutProxyRequirement(\n                \"iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.\"\n            )\n        }\n        return getAdm(target).ownKeys_()\n    },\n    preventExtensions(target) {\n        die(13)\n    }\n}\n\nexport function asDynamicObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    assertProxies()\n    target = asObservableObject(target, options)\n    return (target[$mobx].proxy_ ??= new Proxy(target, objectProxyTraps))\n}\n","import { Lambda, once, untrackedEnd, untrackedStart, die } from \"../internal\"\n\nexport type IInterceptor<T> = (change: T) => T | null\n\nexport interface IInterceptable<T> {\n    interceptors_: IInterceptor<T>[] | undefined\n}\n\nexport function hasInterceptors(interceptable: IInterceptable<any>) {\n    return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0\n}\n\nexport function registerInterceptor<T>(\n    interceptable: IInterceptable<T>,\n    handler: IInterceptor<T>\n): Lambda {\n    const interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = [])\n    interceptors.push(handler)\n    return once(() => {\n        const idx = interceptors.indexOf(handler)\n        if (idx !== -1) {\n            interceptors.splice(idx, 1)\n        }\n    })\n}\n\nexport function interceptChange<T>(\n    interceptable: IInterceptable<T | null>,\n    change: T | null\n): T | null {\n    const prevU = untrackedStart()\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        const interceptors = [...(interceptable.interceptors_ || [])]\n        for (let i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change)\n            if (change && !(change as any).type) {\n                die(14)\n            }\n            if (!change) {\n                break\n            }\n        }\n        return change\n    } finally {\n        untrackedEnd(prevU)\n    }\n}\n","import { Lambda, once, untrackedEnd, untrackedStart } from \"../internal\"\n\nexport interface IListenable {\n    changeListeners_: Function[] | undefined\n}\n\nexport function hasListeners(listenable: IListenable) {\n    return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0\n}\n\nexport function registerListener(listenable: IListenable, handler: Function): Lambda {\n    const listeners = listenable.changeListeners_ || (listenable.changeListeners_ = [])\n    listeners.push(handler)\n    return once(() => {\n        const idx = listeners.indexOf(handler)\n        if (idx !== -1) {\n            listeners.splice(idx, 1)\n        }\n    })\n}\n\nexport function notifyListeners<T>(listenable: IListenable, change: T) {\n    const prevU = untrackedStart()\n    let listeners = listenable.changeListeners_\n    if (!listeners) {\n        return\n    }\n    listeners = listeners.slice()\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change)\n    }\n    untrackedEnd(prevU)\n}\n","import {\n    $mobx,\n    asObservableObject,\n    AnnotationsMap,\n    endBatch,\n    startBatch,\n    CreateObservableOptions,\n    ObservableObjectAdministration,\n    collectStoredAnnotations,\n    isPlainObject,\n    isObservableObject,\n    die,\n    ownKeys,\n    extendObservable,\n    addHiddenProp,\n    storedAnnotationsSymbol\n} from \"../internal\"\n\n// Hack based on https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-322267089\n// We need this, because otherwise, AdditionalKeys is going to be inferred to be any\n// set of superfluous keys. But, we rather want to get a compile error unless AdditionalKeys is\n// _explicity_ passed as generic argument\n// Fixes: https://github.com/mobxjs/mobx/issues/2325#issuecomment-691070022\ntype NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport function makeObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    annotations?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        if (__DEV__ && annotations && target[storedAnnotationsSymbol]) {\n            die(\n                `makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.`\n            )\n        }\n        // Default to decorators\n        annotations ??= collectStoredAnnotations(target)\n\n        // Annotate\n        ownKeys(annotations).forEach(key => adm.make_(key, annotations![key]))\n    } finally {\n        endBatch()\n    }\n    return target\n}\n\n// proto[keysSymbol] = new Set<PropertyKey>()\nconst keysSymbol = Symbol(\"mobx-keys\")\n\nexport function makeAutoObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    overrides?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    if (__DEV__) {\n        if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target))) {\n            die(`'makeAutoObservable' can only be used for classes that don't have a superclass`)\n        }\n        if (isObservableObject(target)) {\n            die(`makeAutoObservable can only be used on objects not already made observable`)\n        }\n    }\n\n    // Optimization: avoid visiting protos\n    // Assumes that annotation.make_/.extend_ works the same for plain objects\n    if (isPlainObject(target)) {\n        return extendObservable(target, target, overrides, options)\n    }\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n\n    // Optimization: cache keys on proto\n    // Assumes makeAutoObservable can be called only once per object and can't be used in subclass\n    if (!target[keysSymbol]) {\n        const proto = Object.getPrototypeOf(target)\n        const keys = new Set([...ownKeys(target), ...ownKeys(proto)])\n        keys.delete(\"constructor\")\n        keys.delete($mobx)\n        addHiddenProp(proto, keysSymbol, keys)\n    }\n\n    startBatch()\n    try {\n        target[keysSymbol].forEach(key =>\n            adm.make_(\n                key,\n                // must pass \"undefined\" for { key: undefined }\n                !overrides ? true : key in overrides ? overrides[key] : true\n            )\n        )\n    } finally {\n        endBatch()\n    }\n    return target\n}\n","import {\n    $mobx,\n    Atom,\n    EMPTY_ARRAY,\n    IAtom,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    addHiddenFinalProp,\n    checkIfStateModificationsAreAllowed,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    assertProxies,\n    reserveArrayBuffer,\n    hasProp,\n    die,\n    globalState\n} from \"../internal\"\n\nconst SPLICE = \"splice\"\nexport const UPDATE = \"update\"\nexport const MAX_SPLICE_SIZE = 10000 // See e.g. https://github.com/mobxjs/mobx/issues/859\n\nexport interface IObservableArray<T = any> extends Array<T> {\n    spliceWithArray(index: number, deleteCount?: number, newItems?: T[]): T[]\n    clear(): T[]\n    replace(newItems: T[]): T[]\n    remove(value: T): boolean\n    toJSON(): T[]\n}\n\ninterface IArrayBaseChange<T> {\n    object: IObservableArray<T>\n    observableKind: \"array\"\n    debugObjectName: string\n    index: number\n}\n\nexport type IArrayDidChange<T = any> = IArrayUpdate<T> | IArraySplice<T>\n\nexport interface IArrayUpdate<T = any> extends IArrayBaseChange<T> {\n    type: \"update\"\n    newValue: T\n    oldValue: T\n}\n\nexport interface IArraySplice<T = any> extends IArrayBaseChange<T> {\n    type: \"splice\"\n    added: T[]\n    addedCount: number\n    removed: T[]\n    removedCount: number\n}\n\nexport interface IArrayWillChange<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"update\"\n    newValue: T\n}\n\nexport interface IArrayWillSplice<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"splice\"\n    added: T[]\n    removedCount: number\n}\n\nconst arrayTraps = {\n    get(target, name) {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === $mobx) {\n            return adm\n        }\n        if (name === \"length\") {\n            return adm.getArrayLength_()\n        }\n        if (typeof name === \"string\" && !isNaN(name as any)) {\n            return adm.get_(parseInt(name))\n        }\n        if (hasProp(arrayExtensions, name)) {\n            return arrayExtensions[name]\n        }\n        return target[name]\n    },\n    set(target, name, value): boolean {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === \"length\") {\n            adm.setArrayLength_(value)\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value\n        } else {\n            // numeric string\n            adm.set_(parseInt(name), value)\n        }\n        return true\n    },\n    preventExtensions() {\n        die(15)\n    }\n}\n\nexport class ObservableArrayAdministration\n    implements IInterceptable<IArrayWillChange<any> | IArrayWillSplice<any>>, IListenable\n{\n    atom_: IAtom\n    readonly values_: any[] = [] // this is the prop that gets proxied, so can't replace it!\n    interceptors_\n    changeListeners_\n    enhancer_: (newV: any, oldV: any | undefined) => any\n    dehancer: any\n    proxy_!: IObservableArray<any>\n    lastKnownLength_ = 0\n\n    constructor(\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        enhancer: IEnhancer<any>,\n        public owned_: boolean,\n        public legacyMode_: boolean\n    ) {\n        this.atom_ = new Atom(name)\n        this.enhancer_ = (newV, oldV) =>\n            enhancer(newV, oldV, __DEV__ ? name + \"[..]\" : \"ObservableArray[..]\")\n    }\n\n    dehanceValue_(value: any): any {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    dehanceValues_(values: any[]): any[] {\n        if (this.dehancer !== undefined && values.length > 0) {\n            return values.map(this.dehancer) as any\n        }\n        return values\n    }\n\n    intercept_(handler: IInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>): Lambda {\n        return registerInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>(this, handler)\n    }\n\n    observe_(\n        listener: (changeData: IArrayDidChange<any>) => void,\n        fireImmediately = false\n    ): Lambda {\n        if (fireImmediately) {\n            listener(<IArraySplice<any>>{\n                observableKind: \"array\",\n                object: this.proxy_ as any,\n                debugObjectName: this.atom_.name_,\n                type: \"splice\",\n                index: 0,\n                added: this.values_.slice(),\n                addedCount: this.values_.length,\n                removed: [],\n                removedCount: 0\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    getArrayLength_(): number {\n        this.atom_.reportObserved()\n        return this.values_.length\n    }\n\n    setArrayLength_(newLength: number) {\n        if (typeof newLength !== \"number\" || isNaN(newLength) || newLength < 0) {\n            die(\"Out of range: \" + newLength)\n        }\n        let currentLength = this.values_.length\n        if (newLength === currentLength) {\n            return\n        } else if (newLength > currentLength) {\n            const newItems = new Array(newLength - currentLength)\n            for (let i = 0; i < newLength - currentLength; i++) {\n                newItems[i] = undefined\n            } // No Array.fill everywhere...\n            this.spliceWithArray_(currentLength, 0, newItems)\n        } else {\n            this.spliceWithArray_(newLength, currentLength - newLength)\n        }\n    }\n\n    updateArrayLength_(oldLength: number, delta: number) {\n        if (oldLength !== this.lastKnownLength_) {\n            die(16)\n        }\n        this.lastKnownLength_ += delta\n        if (this.legacyMode_ && delta > 0) {\n            reserveArrayBuffer(oldLength + delta + 1)\n        }\n    }\n\n    spliceWithArray_(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        const length = this.values_.length\n\n        if (index === undefined) {\n            index = 0\n        } else if (index > length) {\n            index = length\n        } else if (index < 0) {\n            index = Math.max(0, length + index)\n        }\n\n        if (arguments.length === 1) {\n            deleteCount = length - index\n        } else if (deleteCount === undefined || deleteCount === null) {\n            deleteCount = 0\n        } else {\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index))\n        }\n\n        if (newItems === undefined) {\n            newItems = EMPTY_ARRAY\n        }\n\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IArrayWillSplice<any>>(this as any, {\n                object: this.proxy_ as any,\n                type: SPLICE,\n                index,\n                removedCount: deleteCount,\n                added: newItems\n            })\n            if (!change) {\n                return EMPTY_ARRAY\n            }\n            deleteCount = change.removedCount\n            newItems = change.added\n        }\n\n        newItems =\n            newItems.length === 0 ? newItems : newItems.map(v => this.enhancer_(v, undefined))\n        if (this.legacyMode_ || __DEV__) {\n            const lengthDelta = newItems.length - deleteCount\n            this.updateArrayLength_(length, lengthDelta) // checks if internal array wasn't modified\n        }\n        const res = this.spliceItemsIntoValues_(index, deleteCount, newItems)\n\n        if (deleteCount !== 0 || newItems.length !== 0) {\n            this.notifyArraySplice_(index, newItems, res)\n        }\n        return this.dehanceValues_(res)\n    }\n\n    spliceItemsIntoValues_(index: number, deleteCount: number, newItems: any[]): any[] {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return this.values_.splice(index, deleteCount, ...newItems)\n        } else {\n            // The items removed by the splice\n            const res = this.values_.slice(index, index + deleteCount)\n            // The items that that should remain at the end of the array\n            let oldItems = this.values_.slice(index + deleteCount)\n            // New length is the previous length + addition count - deletion count\n            this.values_.length += newItems.length - deleteCount\n            for (let i = 0; i < newItems.length; i++) {\n                this.values_[index + i] = newItems[i]\n            }\n            for (let i = 0; i < oldItems.length; i++) {\n                this.values_[index + newItems.length + i] = oldItems[i]\n            }\n            return res\n        }\n    }\n\n    notifyArrayChildUpdate_(index: number, newValue: any, oldValue: any) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArrayDidChange | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      type: UPDATE,\n                      debugObjectName: this.atom_.name_,\n                      index,\n                      newValue,\n                      oldValue\n                  } as const)\n                : null\n\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    notifyArraySplice_(index: number, added: any[], removed: any[]) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArraySplice | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      debugObjectName: this.atom_.name_,\n                      type: SPLICE,\n                      index,\n                      removed,\n                      added,\n                      removedCount: removed.length,\n                      addedCount: added.length\n                  } as const)\n                : null\n\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get_(index: number): any | undefined {\n        if (index < this.values_.length) {\n            this.atom_.reportObserved()\n            return this.dehanceValue_(this.values_[index])\n        }\n        console.warn(\n            __DEV__\n                ? `[mobx] Out of bounds read: ${index}`\n                : `[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${this.values_.length}). Please check length first. Out of bound indices will not be tracked by MobX`\n        )\n    }\n\n    set_(index: number, newValue: any) {\n        const values = this.values_\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(this.atom_)\n            const oldValue = values[index]\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IArrayWillChange<any>>(this as any, {\n                    type: UPDATE,\n                    object: this.proxy_ as any, // since \"this\" is the real array we need to pass its proxy\n                    index,\n                    newValue\n                })\n                if (!change) {\n                    return\n                }\n                newValue = change.newValue\n            }\n            newValue = this.enhancer_(newValue, oldValue)\n            const changed = newValue !== oldValue\n            if (changed) {\n                values[index] = newValue\n                this.notifyArrayChildUpdate_(index, newValue, oldValue)\n            }\n        } else if (index === values.length) {\n            // add a new item\n            this.spliceWithArray_(index, 0, [newValue])\n        } else {\n            // out of bounds\n            die(17, index, values.length)\n        }\n    }\n}\n\nexport function createObservableArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n    owned = false\n): IObservableArray<T> {\n    assertProxies()\n    const adm = new ObservableArrayAdministration(name, enhancer, owned, false)\n    addHiddenFinalProp(adm.values_, $mobx, adm)\n    const proxy = new Proxy(adm.values_, arrayTraps) as any\n    adm.proxy_ = proxy\n    if (initialValues && initialValues.length) {\n        const prev = allowStateChangesStart(true)\n        adm.spliceWithArray_(0, 0, initialValues)\n        allowStateChangesEnd(prev)\n    }\n    return proxy\n}\n\n// eslint-disable-next-line\nexport var arrayExtensions = {\n    clear(): any[] {\n        return this.splice(0)\n    },\n\n    replace(newItems: any[]) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        return adm.spliceWithArray_(0, adm.values_.length, newItems)\n    },\n\n    // Used by JSON.stringify\n    toJSON(): any[] {\n        return this.slice()\n    },\n\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice(index: number, deleteCount?: number, ...newItems: any[]): any[] {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        switch (arguments.length) {\n            case 0:\n                return []\n            case 1:\n                return adm.spliceWithArray_(index)\n            case 2:\n                return adm.spliceWithArray_(index, deleteCount)\n        }\n        return adm.spliceWithArray_(index, deleteCount, newItems)\n    },\n\n    spliceWithArray(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        return (this[$mobx] as ObservableArrayAdministration).spliceWithArray_(\n            index,\n            deleteCount,\n            newItems\n        )\n    },\n\n    push(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(adm.values_.length, 0, items)\n        return adm.values_.length\n    },\n\n    pop() {\n        return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0]\n    },\n\n    shift() {\n        return this.splice(0, 1)[0]\n    },\n\n    unshift(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(0, 0, items)\n        return adm.values_.length\n    },\n\n    reverse(): any[] {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        if (globalState.trackingDerivation) {\n            die(37, \"reverse\")\n        }\n        this.replace(this.slice().reverse())\n        return this\n    },\n\n    sort(): any[] {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (globalState.trackingDerivation) {\n            die(37, \"sort\")\n        }\n        const copy = this.slice()\n        copy.sort.apply(copy, arguments)\n        this.replace(copy)\n        return this\n    },\n\n    remove(value: any): boolean {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        const idx = adm.dehanceValues_(adm.values_).indexOf(value)\n        if (idx > -1) {\n            this.splice(idx, 1)\n            return true\n        }\n        return false\n    }\n}\n\n/**\n * Wrap function from prototype\n * Without this, everything works as well, but this works\n * faster as everything works on unproxied values\n */\naddArrayExtension(\"concat\", simpleFunc)\naddArrayExtension(\"flat\", simpleFunc)\naddArrayExtension(\"includes\", simpleFunc)\naddArrayExtension(\"indexOf\", simpleFunc)\naddArrayExtension(\"join\", simpleFunc)\naddArrayExtension(\"lastIndexOf\", simpleFunc)\naddArrayExtension(\"slice\", simpleFunc)\naddArrayExtension(\"toString\", simpleFunc)\naddArrayExtension(\"toLocaleString\", simpleFunc)\n// map\naddArrayExtension(\"every\", mapLikeFunc)\naddArrayExtension(\"filter\", mapLikeFunc)\naddArrayExtension(\"find\", mapLikeFunc)\naddArrayExtension(\"findIndex\", mapLikeFunc)\naddArrayExtension(\"flatMap\", mapLikeFunc)\naddArrayExtension(\"forEach\", mapLikeFunc)\naddArrayExtension(\"map\", mapLikeFunc)\naddArrayExtension(\"some\", mapLikeFunc)\n// reduce\naddArrayExtension(\"reduce\", reduceLikeFunc)\naddArrayExtension(\"reduceRight\", reduceLikeFunc)\n\nfunction addArrayExtension(funcName, funcFactory) {\n    if (typeof Array.prototype[funcName] === \"function\") {\n        arrayExtensions[funcName] = funcFactory(funcName)\n    }\n}\n\n// Report and delegate to dehanced array\nfunction simpleFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction mapLikeFunc(funcName) {\n    return function (callback, thisArg) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName]((element, index) => {\n            return callback.call(thisArg, element, index, this)\n        })\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction reduceLikeFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        // #2432 - reduce behavior depends on arguments.length\n        const callback = arguments[0]\n        arguments[0] = (accumulator, currentValue, index) => {\n            return callback(accumulator, currentValue, index, this)\n        }\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\nconst isObservableArrayAdministration = createInstanceofPredicate(\n    \"ObservableArrayAdministration\",\n    ObservableArrayAdministration\n)\n\nexport function isObservableArray(thing): thing is IObservableArray<any> {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx])\n}\n","import {\n    $mobx,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    checkIfStateModificationsAreAllowed,\n    createAtom,\n    createInstanceofPredicate,\n    deepEnhancer,\n    getNextId,\n    getPlainObjectKeys,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isES6Map,\n    isPlainObject,\n    isSpyEnabled,\n    makeIterable,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    stringifyKey,\n    transaction,\n    untracked,\n    onBecomeUnobserved,\n    globalState,\n    die,\n    isFunction,\n    UPDATE,\n    IAtom,\n    PureSpyEvent,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IKeyValueMap<V = any> {\n    [key: string]: V\n}\n\nexport type IMapEntry<K = any, V = any> = [K, V]\nexport type IMapEntries<K = any, V = any> = IMapEntry<K, V>[]\n\nexport type IMapDidChange<K = any, V = any> = { observableKind: \"map\"; debugObjectName: string } & (\n    | {\n          object: ObservableMap<K, V>\n          name: K // actual the key or index, but this is based on the ancient .observe proposal for consistency\n          type: \"update\"\n          newValue: V\n          oldValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"add\"\n          newValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"delete\"\n          oldValue: V\n      }\n)\n\nexport interface IMapWillChange<K = any, V = any> {\n    object: ObservableMap<K, V>\n    type: \"update\" | \"add\" | \"delete\"\n    name: K\n    newValue?: V\n}\n\nconst ObservableMapMarker = {}\n\nexport const ADD = \"add\"\nexport const DELETE = \"delete\"\n\nexport type IObservableMapInitialValues<K = any, V = any> =\n    | IMapEntries<K, V>\n    | IKeyValueMap<V>\n    | Map<K, V>\n\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nexport class ObservableMap<K = any, V = any>\n    implements Map<K, V>, IInterceptable<IMapWillChange<K, V>>, IListenable\n{\n    [$mobx] = ObservableMapMarker\n    data_: Map<K, ObservableValue<V>>\n    hasMap_: Map<K, ObservableValue<boolean>> // hasMap, not hashMap >-).\n    keysAtom_: IAtom\n    interceptors_\n    changeListeners_\n    dehancer: any\n\n    constructor(\n        initialData?: IObservableMapInitialValues<K, V>,\n        public enhancer_: IEnhancer<V> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableMap@\" + getNextId() : \"ObservableMap\"\n    ) {\n        if (!isFunction(Map)) {\n            die(18)\n        }\n        this.keysAtom_ = createAtom(__DEV__ ? `${this.name_}.keys()` : \"ObservableMap.keys()\")\n        this.data_ = new Map()\n        this.hasMap_ = new Map()\n        allowStateChanges(true, () => {\n            this.merge(initialData)\n        })\n    }\n\n    private has_(key: K): boolean {\n        return this.data_.has(key)\n    }\n\n    has(key: K): boolean {\n        if (!globalState.trackingDerivation) {\n            return this.has_(key)\n        }\n\n        let entry = this.hasMap_.get(key)\n        if (!entry) {\n            const newEntry = (entry = new ObservableValue(\n                this.has_(key),\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableMap.key?\",\n                false\n            ))\n            this.hasMap_.set(key, newEntry)\n            onBecomeUnobserved(newEntry, () => this.hasMap_.delete(key))\n        }\n\n        return entry.get()\n    }\n\n    set(key: K, value: V) {\n        const hasKey = this.has_(key)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: hasKey ? UPDATE : ADD,\n                object: this,\n                newValue: value,\n                name: key\n            })\n            if (!change) {\n                return this\n            }\n            value = change.newValue!\n        }\n        if (hasKey) {\n            this.updateValue_(key, value)\n        } else {\n            this.addValue_(key, value)\n        }\n        return this\n    }\n\n    delete(key: K): boolean {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: DELETE,\n                object: this,\n                name: key\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has_(key)) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: (<any>this.data_.get(key)).value_,\n                          name: key\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            transaction(() => {\n                this.keysAtom_.reportChanged()\n                this.hasMap_.get(key)?.setNewValue_(false)\n                const observable = this.data_.get(key)!\n                observable.setNewValue_(undefined as any)\n                this.data_.delete(key)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    private updateValue_(key: K, newValue: V | undefined) {\n        const observable = this.data_.get(key)!\n        newValue = (observable as any).prepareNewValue_(newValue) as V\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: UPDATE,\n                          object: this,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            observable.setNewValue_(newValue as V)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private addValue_(key: K, newValue: V) {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        transaction(() => {\n            const observable = new ObservableValue(\n                newValue,\n                this.enhancer_,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}` : \"ObservableMap.key\",\n                false\n            )\n            this.data_.set(key, observable)\n            newValue = (observable as any).value_ // value might have been changed\n            this.hasMap_.get(key)?.setNewValue_(true)\n            this.keysAtom_.reportChanged()\n        })\n        const notifySpy = isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IMapDidChange<K, V> | null =\n            notify || notifySpy\n                ? {\n                      observableKind: \"map\",\n                      debugObjectName: this.name_,\n                      type: ADD,\n                      object: this,\n                      name: key,\n                      newValue\n                  }\n                : null\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change! as PureSpyEvent)\n        } // TODO fix type\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get(key: K): V | undefined {\n        if (this.has(key)) {\n            return this.dehanceValue_(this.data_.get(key)!.get())\n        }\n        return this.dehanceValue_(undefined)\n    }\n\n    private dehanceValue_<X extends V | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    keys(): IterableIterator<K> {\n        this.keysAtom_.reportObserved()\n        return this.data_.keys()\n    }\n\n    values(): IterableIterator<V> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : self.get(value)\n                }\n            }\n        })\n    }\n\n    entries(): IterableIterator<IMapEntry<K, V>> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : ([value, self.get(value)!] as [K, V])\n                }\n            }\n        })\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    forEach(callback: (value: V, key: K, object: Map<K, V>) => void, thisArg?) {\n        for (const [key, value] of this) {\n            callback.call(thisArg, value, key, this)\n        }\n    }\n\n    /** Merge another object into this object, returns this. */\n    merge(other?: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        if (isObservableMap(other)) {\n            other = new Map(other)\n        }\n        transaction(() => {\n            if (isPlainObject(other)) {\n                getPlainObjectKeys(other).forEach((key: any) =>\n                    this.set(key as K, (other as IKeyValueMap)[key])\n                )\n            } else if (Array.isArray(other)) {\n                other.forEach(([key, value]) => this.set(key, value))\n            } else if (isES6Map(other)) {\n                if (other.constructor !== Map) {\n                    die(19, other)\n                }\n                other.forEach((value, key) => this.set(key, value))\n            } else if (other !== null && other !== undefined) {\n                die(20, other)\n            }\n        })\n        return this\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const key of this.keys()) {\n                    this.delete(key)\n                }\n            })\n        })\n    }\n\n    replace(values: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        // Implementation requirements:\n        // - respect ordering of replacement map\n        // - allow interceptors to run and potentially prevent individual operations\n        // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)\n        // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)\n        // - note that result map may differ from replacement map due to the interceptors\n        transaction(() => {\n            // Convert to map so we can do quick key lookups\n            const replacementMap = convertToMap(values)\n            const orderedData = new Map()\n            // Used for optimization\n            let keysReportChangedCalled = false\n            // Delete keys that don't exist in replacement map\n            // if the key deletion is prevented by interceptor\n            // add entry at the beginning of the result map\n            for (const key of this.data_.keys()) {\n                // Concurrently iterating/deleting keys\n                // iterator should handle this correctly\n                if (!replacementMap.has(key)) {\n                    const deleted = this.delete(key)\n                    // Was the key removed?\n                    if (deleted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    } else {\n                        // Delete prevented by interceptor\n                        const value = this.data_.get(key)\n                        orderedData.set(key, value)\n                    }\n                }\n            }\n            // Merge entries\n            for (const [key, value] of replacementMap.entries()) {\n                // We will want to know whether a new key is added\n                const keyExisted = this.data_.has(key)\n                // Add or update value\n                this.set(key, value)\n                // The addition could have been prevent by interceptor\n                if (this.data_.has(key)) {\n                    // The update could have been prevented by interceptor\n                    // and also we want to preserve existing values\n                    // so use value from _data map (instead of replacement map)\n                    const value = this.data_.get(key)\n                    orderedData.set(key, value)\n                    // Was a new key added?\n                    if (!keyExisted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    }\n                }\n            }\n            // Check for possible key order change\n            if (!keysReportChangedCalled) {\n                if (this.data_.size !== orderedData.size) {\n                    // If size differs, keys are definitely modified\n                    this.keysAtom_.reportChanged()\n                } else {\n                    const iter1 = this.data_.keys()\n                    const iter2 = orderedData.keys()\n                    let next1 = iter1.next()\n                    let next2 = iter2.next()\n                    while (!next1.done) {\n                        if (next1.value !== next2.value) {\n                            this.keysAtom_.reportChanged()\n                            break\n                        }\n                        next1 = iter1.next()\n                        next2 = iter2.next()\n                    }\n                }\n            }\n            // Use correctly ordered map\n            this.data_ = orderedData\n        })\n        return this\n    }\n\n    get size(): number {\n        this.keysAtom_.reportObserved()\n        return this.data_.size\n    }\n\n    toString(): string {\n        return \"[object ObservableMap]\"\n    }\n\n    toJSON(): [K, V][] {\n        return Array.from(this)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Map\"\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(listener: (changes: IMapDidChange<K, V>) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with maps.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<IMapWillChange<K, V>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap) as (\n    thing: any\n) => thing is ObservableMap<any, any>\n\nfunction convertToMap(dataStructure: any): Map<any, any> {\n    if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {\n        return dataStructure\n    } else if (Array.isArray(dataStructure)) {\n        return new Map(dataStructure)\n    } else if (isPlainObject(dataStructure)) {\n        const map = new Map()\n        for (const key in dataStructure) {\n            map.set(key, dataStructure[key])\n        }\n        return map\n    } else {\n        return die(21, dataStructure)\n    }\n}\n","import {\n    $mobx,\n    createAtom,\n    deepEnhancer,\n    getNextId,\n    IEnhancer,\n    isSpyEnabled,\n    hasListeners,\n    IListenable,\n    registerListener,\n    Lambda,\n    spyReportStart,\n    notifyListeners,\n    spyReportEnd,\n    createInstanceofPredicate,\n    hasInterceptors,\n    interceptChange,\n    IInterceptable,\n    IInterceptor,\n    registerInterceptor,\n    checkIfStateModificationsAreAllowed,\n    untracked,\n    makeIterable,\n    transaction,\n    isES6Set,\n    IAtom,\n    DELETE,\n    ADD,\n    die,\n    isFunction\n} from \"../internal\"\n\nconst ObservableSetMarker = {}\n\nexport type IObservableSetInitialValues<T> = Set<T> | readonly T[]\n\nexport type ISetDidChange<T = any> =\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"add\"\n          newValue: T\n      }\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"delete\"\n          oldValue: T\n      }\n\nexport type ISetWillChange<T = any> =\n    | {\n          type: \"delete\"\n          object: ObservableSet<T>\n          oldValue: T\n      }\n    | {\n          type: \"add\"\n          object: ObservableSet<T>\n          newValue: T\n      }\n\nexport class ObservableSet<T = any> implements Set<T>, IInterceptable<ISetWillChange>, IListenable {\n    [$mobx] = ObservableSetMarker\n    private data_: Set<any> = new Set()\n    private atom_: IAtom\n    changeListeners_\n    interceptors_\n    dehancer: any\n    enhancer_: (newV: any, oldV: any | undefined) => any\n\n    constructor(\n        initialData?: IObservableSetInitialValues<T>,\n        enhancer: IEnhancer<T> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableSet@\" + getNextId() : \"ObservableSet\"\n    ) {\n        if (!isFunction(Set)) {\n            die(22)\n        }\n        this.atom_ = createAtom(this.name_)\n        this.enhancer_ = (newV, oldV) => enhancer(newV, oldV, name_)\n        if (initialData) {\n            this.replace(initialData)\n        }\n    }\n\n    private dehanceValue_<X extends T | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const value of this.data_.values()) {\n                    this.delete(value)\n                }\n            })\n        })\n    }\n\n    forEach(callbackFn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any) {\n        for (const value of this) {\n            callbackFn.call(thisArg, value, value, this)\n        }\n    }\n\n    get size() {\n        this.atom_.reportObserved()\n        return this.data_.size\n    }\n\n    add(value: T) {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: ADD,\n                object: this,\n                newValue: value\n            })\n            if (!change) {\n                return this\n            }\n            // ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(() => {\n                this.data_.add(this.enhancer_(value, undefined))\n                this.atom_.reportChanged()\n            })\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: ADD,\n                          object: this,\n                          newValue: value\n                      }\n                    : null\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n        }\n\n        return this\n    }\n\n    delete(value: any) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: DELETE,\n                object: this,\n                oldValue: value\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has(value)) {\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: value\n                      }\n                    : null\n\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            transaction(() => {\n                this.atom_.reportChanged()\n                this.data_.delete(value)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    has(value: any) {\n        this.atom_.reportObserved()\n        return this.data_.has(this.dehanceValue_(value))\n    }\n\n    entries() {\n        let nextIndex = 0\n        const keys = Array.from(this.keys())\n        const values = Array.from(this.values())\n        return makeIterable<[T, T]>({\n            next() {\n                const index = nextIndex\n                nextIndex += 1\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    keys(): IterableIterator<T> {\n        return this.values()\n    }\n\n    values(): IterableIterator<T> {\n        this.atom_.reportObserved()\n        const self = this\n        let nextIndex = 0\n        const observableValues = Array.from(this.data_.values())\n        return makeIterable<T>({\n            next() {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue_(observableValues[nextIndex++]), done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    replace(other: ObservableSet<T> | IObservableSetInitialValues<T>): ObservableSet<T> {\n        if (isObservableSet(other)) {\n            other = new Set(other)\n        }\n\n        transaction(() => {\n            if (Array.isArray(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (isES6Set(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (other !== null && other !== undefined) {\n                die(\"Cannot initialize set from \" + other)\n            }\n        })\n\n        return this\n    }\n    observe_(listener: (changes: ISetDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        // ... 'fireImmediately' could also be true?\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with sets.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<ISetWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    toJSON(): T[] {\n        return Array.from(this)\n    }\n\n    toString(): string {\n        return \"[object ObservableSet]\"\n    }\n\n    [Symbol.iterator]() {\n        return this.values()\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Set\"\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet) as (\n    thing: any\n) => thing is ObservableSet<any>\n","import {\n    CreateObservableOptions,\n    getAnnotationFromOptions,\n    propagateChanged,\n    isAnnotation,\n    $mobx,\n    Atom,\n    Annotation,\n    ComputedValue,\n    IAtom,\n    IComputedValueOptions,\n    IEnhancer,\n    IInterceptable,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    addHiddenProp,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isPlainObject,\n    isSpyEnabled,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    stringifyKey,\n    globalState,\n    ADD,\n    UPDATE,\n    die,\n    hasProp,\n    getDescriptor,\n    storedAnnotationsSymbol,\n    ownKeys,\n    isOverride,\n    defineProperty,\n    autoAnnotation,\n    getAdministration,\n    getDebugName,\n    objectPrototype,\n    MakeResult\n} from \"../internal\"\n\nconst descriptorCache = Object.create(null)\n\nexport type IObjectDidChange<T = any> = {\n    observableKind: \"object\"\n    name: PropertyKey\n    object: T\n    debugObjectName: string\n} & (\n    | {\n          type: \"add\"\n          newValue: any\n      }\n    | {\n          type: \"update\"\n          oldValue: any\n          newValue: any\n      }\n    | {\n          type: \"remove\"\n          oldValue: any\n      }\n)\n\nexport type IObjectWillChange<T = any> =\n    | {\n          object: T\n          type: \"update\" | \"add\"\n          name: PropertyKey\n          newValue: any\n      }\n    | {\n          object: T\n          type: \"remove\"\n          name: PropertyKey\n      }\n\nconst REMOVE = \"remove\"\n\nexport class ObservableObjectAdministration\n    implements IInterceptable<IObjectWillChange>, IListenable\n{\n    keysAtom_: IAtom\n    changeListeners_\n    interceptors_\n    proxy_: any\n    isPlainObject_: boolean\n    appliedAnnotations_?: object\n    private pendingKeys_: undefined | Map<PropertyKey, ObservableValue<boolean>>\n\n    constructor(\n        public target_: any,\n        public values_ = new Map<PropertyKey, ObservableValue<any> | ComputedValue<any>>(),\n        public name_: string,\n        // Used anytime annotation is not explicitely provided\n        public defaultAnnotation_: Annotation = autoAnnotation\n    ) {\n        this.keysAtom_ = new Atom(__DEV__ ? `${this.name_}.keys` : \"ObservableObject.keys\")\n        // Optimization: we use this frequently\n        this.isPlainObject_ = isPlainObject(this.target_)\n        if (__DEV__ && !isAnnotation(this.defaultAnnotation_)) {\n            die(`defaultAnnotation must be valid annotation`)\n        }\n        if (__DEV__) {\n            // Prepare structure for tracking which fields were already annotated\n            this.appliedAnnotations_ = {}\n        }\n    }\n\n    getObservablePropValue_(key: PropertyKey): any {\n        return this.values_.get(key)!.get()\n    }\n\n    setObservablePropValue_(key: PropertyKey, newValue): boolean | null {\n        const observable = this.values_.get(key)\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue)\n            return true\n        }\n\n        // intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                type: UPDATE,\n                object: this.proxy_ || this.target_,\n                name: key,\n                newValue\n            })\n            if (!change) {\n                return null\n            }\n            newValue = (change as any).newValue\n        }\n        newValue = (observable as any).prepareNewValue_(newValue)\n\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? {\n                          type: UPDATE,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            ;(observable as ObservableValue<any>).setNewValue_(newValue)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n        return true\n    }\n\n    get_(key: PropertyKey): any {\n        if (globalState.trackingDerivation && !hasProp(this.target_, key)) {\n            // Key doesn't exist yet, subscribe for it in case it's added later\n            this.has_(key)\n        }\n        return this.target_[key]\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {any} value\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    set_(key: PropertyKey, value: any, proxyTrap: boolean = false): boolean | null {\n        // Don't use .has(key) - we care about own\n        if (hasProp(this.target_, key)) {\n            // Existing prop\n            if (this.values_.has(key)) {\n                // Observable (can be intercepted)\n                return this.setObservablePropValue_(key, value)\n            } else if (proxyTrap) {\n                // Non-observable - proxy\n                return Reflect.set(this.target_, key, value)\n            } else {\n                // Non-observable\n                this.target_[key] = value\n                return true\n            }\n        } else {\n            // New prop\n            return this.extend_(\n                key,\n                { value, enumerable: true, writable: true, configurable: true },\n                this.defaultAnnotation_,\n                proxyTrap\n            )\n        }\n    }\n\n    // Trap for \"in\"\n    has_(key: PropertyKey): boolean {\n        if (!globalState.trackingDerivation) {\n            // Skip key subscription outside derivation\n            return key in this.target_\n        }\n        this.pendingKeys_ ||= new Map()\n        let entry = this.pendingKeys_.get(key)\n        if (!entry) {\n            entry = new ObservableValue(\n                key in this.target_,\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableObject.key?\",\n                false\n            )\n            this.pendingKeys_.set(key, entry)\n        }\n        return entry.get()\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop\n     */\n    make_(key: PropertyKey, annotation: Annotation | boolean): void {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return\n        }\n        assertAnnotable(this, annotation, key)\n        if (!(key in this.target_)) {\n            // Throw on missing key, except for decorators:\n            // Decorator annotations are collected from whole prototype chain.\n            // When called from super() some props may not exist yet.\n            // However we don't have to worry about missing prop,\n            // because the decorator must have been applied to something.\n            if (this.target_[storedAnnotationsSymbol]?.[key]) {\n                return // will be annotated by subclass constructor\n            } else {\n                die(1, annotation.annotationType_, `${this.name_}.${key.toString()}`)\n            }\n        }\n        let source = this.target_\n        while (source && source !== objectPrototype) {\n            const descriptor = getDescriptor(source, key)\n            if (descriptor) {\n                const outcome = annotation.make_(this, key, descriptor, source)\n                if (outcome === MakeResult.Cancel) {\n                    return\n                }\n                if (outcome === MakeResult.Break) {\n                    break\n                }\n            }\n            source = Object.getPrototypeOf(source)\n        }\n        recordAnnotationApplied(this, annotation, key)\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    extend_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        annotation: Annotation | boolean,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return this.defineProperty_(key, descriptor, proxyTrap)\n        }\n        assertAnnotable(this, annotation, key)\n        const outcome = annotation.extend_(this, key, descriptor, proxyTrap)\n        if (outcome) {\n            recordAnnotationApplied(this, annotation, key)\n        }\n        return outcome\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    defineProperty_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: descriptor.value\n                })\n                if (!change) {\n                    return null\n                }\n                const { newValue } = change as any\n                if (descriptor.value !== newValue) {\n                    descriptor = {\n                        ...descriptor,\n                        value: newValue\n                    }\n                }\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            // Notify\n            this.notifyPropertyAddition_(key, descriptor.value)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineObservableProperty_(\n        key: PropertyKey,\n        value: any,\n        enhancer: IEnhancer<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: value\n                })\n                if (!change) {\n                    return null\n                }\n                value = (change as any).newValue\n            }\n\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: true,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            const observable = new ObservableValue(\n                value,\n                enhancer,\n                __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\",\n                false\n            )\n\n            this.values_.set(key, observable)\n\n            // Notify (value possibly changed by ObservableValue)\n            this.notifyPropertyAddition_(key, observable.value_)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineComputedProperty_(\n        key: PropertyKey,\n        options: IComputedValueOptions<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: undefined\n                })\n                if (!change) {\n                    return null\n                }\n            }\n            options.name ||= __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\"\n            options.context = this.proxy_ || this.target_\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: false,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            this.values_.set(key, new ComputedValue(options))\n\n            // Notify\n            this.notifyPropertyAddition_(key, undefined)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    delete_(key: PropertyKey, proxyTrap: boolean = false): boolean | null {\n        // No such prop\n        if (!hasProp(this.target_, key)) {\n            return true\n        }\n\n        // Intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                object: this.proxy_ || this.target_,\n                name: key,\n                type: REMOVE\n            })\n            // Cancelled\n            if (!change) {\n                return null\n            }\n        }\n\n        // Delete\n        try {\n            startBatch()\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const observable = this.values_.get(key)\n            // Value needed for spies/listeners\n            let value = undefined\n            // Optimization: don't pull the value unless we will need it\n            if (!observable && (notify || notifySpy)) {\n                value = getDescriptor(this.target_, key)?.value\n            }\n            // delete prop (do first, may fail)\n            if (proxyTrap) {\n                if (!Reflect.deleteProperty(this.target_, key)) {\n                    return false\n                }\n            } else {\n                delete this.target_[key]\n            }\n            // Allow re-annotating this field\n            if (__DEV__) {\n                delete this.appliedAnnotations_![key]\n            }\n            // Clear observable\n            if (observable) {\n                this.values_.delete(key)\n                // for computed, value is undefined\n                if (observable instanceof ObservableValue) {\n                    value = observable.value_\n                }\n                // Notify: autorun(() => obj[key]), see #1796\n                propagateChanged(observable)\n            }\n            // Notify \"keys/entries/values\" observers\n            this.keysAtom_.reportChanged()\n\n            // Notify \"has\" observers\n            // \"in\" as it may still exist in proto\n            this.pendingKeys_?.get(key)?.set(key in this.target_)\n\n            // Notify spies/listeners\n            if (notify || notifySpy) {\n                const change: IObjectDidChange = {\n                    type: REMOVE,\n                    observableKind: \"object\",\n                    object: this.proxy_ || this.target_,\n                    debugObjectName: this.name_,\n                    oldValue: value,\n                    name: key\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportStart(change!)\n                }\n                if (notify) {\n                    notifyListeners(this, change)\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportEnd()\n                }\n            }\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(callback: (changes: IObjectDidChange) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support the fire immediately property for observable objects.\")\n        }\n        return registerListener(this, callback)\n    }\n\n    intercept_(handler): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    notifyPropertyAddition_(key: PropertyKey, value: any) {\n        const notify = hasListeners(this)\n        const notifySpy = __DEV__ && isSpyEnabled()\n        if (notify || notifySpy) {\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? ({\n                          type: ADD,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          name: key,\n                          newValue: value\n                      } as const)\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n\n        this.pendingKeys_?.get(key)?.set(true)\n\n        // Notify \"keys/entries/values\" observers\n        this.keysAtom_.reportChanged()\n    }\n\n    ownKeys_(): ArrayLike<string | symbol> {\n        this.keysAtom_.reportObserved()\n        return ownKeys(this.target_)\n    }\n\n    keys_(): PropertyKey[] {\n        // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.\n        // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.\n        // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)\n        // We choose to over-report in Object.keys(object), because:\n        // - typically it's used with simple data objects\n        // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected\n        this.keysAtom_.reportObserved()\n        return Object.keys(this.target_)\n    }\n}\n\nexport interface IIsObservableObject {\n    $mobx: ObservableObjectAdministration\n}\n\nexport function asObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    if (__DEV__ && options && isObservableObject(target)) {\n        die(`Options can't be provided for already observable objects.`)\n    }\n\n    if (hasProp(target, $mobx)) {\n        if (__DEV__ && !(getAdministration(target) instanceof ObservableObjectAdministration)) {\n            die(\n                `Cannot convert '${getDebugName(target)}' into observable object:` +\n                    `\\nThe target is already observable of different type.` +\n                    `\\nExtending builtins is not supported.`\n            )\n        }\n        return target\n    }\n\n    if (__DEV__ && !Object.isExtensible(target)) {\n        die(\"Cannot make the designated object observable; it is not extensible\")\n    }\n\n    const name =\n        options?.name ??\n        (__DEV__\n            ? `${\n                  isPlainObject(target) ? \"ObservableObject\" : target.constructor.name\n              }@${getNextId()}`\n            : \"ObservableObject\")\n\n    const adm = new ObservableObjectAdministration(\n        target,\n        new Map(),\n        String(name),\n        getAnnotationFromOptions(options)\n    )\n\n    addHiddenProp(target, $mobx, adm)\n\n    return target\n}\n\nconst isObservableObjectAdministration = createInstanceofPredicate(\n    \"ObservableObjectAdministration\",\n    ObservableObjectAdministration\n)\n\nfunction getCachedObservablePropDescriptor(key) {\n    return (\n        descriptorCache[key] ||\n        (descriptorCache[key] = {\n            get() {\n                return this[$mobx].getObservablePropValue_(key)\n            },\n            set(value) {\n                return this[$mobx].setObservablePropValue_(key, value)\n            }\n        })\n    )\n}\n\nexport function isObservableObject(thing: any): boolean {\n    if (isObject(thing)) {\n        return isObservableObjectAdministration((thing as any)[$mobx])\n    }\n    return false\n}\n\nexport function recordAnnotationApplied(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    if (__DEV__) {\n        adm.appliedAnnotations_![key] = annotation\n    }\n    // Remove applied decorator annotation so we don't try to apply it again in subclass constructor\n    delete adm.target_[storedAnnotationsSymbol]?.[key]\n}\n\nfunction assertAnnotable(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    // Valid annotation\n    if (__DEV__ && !isAnnotation(annotation)) {\n        die(`Cannot annotate '${adm.name_}.${key.toString()}': Invalid annotation.`)\n    }\n\n    /*\n    // Configurable, not sealed, not frozen\n    // Possibly not needed, just a little better error then the one thrown by engine.\n    // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.\n    if (__DEV__) {\n        const configurable = getDescriptor(adm.target_, key)?.configurable\n        const frozen = Object.isFrozen(adm.target_)\n        const sealed = Object.isSealed(adm.target_)\n        if (!configurable || frozen || sealed) {\n            const fieldName = `${adm.name_}.${key.toString()}`\n            const requestedAnnotationType = annotation.annotationType_\n            let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`\n            if (frozen) {\n                error += `\\nObject is frozen.`\n            }\n            if (sealed) {\n                error += `\\nObject is sealed.`\n            }\n            if (!configurable) {\n                error += `\\nproperty is not configurable.`\n                // Mention only if caused by us to avoid confusion\n                if (hasProp(adm.appliedAnnotations!, key)) {\n                    error += `\\nTo prevent accidental re-definition of a field by a subclass, `\n                    error += `all annotated fields of non-plain objects (classes) are not configurable.`\n                }\n            }\n            die(error)\n        }\n    }\n    */\n\n    // Not annotated\n    if (__DEV__ && !isOverride(annotation) && hasProp(adm.appliedAnnotations_!, key)) {\n        const fieldName = `${adm.name_}.${key.toString()}`\n        const currentAnnotationType = adm.appliedAnnotations_![key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already annotated with '${currentAnnotationType}'.` +\n                `\\nRe-annotating fields is not allowed.` +\n                `\\nUse 'override' annotation for methods overriden by subclass.`\n        )\n    }\n}\n","import {\n    isES6Map,\n    isObservableArray,\n    isObservableMap,\n    isES6Set,\n    isObservableSet,\n    hasProp,\n    isFunction,\n    objectPrototype\n} from \"../internal\"\n\ndeclare const Symbol\nconst toString = objectPrototype.toString\n\nexport function deepEqual(a: any, b: any, depth: number = -1): boolean {\n    return eq(a, b, depth)\n}\n\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a: any, b: any, depth: number, aStack?: any[], bStack?: any[]) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) {\n        return a !== 0 || 1 / a === 1 / b\n    }\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) {\n        return false\n    }\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) {\n        return b !== b\n    }\n    // Exhaust primitive checks\n    const type = typeof a\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\") {\n        return false\n    }\n\n    // Compare `[[Class]]` names.\n    const className = toString.call(a)\n    if (className !== toString.call(b)) {\n        return false\n    }\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a) {\n                return +b !== +b\n            }\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b\n        case \"[object Symbol]\":\n            return (\n                typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b)\n            )\n        case \"[object Map]\":\n        case \"[object Set]\":\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n            // Hide this extra level by increasing the depth.\n            if (depth >= 0) {\n                depth++\n            }\n            break\n    }\n    // Unwrap any wrapped objects.\n    a = unwrap(a)\n    b = unwrap(b)\n\n    const areArrays = className === \"[object Array]\"\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\") {\n            return false\n        }\n\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        const aCtor = a.constructor,\n            bCtor = b.constructor\n        if (\n            aCtor !== bCtor &&\n            !(\n                isFunction(aCtor) &&\n                aCtor instanceof aCtor &&\n                isFunction(bCtor) &&\n                bCtor instanceof bCtor\n            ) &&\n            \"constructor\" in a &&\n            \"constructor\" in b\n        ) {\n            return false\n        }\n    }\n\n    if (depth === 0) {\n        return false\n    } else if (depth < 0) {\n        depth = -1\n    }\n\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || []\n    bStack = bStack || []\n    let length = aStack.length\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a) {\n            return bStack[length] === b\n        }\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a)\n    bStack.push(b)\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length\n        if (length !== b.length) {\n            return false\n        }\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack)) {\n                return false\n            }\n        }\n    } else {\n        // Deep compare objects.\n        const keys = Object.keys(a)\n        let key\n        length = keys.length\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length) {\n            return false\n        }\n        while (length--) {\n            // Deep compare each member\n            key = keys[length]\n            if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) {\n                return false\n            }\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop()\n    bStack.pop()\n    return true\n}\n\nfunction unwrap(a: any) {\n    if (isObservableArray(a)) {\n        return a.slice()\n    }\n    if (isES6Map(a) || isObservableMap(a)) {\n        return Array.from(a.entries())\n    }\n    if (isES6Set(a) || isObservableSet(a)) {\n        return Array.from(a.entries())\n    }\n    return a\n}\n","import {\n    getNextId,\n    addHiddenFinalProp,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    makeIterable,\n    addHiddenProp,\n    ObservableArrayAdministration,\n    $mobx,\n    arrayExtensions,\n    IEnhancer,\n    isObservableArray,\n    IObservableArray,\n    defineProperty\n} from \"../internal\"\n\n/**\n * This array buffer contains two lists of properties, so that all arrays\n * can recycle their property definitions, which significantly improves performance of creating\n * properties on the fly.\n */\nlet OBSERVABLE_ARRAY_BUFFER_SIZE = 0\n\n// Typescript workaround to make sure ObservableArray extends Array\nclass StubArray {}\nfunction inherit(ctor, proto) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ctor.prototype, proto)\n    } else if (ctor.prototype.__proto__ !== undefined) {\n        ctor.prototype.__proto__ = proto\n    } else {\n        ctor.prototype = proto\n    }\n}\ninherit(StubArray, Array.prototype)\n\n// Weex proto freeze protection was here,\n// but it is unclear why the hack is need as MobX never changed the prototype\n// anyway, so removed it in V6\n\nclass LegacyObservableArray<T> extends StubArray {\n    constructor(\n        initialValues: T[] | undefined,\n        enhancer: IEnhancer<T>,\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        owned = false\n    ) {\n        super()\n\n        const adm = new ObservableArrayAdministration(name, enhancer, owned, true)\n        adm.proxy_ = this as any\n        addHiddenFinalProp(this, $mobx, adm)\n\n        if (initialValues && initialValues.length) {\n            const prev = allowStateChangesStart(true)\n            // @ts-ignore\n            this.spliceWithArray(0, 0, initialValues)\n            allowStateChangesEnd(prev)\n        }\n    }\n\n    concat(...arrays: T[][]): T[] {\n        ;(this[$mobx] as ObservableArrayAdministration).atom_.reportObserved()\n        return Array.prototype.concat.apply(\n            (this as any).slice(),\n            //@ts-ignore\n            arrays.map(a => (isObservableArray(a) ? a.slice() : a))\n        )\n    }\n\n    get length(): number {\n        return (this[$mobx] as ObservableArrayAdministration).getArrayLength_()\n    }\n\n    set length(newLength: number) {\n        ;(this[$mobx] as ObservableArrayAdministration).setArrayLength_(newLength)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Array\"\n    }\n\n    [Symbol.iterator]() {\n        const self = this\n        let nextIndex = 0\n        return makeIterable({\n            next() {\n                return nextIndex < self.length\n                    ? { value: self[nextIndex++], done: false }\n                    : { done: true, value: undefined }\n            }\n        })\n    }\n}\n\nObject.entries(arrayExtensions).forEach(([prop, fn]) => {\n    if (prop !== \"concat\") {\n        addHiddenProp(LegacyObservableArray.prototype, prop, fn)\n    }\n})\n\nfunction createArrayEntryDescriptor(index: number) {\n    return {\n        enumerable: false,\n        configurable: true,\n        get: function () {\n            return this[$mobx].get_(index)\n        },\n        set: function (value) {\n            this[$mobx].set_(index, value)\n        }\n    }\n}\n\nfunction createArrayBufferItem(index: number) {\n    defineProperty(LegacyObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index))\n}\n\nexport function reserveArrayBuffer(max: number) {\n    if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {\n        for (let index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {\n            createArrayBufferItem(index)\n        }\n        OBSERVABLE_ARRAY_BUFFER_SIZE = max\n    }\n}\n\nreserveArrayBuffer(1000)\n\nexport function createLegacyArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name?: string\n): IObservableArray<T> {\n    return new LegacyObservableArray(initialValues, enhancer, name) as any\n}\n","import { isAction } from \"../api/action\"\nimport {\n    $mobx,\n    IDepTreeNode,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    isObservableSet,\n    die,\n    isFunction\n} from \"../internal\"\n\nexport function getAtom(thing: any, property?: PropertyKey): IDepTreeNode {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined) {\n                die(23)\n            }\n            return (thing as any)[$mobx].atom_\n        }\n        if (isObservableSet(thing)) {\n            return (thing as any)[$mobx]\n        }\n        if (isObservableMap(thing)) {\n            if (property === undefined) {\n                return thing.keysAtom_\n            }\n            const observable = thing.data_.get(property) || thing.hasMap_.get(property)\n            if (!observable) {\n                die(25, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (property && !thing[$mobx]) {\n            thing[property]\n        } // See #1072\n        if (isObservableObject(thing)) {\n            if (!property) {\n                return die(26)\n            }\n            const observable = (thing as any)[$mobx].values_.get(property)\n            if (!observable) {\n                die(27, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing\n        }\n    } else if (isFunction(thing)) {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx]\n        }\n    }\n    die(28)\n}\n\nexport function getAdministration(thing: any, property?: string) {\n    if (!thing) {\n        die(29)\n    }\n    if (property !== undefined) {\n        return getAdministration(getAtom(thing, property))\n    }\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n        return thing\n    }\n    if (isObservableMap(thing) || isObservableSet(thing)) {\n        return thing\n    }\n    if (thing[$mobx]) {\n        return thing[$mobx]\n    }\n    die(24, thing)\n}\n\nexport function getDebugName(thing: any, property?: string): string {\n    let named\n    if (property !== undefined) {\n        named = getAtom(thing, property)\n    } else if (isAction(thing)) {\n        return thing.name\n    } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {\n        named = getAdministration(thing)\n    } else {\n        // valid for arrays as well\n        named = getAtom(thing)\n    }\n    return named.name_\n}\n","export function makeIterable<T>(iterator: Iterator<T>): IterableIterator<T> {\n    iterator[Symbol.iterator] = getSelf\n    return iterator as any\n}\n\nfunction getSelf() {\n    return this\n}\n","import { ObservableObjectAdministration, isFunction } from \"../internal\"\n\nexport const enum MakeResult {\n    Cancel,\n    Break,\n    Continue\n}\n\nexport type Annotation = {\n    annotationType_: string\n    make_(\n        adm: ObservableObjectAdministration,\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        source: object\n    ): MakeResult\n    extend_(\n        adm: ObservableObjectAdministration,\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean\n    ): boolean | null\n    options_?: any\n}\n\nexport type AnnotationMapEntry =\n    | Annotation\n    | true /* follow the default decorator, usually deep */\n    | false /* don't decorate this property */\n\n// AdditionalFields can be used to declare additional keys that can be used, for example to be able to\n// declare annotations for private/ protected members, see #2339\nexport type AnnotationsMap<T, AdditionalFields extends PropertyKey> = {\n    [P in Exclude<keyof T, \"toString\">]?: AnnotationMapEntry\n} & Record<AdditionalFields, AnnotationMapEntry>\n\nexport function isAnnotation(thing: any) {\n    return (\n        // Can be function\n        thing instanceof Object &&\n        typeof thing.annotationType_ === \"string\" &&\n        isFunction(thing.make_) &&\n        isFunction(thing.extend_)\n    )\n}\n\nexport function isAnnotationMapEntry(thing: any) {\n    return typeof thing === \"boolean\" || isAnnotation(thing)\n}\n","/**\n * (c) Michel Weststrate 2015 - 2020\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nimport { die } from \"./errors\"\nimport { getGlobal } from \"./utils/global\"\n;[\"Symbol\", \"Map\", \"Set\"].forEach(m => {\n    let g = getGlobal()\n    if (typeof g[m] === \"undefined\") {\n        die(`MobX requires global '${m}' to be available or polyfilled`)\n    }\n})\n\nimport { spy, getDebugName, $mobx } from \"./internal\"\n\nexport {\n    IObservable,\n    IDepTreeNode,\n    Reaction,\n    IReactionPublic,\n    IReactionDisposer,\n    untracked,\n    IAtom,\n    createAtom,\n    spy,\n    IComputedValue,\n    IEqualsComparer,\n    comparer,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    IObjectWillChange,\n    IObjectDidChange,\n    isObservableObject,\n    IValueDidChange,\n    IValueWillChange,\n    IObservableValue,\n    isObservableValue as isBoxedObservable,\n    IObservableArray,\n    IArrayWillChange,\n    IArrayWillSplice,\n    IArraySplice,\n    IArrayUpdate,\n    IArrayDidChange,\n    isObservableArray,\n    IKeyValueMap,\n    ObservableMap,\n    IMapEntries,\n    IMapEntry,\n    IMapWillChange,\n    IMapDidChange,\n    isObservableMap,\n    IObservableMapInitialValues,\n    ObservableSet,\n    isObservableSet,\n    ISetDidChange,\n    ISetWillChange,\n    IObservableSetInitialValues,\n    transaction,\n    observable,\n    IObservableFactory,\n    CreateObservableOptions,\n    computed,\n    IComputedFactory,\n    isObservable,\n    isObservableProp,\n    isComputed,\n    isComputedProp,\n    extendObservable,\n    observe,\n    intercept,\n    autorun,\n    IAutorunOptions,\n    reaction,\n    IReactionOptions,\n    when,\n    IWhenOptions,\n    action,\n    isAction,\n    runInAction,\n    IActionFactory,\n    keys,\n    values,\n    entries,\n    set,\n    remove,\n    has,\n    get,\n    apiOwnKeys as ownKeys,\n    apiDefineProperty as defineProperty,\n    configure,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    flow,\n    isFlow,\n    flowResult,\n    FlowCancellationError,\n    isFlowCancellationError,\n    toJS,\n    trace,\n    IObserverTree,\n    IDependencyTree,\n    getDependencyTree,\n    getObserverTree,\n    resetGlobalState as _resetGlobalState,\n    getGlobalState as _getGlobalState,\n    getDebugName,\n    getAtom,\n    getAdministration as _getAdministration,\n    allowStateChanges as _allowStateChanges,\n    runInAction as _allowStateChangesInsideComputed, // This has become the default behavior in Mobx 6\n    Lambda,\n    $mobx,\n    isComputingDerivation as _isComputingDerivation,\n    onReactionError,\n    interceptReads as _interceptReads,\n    IComputedValueOptions,\n    IActionRunInfo,\n    _startAction,\n    _endAction,\n    allowStateReadsStart as _allowStateReadsStart,\n    allowStateReadsEnd as _allowStateReadsEnd,\n    makeObservable,\n    makeAutoObservable,\n    autoAction as _autoAction,\n    AnnotationsMap,\n    AnnotationMapEntry,\n    override\n} from \"./internal\"\n\n// Devtools support\ndeclare const __MOBX_DEVTOOLS_GLOBAL_HOOK__: { injectMobx: (any) => void }\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy,\n        extras: {\n            getDebugName\n        },\n        $mobx\n    })\n}\n","'use strict';\n\nfunction parsePath(text) {\n  return text.split('.')\n}\n\nfunction push(arr, el) {\n  const newArr = arr.slice();\n  newArr.push(el);\n  return newArr;\n}\n\n// names of the traps that can be registered with ES6's Proxy object\nconst trapNames = [\n  'apply',\n  'construct',\n  'defineProperty',\n  'deleteProperty',\n  'enumerate',\n  'get',\n  'getOwnPropertyDescriptor',\n  'getPrototypeOf',\n  'has',\n  'isExtensible',\n  'ownKeys',\n  'preventExtensions',\n  'set',\n  'setPrototypeOf',\n]\n\n// a list of paramer indexes that indicate that the a recieves a key at that parameter\n// this information will be used to update the path accordingly\nconst keys = {\n  get: 1,\n  set: 1,\n  deleteProperty: 1,\n  has: 1,\n  defineProperty: 1,\n  getOwnPropertyDescriptor: 1,\n}\n\nfunction DeepProxy(rootTarget, traps, options) {\n\n  let path = [];\n  let userData = {};\n\n  if (options !== undefined && typeof options.path !== 'undefined') {\n    path = parsePath(options.path)\n  }\n  if (options !== undefined && typeof options.userData !== 'undefined') {\n    userData = options.userData\n  }\n\n  function createProxy(target, path) {\n\n    // avoid creating a new object between two traps\n    const context = { rootTarget, path };\n    Object.assign(context, userData);\n\n    const realTraps = {};\n\n    for (const trapName of trapNames) {\n      const keyParamIdx = keys[trapName]\n          , trap = traps[trapName];\n\n      if (typeof trap !== 'undefined') {\n\n        if (typeof keyParamIdx !== 'undefined') {\n\n          realTraps[trapName] = function () {\n\n            const key = arguments[keyParamIdx];\n\n            // update context for this trap\n            context.nest = function (nestedTarget) {\n              if (nestedTarget === undefined)\n                nestedTarget = rootTarget;\n              return createProxy(nestedTarget, push(path, key)); \n            }\n\n            return trap.apply(context, arguments);\n          }\n        } else {\n\n          realTraps[trapName] = function () {\n\n            // update context for this trap\n            context.nest = function (nestedTarget) {\n              if (nestedTarget === undefined)\n                nestedTarget = {};\n              return createProxy(nestedTarget, path);\n            }\n\n            return trap.apply(context, arguments);\n          }\n        }\n      }\n    }\n\n    return new Proxy(target, realTraps);\n  }\n\n  return createProxy(rootTarget, path);\n\n}\n\nmodule.exports = DeepProxy;\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subcription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: Partial<Observer<T>>): Subscription;\n  subscribe(next: (value: T) => void): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: any;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: any, delay: number = 0): any {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id: any, delay: number | null = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    intervalProvider.clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => delayDurationSelector(value, index).pipe(take(1), mapTo(value)));\n}\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple fo exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will say buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so var (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n","import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { Subscription } from '../Subscription';\nimport { OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  maxBufferSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const bufferCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxBufferSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active buffers, their related subscriptions, and removal functions.\n    let bufferRecords: { buffer: T[]; subs: Subscription }[] | null = [];\n    // If true, it means that every time we emit a buffer, we want to start a new buffer\n    // this is only really used for when *just* the buffer time span is passed.\n    let restartOnEmit = false;\n\n    /**\n     * Does the work of emitting the buffer from the record, ensuring that the\n     * record is removed before the emission so reentrant code (from some custom scheduling, perhaps)\n     * does not alter the buffer. Also checks to see if a new buffer needs to be started\n     * after the emit.\n     */\n    const emit = (record: { buffer: T[]; subs: Subscription }) => {\n      const { buffer, subs } = record;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    /**\n     * Called every time we start a new buffer. This does\n     * the work of scheduling a job at the requested bufferTimeSpan\n     * that will emit the buffer (if it's not unsubscribed before then).\n     */\n    const startBuffer = () => {\n      if (bufferRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const buffer: T[] = [];\n        const record = {\n          buffer,\n          subs,\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      // The user passed both a bufferTimeSpan (required), and a creation interval\n      // That means we need to start new buffers on the interval, and those buffers need\n      // to wait the required time span before emitting.\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n\n    const bufferTimeSubscriber = createOperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Copy the records, so if we need to remove one we\n        // don't mutate the array. It's hard, but not impossible to\n        // set up a buffer time that could mutate the array and\n        // cause issues here.\n        const recordsCopy = bufferRecords!.slice();\n        for (const record of recordsCopy) {\n          // Loop over all buffers and\n          const { buffer } = record;\n          buffer.push(value);\n          // If the buffer is over the max size, we need to emit it.\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      },\n      () => {\n        // The source completed, emit all of the active\n        // buffers we have before we complete.\n        while (bufferRecords?.length) {\n          subscriber.next(bufferRecords.shift()!.buffer);\n        }\n        bufferTimeSubscriber?.unsubscribe();\n        subscriber.complete();\n        subscriber.unsubscribe();\n      },\n      // Pass all errors through to consumer.\n      undefined,\n      // Clean up\n      () => (bufferRecords = null)\n    );\n\n    source.subscribe(bufferTimeSubscriber);\n  });\n}\n","import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n","\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n","export const version = \"contracts/5.7.0\";\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"networks/5.7.1\";\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","export const version = \"providers/5.7.2\";\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport { AbiCoder, checkResultErrors, ConstructorFragment, defaultAbiCoder, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, Result, TransactionDescription }from \"@ethersproject/abi\";\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\nimport * as base64 from \"@ethersproject/base64\";\nimport { Base58 as base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder, dnsEncode, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\nimport { defaultPath, entropyToMnemonic, getAccountPath, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction, TransactionTypes } from \"@ethersproject/transactions\";\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\n\n////////////////////////\n// Enums\n\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\nimport { UnsignedTransaction } from \"@ethersproject/transactions\";\n\n////////////////////////\n// Types and Interfaces\n\nimport { CoerceFunc } from \"@ethersproject/abi\";\nimport { Bytes, BytesLike, Hexable } from \"@ethersproject/bytes\"\nimport { Mnemonic } from \"@ethersproject/hdnode\";\nimport { EncryptOptions, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { Deferrable } from \"@ethersproject/properties\";\nimport { Utf8ErrorFunc } from \"@ethersproject/strings\";\nimport { AccessList, AccessListish } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, FetchJsonResponse, OnceBlockable, OncePollable, PollOptions } from \"@ethersproject/web\";\n\n////////////////////////\n// Exports\n\nexport {\n    AbiCoder,\n    defaultAbiCoder,\n\n    Fragment,\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    checkResultErrors,\n    Result,\n\n    Logger,\n\n    RLP,\n\n    _fetchData,\n    fetchJson,\n    poll,\n\n    checkProperties,\n    deepCopy,\n    defineReadOnly,\n    getStatic,\n    resolveProperties,\n    shallowCopy,\n\n    arrayify,\n\n    concat,\n    stripZeros,\n    zeroPad,\n\n    isBytes,\n    isBytesLike,\n\n    defaultPath,\n    HDNode,\n    SigningKey,\n\n    Interface,\n\n    LogDescription,\n    TransactionDescription,\n\n    base58,\n    base64,\n\n    hexlify,\n    isHexString,\n    hexConcat,\n    hexStripZeros,\n    hexValue,\n    hexZeroPad,\n    hexDataLength,\n    hexDataSlice,\n\n    nameprep,\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n    Utf8ErrorFuncs,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    dnsEncode,\n    hashMessage,\n    namehash,\n    isValidName,\n    id,\n\n    _TypedDataEncoder,\n\n    getAddress,\n    getIcapAddress,\n    getContractAddress,\n    getCreate2Address,\n    isAddress,\n\n    formatEther,\n    parseEther,\n\n    formatUnits,\n    parseUnits,\n\n    commify,\n\n    computeHmac,\n    keccak256,\n    ripemd160,\n    sha256,\n    sha512,\n\n    randomBytes,\n    shuffled,\n\n    solidityPack,\n    solidityKeccak256,\n    soliditySha256,\n\n    splitSignature,\n    joinSignature,\n\n    accessListify,\n    parseTransaction,\n    serializeTransaction,\n    TransactionTypes,\n\n    getJsonWalletAddress,\n\n    computeAddress,\n    recoverAddress,\n\n    computePublicKey,\n    recoverPublicKey,\n\n    verifyMessage,\n    verifyTypedData,\n\n    getAccountPath,\n    mnemonicToEntropy,\n    entropyToMnemonic,\n    isValidMnemonic,\n    mnemonicToSeed,\n\n\n    ////////////////////////\n    // Enums\n\n    SupportedAlgorithm,\n\n    UnicodeNormalizationForm,\n    Utf8ErrorReason,\n\n    ////////////////////////\n    // Types\n\n    Bytes,\n    BytesLike,\n    Hexable,\n\n    AccessList,\n    AccessListish,\n    UnsignedTransaction,\n\n    CoerceFunc,\n\n    Indexed,\n\n    Mnemonic,\n\n    Deferrable,\n\n    Utf8ErrorFunc,\n\n    ConnectionInfo,\n    OnceBlockable,\n    OncePollable,\n    PollOptions,\n    FetchJsonResponse,\n\n    EncryptOptions,\n    ProgressCallback\n}\n\n","export const version = \"ethers/5.7.2\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n","\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","// GENERATED FILE. DO NOT EDIT.\nvar Long = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  /**\n   * @license\n   * Copyright 2009 The Closure Library Authors\n   * Copyright 2020 Daniel Wirtz / The long.js Authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   * SPDX-License-Identifier: Apache-2.0\n   */\n  // WebAssembly optimizations to do native i64 multiplication and divide\n  var wasm = null;\n  \n  try {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n  } catch (e) {// no wasm support :(\n  }\n  /**\n   * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n   *  See the from* functions below for more convenient ways of constructing Longs.\n   * @exports Long\n   * @class A Long class for representing a 64 bit two's-complement integer value.\n   * @param {number} low The low (signed) 32 bits of the long\n   * @param {number} high The high (signed) 32 bits of the long\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @constructor\n   */\n  \n  \n  function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n  \n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n  \n    this.unsigned = !!unsigned;\n  } // The internal representation of a long is the two given signed, 32-bit values.\n  // We use 32-bit pieces because these are the size of integers on which\n  // Javascript performs bit-operations.  For operations like addition and\n  // multiplication, we split each number into 16 bit pieces, which can easily be\n  // multiplied within Javascript's floating-point representation without overflow\n  // or change in sign.\n  //\n  // In the algorithms below, we frequently reduce the negative case to the\n  // positive case by negating the input(s) and then post-processing the result.\n  // Note that we must ALWAYS check specially whether those values are MIN_VALUE\n  // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n  // a positive number, it overflows back into a negative).  Not handling this\n  // case would often result in infinite recursion.\n  //\n  // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n  // methods on which they depend.\n  \n  /**\n   * An indicator used to reliably determine if an object is a Long or not.\n   * @type {boolean}\n   * @const\n   * @private\n   */\n  \n  \n  Long.prototype.__isLong__;\n  Object.defineProperty(Long.prototype, \"__isLong__\", {\n    value: true\n  });\n  /**\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   * @inner\n   */\n  \n  function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n  }\n  /**\n   * @function\n   * @param {*} value number\n   * @returns {number}\n   * @inner\n   */\n  \n  \n  function ctz32(value) {\n    var c = Math.clz32(value & -value);\n    return value ? 31 - c : c;\n  }\n  /**\n   * Tests if the specified object is a Long.\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   */\n  \n  \n  Long.isLong = isLong;\n  /**\n   * A cache of the Long representations of small integer values.\n   * @type {!Object}\n   * @inner\n   */\n  \n  var INT_CACHE = {};\n  /**\n   * A cache of the Long representations of small unsigned integer values.\n   * @type {!Object}\n   * @inner\n   */\n  \n  var UINT_CACHE = {};\n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n  \n    if (unsigned) {\n      value >>>= 0;\n  \n      if (cache = 0 <= value && value < 256) {\n        cachedObj = UINT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n  \n      obj = fromBits(value, 0, true);\n      if (cache) UINT_CACHE[value] = obj;\n      return obj;\n    } else {\n      value |= 0;\n  \n      if (cache = -128 <= value && value < 128) {\n        cachedObj = INT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n  \n      obj = fromBits(value, value < 0 ? -1 : 0, false);\n      if (cache) INT_CACHE[value] = obj;\n      return obj;\n    }\n  }\n  /**\n   * Returns a Long representing the given 32 bit integer value.\n   * @function\n   * @param {number} value The 32 bit integer in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromInt = fromInt;\n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromNumber(value, unsigned) {\n    if (isNaN(value)) return unsigned ? UZERO : ZERO;\n  \n    if (unsigned) {\n      if (value < 0) return UZERO;\n      if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    } else {\n      if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n      if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n    }\n  \n    if (value < 0) return fromNumber(-value, unsigned).neg();\n    return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n  }\n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @function\n   * @param {number} value The number in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromNumber = fromNumber;\n  /**\n   * @param {number} lowBits\n   * @param {number} highBits\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n  }\n  /**\n   * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n   *  assumed to use 32 bits.\n   * @function\n   * @param {number} lowBits The low 32 bits\n   * @param {number} highBits The high 32 bits\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBits = fromBits;\n  /**\n   * @function\n   * @param {number} base\n   * @param {number} exponent\n   * @returns {number}\n   * @inner\n   */\n  \n  var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n  \n  /**\n   * @param {string} str\n   * @param {(boolean|number)=} unsigned\n   * @param {number=} radix\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromString(str, unsigned, radix) {\n    if (str.length === 0) throw Error('empty string');\n  \n    if (typeof unsigned === 'number') {\n      // For goog.math.long compatibility\n      radix = unsigned;\n      unsigned = false;\n    } else {\n      unsigned = !!unsigned;\n    }\n  \n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") return unsigned ? UZERO : ZERO;\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    var p;\n    if ((p = str.indexOf('-')) > 0) throw Error('interior hyphen');else if (p === 0) {\n      return fromString(str.substring(1), unsigned, radix).neg();\n    } // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n  \n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n  \n    for (var i = 0; i < str.length; i += 8) {\n      var size = Math.min(8, str.length - i),\n          value = parseInt(str.substring(i, i + size), radix);\n  \n      if (size < 8) {\n        var power = fromNumber(pow_dbl(radix, size));\n        result = result.mul(power).add(fromNumber(value));\n      } else {\n        result = result.mul(radixToPower);\n        result = result.add(fromNumber(value));\n      }\n    }\n  \n    result.unsigned = unsigned;\n    return result;\n  }\n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   * @function\n   * @param {string} str The textual representation of the Long\n   * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n   * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromString = fromString;\n  /**\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromValue(val, unsigned) {\n    if (typeof val === 'number') return fromNumber(val, unsigned);\n    if (typeof val === 'string') return fromString(val, unsigned); // Throws for non-objects, converts non-instanceof Long:\n  \n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n  }\n  /**\n   * Converts the specified value to a Long using the appropriate from* function for its type.\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long}\n   */\n  \n  \n  Long.fromValue = fromValue; // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n  // no runtime penalty for these.\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_16_DBL = 1 << 16;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_24_DBL = 1 << 24;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n  /**\n   * @type {!Long}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var ZERO = fromInt(0);\n  /**\n   * Signed zero.\n   * @type {!Long}\n   */\n  \n  Long.ZERO = ZERO;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var UZERO = fromInt(0, true);\n  /**\n   * Unsigned zero.\n   * @type {!Long}\n   */\n  \n  Long.UZERO = UZERO;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var ONE = fromInt(1);\n  /**\n   * Signed one.\n   * @type {!Long}\n   */\n  \n  Long.ONE = ONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var UONE = fromInt(1, true);\n  /**\n   * Unsigned one.\n   * @type {!Long}\n   */\n  \n  Long.UONE = UONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var NEG_ONE = fromInt(-1);\n  /**\n   * Signed negative one.\n   * @type {!Long}\n   */\n  \n  Long.NEG_ONE = NEG_ONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n  /**\n   * Maximum signed value.\n   * @type {!Long}\n   */\n  \n  Long.MAX_VALUE = MAX_VALUE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n  /**\n   * Maximum unsigned value.\n   * @type {!Long}\n   */\n  \n  Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n  /**\n   * Minimum signed value.\n   * @type {!Long}\n   */\n  \n  Long.MIN_VALUE = MIN_VALUE;\n  /**\n   * @alias Long.prototype\n   * @inner\n   */\n  \n  var LongPrototype = Long.prototype;\n  /**\n   * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  LongPrototype.toInt = function toInt() {\n    return this.unsigned ? this.low >>> 0 : this.low;\n  };\n  /**\n   * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  \n  LongPrototype.toNumber = function toNumber() {\n    if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n  };\n  /**\n   * Converts the Long to a string written in the specified radix.\n   * @this {!Long}\n   * @param {number=} radix Radix (2-36), defaults to 10\n   * @returns {string}\n   * @override\n   * @throws {RangeError} If `radix` is out of range\n   */\n  \n  \n  LongPrototype.toString = function toString(radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    if (this.isZero()) return '0';\n  \n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      if (this.eq(MIN_VALUE)) {\n        // We need to change the Long value before it can be negated, so we remove\n        // the bottom-most digit in this base and then recurse to do the rest.\n        var radixLong = fromNumber(radix),\n            div = this.div(radixLong),\n            rem1 = div.mul(radixLong).sub(this);\n        return div.toString(radix) + rem1.toInt().toString(radix);\n      } else return '-' + this.neg().toString(radix);\n    } // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n  \n  \n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n        rem = this;\n    var result = '';\n  \n    while (true) {\n      var remDiv = rem.div(radixToPower),\n          intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n          digits = intval.toString(radix);\n      rem = remDiv;\n      if (rem.isZero()) return digits + result;else {\n        while (digits.length < 6) digits = '0' + digits;\n  \n        result = '' + digits + result;\n      }\n    }\n  };\n  /**\n   * Gets the high 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed high bits\n   */\n  \n  \n  LongPrototype.getHighBits = function getHighBits() {\n    return this.high;\n  };\n  /**\n   * Gets the high 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned high bits\n   */\n  \n  \n  LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n    return this.high >>> 0;\n  };\n  /**\n   * Gets the low 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed low bits\n   */\n  \n  \n  LongPrototype.getLowBits = function getLowBits() {\n    return this.low;\n  };\n  /**\n   * Gets the low 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned low bits\n   */\n  \n  \n  LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n    return this.low >>> 0;\n  };\n  /**\n   * Gets the number of bits needed to represent the absolute value of this Long.\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  \n  LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n    if (this.isNegative()) // Unsigned Longs are never negative\n      return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n    var val = this.high != 0 ? this.high : this.low;\n  \n    for (var bit = 31; bit > 0; bit--) if ((val & 1 << bit) != 0) break;\n  \n    return this.high != 0 ? bit + 33 : bit + 1;\n  };\n  /**\n   * Tests if this Long's value equals zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isZero = function isZero() {\n    return this.high === 0 && this.low === 0;\n  };\n  /**\n   * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.eqz = LongPrototype.isZero;\n  /**\n   * Tests if this Long's value is negative.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  LongPrototype.isNegative = function isNegative() {\n    return !this.unsigned && this.high < 0;\n  };\n  /**\n   * Tests if this Long's value is positive or zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isPositive = function isPositive() {\n    return this.unsigned || this.high >= 0;\n  };\n  /**\n   * Tests if this Long's value is odd.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isOdd = function isOdd() {\n    return (this.low & 1) === 1;\n  };\n  /**\n   * Tests if this Long's value is even.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isEven = function isEven() {\n    return (this.low & 1) === 0;\n  };\n  /**\n   * Tests if this Long's value equals the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.equals = function equals(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  };\n  /**\n   * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.eq = LongPrototype.equals;\n  /**\n   * Tests if this Long's value differs from the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.notEquals = function notEquals(other) {\n    return !this.eq(\n    /* validates */\n    other);\n  };\n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.neq = LongPrototype.notEquals;\n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.ne = LongPrototype.notEquals;\n  /**\n   * Tests if this Long's value is less than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.lessThan = function lessThan(other) {\n    return this.comp(\n    /* validates */\n    other) < 0;\n  };\n  /**\n   * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.lt = LongPrototype.lessThan;\n  /**\n   * Tests if this Long's value is less than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n    return this.comp(\n    /* validates */\n    other) <= 0;\n  };\n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.lte = LongPrototype.lessThanOrEqual;\n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.le = LongPrototype.lessThanOrEqual;\n  /**\n   * Tests if this Long's value is greater than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.greaterThan = function greaterThan(other) {\n    return this.comp(\n    /* validates */\n    other) > 0;\n  };\n  /**\n   * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.gt = LongPrototype.greaterThan;\n  /**\n   * Tests if this Long's value is greater than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n    return this.comp(\n    /* validates */\n    other) >= 0;\n  };\n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n  /**\n   * Compares this Long's value with the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  \n  LongPrototype.compare = function compare(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.eq(other)) return 0;\n    var thisNeg = this.isNegative(),\n        otherNeg = other.isNegative();\n    if (thisNeg && !otherNeg) return -1;\n    if (!thisNeg && otherNeg) return 1; // At this point the sign bits are the same\n  \n    if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1; // Both are positive if at least one is unsigned\n  \n    return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n  };\n  /**\n   * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  \n  \n  LongPrototype.comp = LongPrototype.compare;\n  /**\n   * Negates this Long's value.\n   * @this {!Long}\n   * @returns {!Long} Negated Long\n   */\n  \n  LongPrototype.negate = function negate() {\n    if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\n    return this.not().add(ONE);\n  };\n  /**\n   * Negates this Long's value. This is an alias of {@link Long#negate}.\n   * @function\n   * @returns {!Long} Negated Long\n   */\n  \n  \n  LongPrototype.neg = LongPrototype.negate;\n  /**\n   * Returns the sum of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} addend Addend\n   * @returns {!Long} Sum\n   */\n  \n  LongPrototype.add = function add(addend) {\n    if (!isLong(addend)) addend = fromValue(addend); // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  /**\n   * Returns the difference of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  \n  \n  LongPrototype.subtract = function subtract(subtrahend) {\n    if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n    return this.add(subtrahend.neg());\n  };\n  /**\n   * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n   * @function\n   * @param {!Long|number|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  \n  \n  LongPrototype.sub = LongPrototype.subtract;\n  /**\n   * Returns the product of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  \n  LongPrototype.multiply = function multiply(multiplier) {\n    if (this.isZero()) return this;\n    if (!isLong(multiplier)) multiplier = fromValue(multiplier); // use wasm support if present\n  \n    if (wasm) {\n      var low = wasm[\"mul\"](this.low, this.high, multiplier.low, multiplier.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    if (multiplier.isZero()) return this.unsigned ? UZERO : ZERO;\n    if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\n    if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\n  \n    if (this.isNegative()) {\n      if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());else return this.neg().mul(multiplier).neg();\n    } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg(); // If both longs are small, use float multiplication\n  \n  \n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24)) return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned); // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  /**\n   * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n   * @function\n   * @param {!Long|number|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  \n  \n  LongPrototype.mul = LongPrototype.multiply;\n  /**\n   * Returns this Long divided by the specified. The result is signed if this Long is signed or\n   *  unsigned if this Long is unsigned.\n   * @this {!Long}\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  \n  LongPrototype.divide = function divide(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor);\n    if (divisor.isZero()) throw Error('division by zero'); // use wasm support if present\n  \n    if (wasm) {\n      // guard against signed division overflow: the largest\n      // negative number / -1 would be 1 larger than the largest\n      // positive number, due to two's complement.\n      if (!this.unsigned && this.high === -0x80000000 && divisor.low === -1 && divisor.high === -1) {\n        // be consistent with non-wasm code path\n        return this;\n      }\n  \n      var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    if (this.isZero()) return this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n  \n    if (!this.unsigned) {\n      // This section is only relevant for signed longs and is derived from the\n      // closure library as a whole.\n      if (this.eq(MIN_VALUE)) {\n        if (divisor.eq(ONE) || divisor.eq(NEG_ONE)) return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n        else if (divisor.eq(MIN_VALUE)) return ONE;else {\n          // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n          var halfThis = this.shr(1);\n          approx = halfThis.div(divisor).shl(1);\n  \n          if (approx.eq(ZERO)) {\n            return divisor.isNegative() ? ONE : NEG_ONE;\n          } else {\n            rem = this.sub(divisor.mul(approx));\n            res = approx.add(rem.div(divisor));\n            return res;\n          }\n        }\n      } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\n  \n      if (this.isNegative()) {\n        if (divisor.isNegative()) return this.neg().div(divisor.neg());\n        return this.neg().div(divisor).neg();\n      } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n  \n      res = ZERO;\n    } else {\n      // The algorithm below has not been made for unsigned longs. It's therefore\n      // required to take special care of the MSB prior to running it.\n      if (!divisor.unsigned) divisor = divisor.toUnsigned();\n      if (divisor.gt(this)) return UZERO;\n      if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n        return UONE;\n      res = UZERO;\n    } // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n  \n  \n    rem = this;\n  \n    while (rem.gte(divisor)) {\n      // Approximate the result of division. This may be a little greater or\n      // smaller than the actual value.\n      approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber())); // We will tweak the approximate result by changing it in the 48-th digit or\n      // the smallest non-fractional digit, whichever is larger.\n  \n      var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n          delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n          // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n          approxRem = approxRes.mul(divisor);\n  \n      while (approxRem.isNegative() || approxRem.gt(rem)) {\n        approx -= delta;\n        approxRes = fromNumber(approx, this.unsigned);\n        approxRem = approxRes.mul(divisor);\n      } // We know the answer can't be zero... and actually, zero would cause\n      // infinite recursion since we would make no progress.\n  \n  \n      if (approxRes.isZero()) approxRes = ONE;\n      res = res.add(approxRes);\n      rem = rem.sub(approxRem);\n    }\n  \n    return res;\n  };\n  /**\n   * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  \n  \n  LongPrototype.div = LongPrototype.divide;\n  /**\n   * Returns this Long modulo the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  LongPrototype.modulo = function modulo(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor); // use wasm support if present\n  \n    if (wasm) {\n      var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    return this.sub(this.div(divisor).mul(divisor));\n  };\n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  \n  LongPrototype.mod = LongPrototype.modulo;\n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  LongPrototype.rem = LongPrototype.modulo;\n  /**\n   * Returns the bitwise NOT of this Long.\n   * @this {!Long}\n   * @returns {!Long}\n   */\n  \n  LongPrototype.not = function not() {\n    return fromBits(~this.low, ~this.high, this.unsigned);\n  };\n  /**\n   * Returns count leading zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.countLeadingZeros = function countLeadingZeros() {\n    return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n  };\n  /**\n   * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.clz = LongPrototype.countLeadingZeros;\n  /**\n   * Returns count trailing zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  \n  LongPrototype.countTrailingZeros = function countTrailingZeros() {\n    return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n  };\n  /**\n   * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.ctz = LongPrototype.countTrailingZeros;\n  /**\n   * Returns the bitwise AND of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  LongPrototype.and = function and(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n  };\n  /**\n   * Returns the bitwise OR of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  \n  LongPrototype.or = function or(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n  };\n  /**\n   * Returns the bitwise XOR of this Long and the given one.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  \n  LongPrototype.xor = function xor(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits shifted to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shiftLeft = function shiftLeft(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);else return fromBits(0, this.low << numBits - 32, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shl = LongPrototype.shiftLeft;\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shiftRight = function shiftRight(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);else return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shr = LongPrototype.shiftRight;\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >>> numBits, this.unsigned);\n    if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n    return fromBits(this.high >>> numBits - 32, 0, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n  /**\n   * Returns this Long with bits rotated to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  LongPrototype.rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  \n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.low << numBits | this.high >>> b, this.high << numBits | this.low >>> b, this.unsigned);\n    }\n  \n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.high << numBits | this.low >>> b, this.low << numBits | this.high >>> b, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  \n  LongPrototype.rotl = LongPrototype.rotateLeft;\n  /**\n   * Returns this Long with bits rotated to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  LongPrototype.rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  \n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.high << b | this.low >>> numBits, this.low << b | this.high >>> numBits, this.unsigned);\n    }\n  \n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.low << b | this.high >>> numBits, this.high << b | this.low >>> numBits, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  \n  LongPrototype.rotr = LongPrototype.rotateRight;\n  /**\n   * Converts this Long to signed.\n   * @this {!Long}\n   * @returns {!Long} Signed long\n   */\n  \n  LongPrototype.toSigned = function toSigned() {\n    if (!this.unsigned) return this;\n    return fromBits(this.low, this.high, false);\n  };\n  /**\n   * Converts this Long to unsigned.\n   * @this {!Long}\n   * @returns {!Long} Unsigned long\n   */\n  \n  \n  LongPrototype.toUnsigned = function toUnsigned() {\n    if (this.unsigned) return this;\n    return fromBits(this.low, this.high, true);\n  };\n  /**\n   * Converts this Long to its byte representation.\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @this {!Long}\n   * @returns {!Array.<number>} Byte representation\n   */\n  \n  \n  LongPrototype.toBytes = function toBytes(le) {\n    return le ? this.toBytesLE() : this.toBytesBE();\n  };\n  /**\n   * Converts this Long to its little endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Little endian byte representation\n   */\n  \n  \n  LongPrototype.toBytesLE = function toBytesLE() {\n    var hi = this.high,\n        lo = this.low;\n    return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24];\n  };\n  /**\n   * Converts this Long to its big endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Big endian byte representation\n   */\n  \n  \n  LongPrototype.toBytesBE = function toBytesBE() {\n    var hi = this.high,\n        lo = this.low;\n    return [hi >>> 24, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n  };\n  /**\n   * Creates a Long from its byte representation.\n   * @param {!Array.<number>} bytes Byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytes = function fromBytes(bytes, unsigned, le) {\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n  };\n  /**\n   * Creates a Long from its little endian byte representation.\n   * @param {!Array.<number>} bytes Little endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);\n  };\n  /**\n   * Creates a Long from its big endian byte representation.\n   * @param {!Array.<number>} bytes Big endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);\n  };\n  \n  var _default = Long;\n  exports.default = _default;\n  return \"default\" in exports ? exports.default : exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return Long; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = Long;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/* eslint-disable */\nimport Long from \"long\";\nimport { CallContext, CallOptions } from \"nice-grpc-common\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"ecssnapshot\";\n\nexport interface ECSState {\n  componentIdIdx: number;\n  entityIdIdx: number;\n  value: Uint8Array;\n}\n\nexport interface ECSStateSnapshot {\n  state: ECSState[];\n  stateComponents: string[];\n  stateEntities: string[];\n  stateHash: string;\n  startBlockNumber: number;\n  endBlockNumber: number;\n  worldAddress: string;\n}\n\nexport interface Worlds {\n  worldAddress: string[];\n}\n\n/** The request message for the latest ECS state. */\nexport interface ECSStateRequestLatest {\n  worldAddress: string;\n}\n\n/** The request message for the latest ECS statem, pruned for specific address. */\nexport interface ECSStateRequestLatestStreamPruned {\n  worldAddress: string;\n  pruneAddress: string;\n  pruneComponentId?: string | undefined;\n  chunkPercentage?: number | undefined;\n}\n\n/** The request message for the latest chunked ECS state. */\nexport interface ECSStateRequestLatestStream {\n  worldAddress: string;\n  chunkPercentage?: number | undefined;\n}\n\n/** The request message for the latest block based on latest ECS state. */\nexport interface ECSStateBlockRequestLatest {\n  worldAddress: string;\n}\n\n/** The request message for the ECS state given a block number. */\nexport interface ECSStateRequestAtBlock {\n  blockNumber: number;\n}\n\n/** The request message for all worlds. */\nexport interface WorldsRequest {}\n\n/** The response message containing the current state, hash of that state, and the block number of that state. */\nexport interface ECSStateReply {\n  state: ECSState[];\n  stateComponents: string[];\n  stateEntities: string[];\n  stateHash: string;\n  blockNumber: number;\n}\n\nexport interface ECSStateReplyV2 {\n  state: ECSState[];\n  stateComponents: string[];\n  stateEntities: Uint8Array[];\n  stateHash: string;\n  blockNumber: number;\n}\n\nexport interface ECSStateBlockReply {\n  blockNumber: number;\n}\n\nfunction createBaseECSState(): ECSState {\n  return { componentIdIdx: 0, entityIdIdx: 0, value: new Uint8Array() };\n}\n\nexport const ECSState = {\n  encode(message: ECSState, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.componentIdIdx !== 0) {\n      writer.uint32(8).uint32(message.componentIdIdx);\n    }\n    if (message.entityIdIdx !== 0) {\n      writer.uint32(16).uint32(message.entityIdIdx);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(26).bytes(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSState {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSState();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.componentIdIdx = reader.uint32();\n          break;\n        case 2:\n          message.entityIdIdx = reader.uint32();\n          break;\n        case 3:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSState>): ECSState {\n    const message = createBaseECSState();\n    message.componentIdIdx = object.componentIdIdx ?? 0;\n    message.entityIdIdx = object.entityIdIdx ?? 0;\n    message.value = object.value ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseECSStateSnapshot(): ECSStateSnapshot {\n  return {\n    state: [],\n    stateComponents: [],\n    stateEntities: [],\n    stateHash: \"\",\n    startBlockNumber: 0,\n    endBlockNumber: 0,\n    worldAddress: \"\",\n  };\n}\n\nexport const ECSStateSnapshot = {\n  encode(message: ECSStateSnapshot, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.state) {\n      ECSState.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.stateComponents) {\n      writer.uint32(18).string(v!);\n    }\n    for (const v of message.stateEntities) {\n      writer.uint32(26).string(v!);\n    }\n    if (message.stateHash !== \"\") {\n      writer.uint32(34).string(message.stateHash);\n    }\n    if (message.startBlockNumber !== 0) {\n      writer.uint32(40).uint32(message.startBlockNumber);\n    }\n    if (message.endBlockNumber !== 0) {\n      writer.uint32(48).uint32(message.endBlockNumber);\n    }\n    if (message.worldAddress !== \"\") {\n      writer.uint32(58).string(message.worldAddress);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateSnapshot {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateSnapshot();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.state.push(ECSState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.stateComponents.push(reader.string());\n          break;\n        case 3:\n          message.stateEntities.push(reader.string());\n          break;\n        case 4:\n          message.stateHash = reader.string();\n          break;\n        case 5:\n          message.startBlockNumber = reader.uint32();\n          break;\n        case 6:\n          message.endBlockNumber = reader.uint32();\n          break;\n        case 7:\n          message.worldAddress = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateSnapshot>): ECSStateSnapshot {\n    const message = createBaseECSStateSnapshot();\n    message.state = object.state?.map((e) => ECSState.fromPartial(e)) || [];\n    message.stateComponents = object.stateComponents?.map((e) => e) || [];\n    message.stateEntities = object.stateEntities?.map((e) => e) || [];\n    message.stateHash = object.stateHash ?? \"\";\n    message.startBlockNumber = object.startBlockNumber ?? 0;\n    message.endBlockNumber = object.endBlockNumber ?? 0;\n    message.worldAddress = object.worldAddress ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseWorlds(): Worlds {\n  return { worldAddress: [] };\n}\n\nexport const Worlds = {\n  encode(message: Worlds, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.worldAddress) {\n      writer.uint32(10).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Worlds {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseWorlds();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.worldAddress.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Worlds>): Worlds {\n    const message = createBaseWorlds();\n    message.worldAddress = object.worldAddress?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseECSStateRequestLatest(): ECSStateRequestLatest {\n  return { worldAddress: \"\" };\n}\n\nexport const ECSStateRequestLatest = {\n  encode(message: ECSStateRequestLatest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.worldAddress !== \"\") {\n      writer.uint32(10).string(message.worldAddress);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateRequestLatest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateRequestLatest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.worldAddress = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateRequestLatest>): ECSStateRequestLatest {\n    const message = createBaseECSStateRequestLatest();\n    message.worldAddress = object.worldAddress ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseECSStateRequestLatestStreamPruned(): ECSStateRequestLatestStreamPruned {\n  return { worldAddress: \"\", pruneAddress: \"\", pruneComponentId: undefined, chunkPercentage: undefined };\n}\n\nexport const ECSStateRequestLatestStreamPruned = {\n  encode(message: ECSStateRequestLatestStreamPruned, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.worldAddress !== \"\") {\n      writer.uint32(10).string(message.worldAddress);\n    }\n    if (message.pruneAddress !== \"\") {\n      writer.uint32(18).string(message.pruneAddress);\n    }\n    if (message.pruneComponentId !== undefined) {\n      writer.uint32(26).string(message.pruneComponentId);\n    }\n    if (message.chunkPercentage !== undefined) {\n      writer.uint32(32).uint32(message.chunkPercentage);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateRequestLatestStreamPruned {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateRequestLatestStreamPruned();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.worldAddress = reader.string();\n          break;\n        case 2:\n          message.pruneAddress = reader.string();\n          break;\n        case 3:\n          message.pruneComponentId = reader.string();\n          break;\n        case 4:\n          message.chunkPercentage = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateRequestLatestStreamPruned>): ECSStateRequestLatestStreamPruned {\n    const message = createBaseECSStateRequestLatestStreamPruned();\n    message.worldAddress = object.worldAddress ?? \"\";\n    message.pruneAddress = object.pruneAddress ?? \"\";\n    message.pruneComponentId = object.pruneComponentId ?? undefined;\n    message.chunkPercentage = object.chunkPercentage ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseECSStateRequestLatestStream(): ECSStateRequestLatestStream {\n  return { worldAddress: \"\", chunkPercentage: undefined };\n}\n\nexport const ECSStateRequestLatestStream = {\n  encode(message: ECSStateRequestLatestStream, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.worldAddress !== \"\") {\n      writer.uint32(10).string(message.worldAddress);\n    }\n    if (message.chunkPercentage !== undefined) {\n      writer.uint32(16).uint32(message.chunkPercentage);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateRequestLatestStream {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateRequestLatestStream();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.worldAddress = reader.string();\n          break;\n        case 2:\n          message.chunkPercentage = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateRequestLatestStream>): ECSStateRequestLatestStream {\n    const message = createBaseECSStateRequestLatestStream();\n    message.worldAddress = object.worldAddress ?? \"\";\n    message.chunkPercentage = object.chunkPercentage ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseECSStateBlockRequestLatest(): ECSStateBlockRequestLatest {\n  return { worldAddress: \"\" };\n}\n\nexport const ECSStateBlockRequestLatest = {\n  encode(message: ECSStateBlockRequestLatest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.worldAddress !== \"\") {\n      writer.uint32(10).string(message.worldAddress);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateBlockRequestLatest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateBlockRequestLatest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.worldAddress = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateBlockRequestLatest>): ECSStateBlockRequestLatest {\n    const message = createBaseECSStateBlockRequestLatest();\n    message.worldAddress = object.worldAddress ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseECSStateRequestAtBlock(): ECSStateRequestAtBlock {\n  return { blockNumber: 0 };\n}\n\nexport const ECSStateRequestAtBlock = {\n  encode(message: ECSStateRequestAtBlock, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.blockNumber !== 0) {\n      writer.uint32(8).uint64(message.blockNumber);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateRequestAtBlock {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateRequestAtBlock();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockNumber = longToNumber(reader.uint64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateRequestAtBlock>): ECSStateRequestAtBlock {\n    const message = createBaseECSStateRequestAtBlock();\n    message.blockNumber = object.blockNumber ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseWorldsRequest(): WorldsRequest {\n  return {};\n}\n\nexport const WorldsRequest = {\n  encode(_: WorldsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): WorldsRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseWorldsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(_: DeepPartial<WorldsRequest>): WorldsRequest {\n    const message = createBaseWorldsRequest();\n    return message;\n  },\n};\n\nfunction createBaseECSStateReply(): ECSStateReply {\n  return { state: [], stateComponents: [], stateEntities: [], stateHash: \"\", blockNumber: 0 };\n}\n\nexport const ECSStateReply = {\n  encode(message: ECSStateReply, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.state) {\n      ECSState.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.stateComponents) {\n      writer.uint32(18).string(v!);\n    }\n    for (const v of message.stateEntities) {\n      writer.uint32(26).string(v!);\n    }\n    if (message.stateHash !== \"\") {\n      writer.uint32(34).string(message.stateHash);\n    }\n    if (message.blockNumber !== 0) {\n      writer.uint32(40).uint32(message.blockNumber);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateReply {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateReply();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.state.push(ECSState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.stateComponents.push(reader.string());\n          break;\n        case 3:\n          message.stateEntities.push(reader.string());\n          break;\n        case 4:\n          message.stateHash = reader.string();\n          break;\n        case 5:\n          message.blockNumber = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateReply>): ECSStateReply {\n    const message = createBaseECSStateReply();\n    message.state = object.state?.map((e) => ECSState.fromPartial(e)) || [];\n    message.stateComponents = object.stateComponents?.map((e) => e) || [];\n    message.stateEntities = object.stateEntities?.map((e) => e) || [];\n    message.stateHash = object.stateHash ?? \"\";\n    message.blockNumber = object.blockNumber ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseECSStateReplyV2(): ECSStateReplyV2 {\n  return { state: [], stateComponents: [], stateEntities: [], stateHash: \"\", blockNumber: 0 };\n}\n\nexport const ECSStateReplyV2 = {\n  encode(message: ECSStateReplyV2, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.state) {\n      ECSState.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.stateComponents) {\n      writer.uint32(18).string(v!);\n    }\n    for (const v of message.stateEntities) {\n      writer.uint32(26).bytes(v!);\n    }\n    if (message.stateHash !== \"\") {\n      writer.uint32(34).string(message.stateHash);\n    }\n    if (message.blockNumber !== 0) {\n      writer.uint32(40).uint32(message.blockNumber);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateReplyV2 {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateReplyV2();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.state.push(ECSState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.stateComponents.push(reader.string());\n          break;\n        case 3:\n          message.stateEntities.push(reader.bytes());\n          break;\n        case 4:\n          message.stateHash = reader.string();\n          break;\n        case 5:\n          message.blockNumber = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateReplyV2>): ECSStateReplyV2 {\n    const message = createBaseECSStateReplyV2();\n    message.state = object.state?.map((e) => ECSState.fromPartial(e)) || [];\n    message.stateComponents = object.stateComponents?.map((e) => e) || [];\n    message.stateEntities = object.stateEntities?.map((e) => e) || [];\n    message.stateHash = object.stateHash ?? \"\";\n    message.blockNumber = object.blockNumber ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseECSStateBlockReply(): ECSStateBlockReply {\n  return { blockNumber: 0 };\n}\n\nexport const ECSStateBlockReply = {\n  encode(message: ECSStateBlockReply, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.blockNumber !== 0) {\n      writer.uint32(8).uint32(message.blockNumber);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStateBlockReply {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStateBlockReply();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockNumber = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStateBlockReply>): ECSStateBlockReply {\n    const message = createBaseECSStateBlockReply();\n    message.blockNumber = object.blockNumber ?? 0;\n    return message;\n  },\n};\n\n/** The Snapshot Service definition. */\nexport type ECSStateSnapshotServiceDefinition = typeof ECSStateSnapshotServiceDefinition;\nexport const ECSStateSnapshotServiceDefinition = {\n  name: \"ECSStateSnapshotService\",\n  fullName: \"ecssnapshot.ECSStateSnapshotService\",\n  methods: {\n    /** Requests the latest ECS state. */\n    getStateLatest: {\n      name: \"GetStateLatest\",\n      requestType: ECSStateRequestLatest,\n      requestStream: false,\n      responseType: ECSStateReply,\n      responseStream: false,\n      options: {},\n    },\n    /** Requests the latest ECS state in stream format, which will chunk the state. */\n    getStateLatestStream: {\n      name: \"GetStateLatestStream\",\n      requestType: ECSStateRequestLatestStream,\n      requestStream: false,\n      responseType: ECSStateReply,\n      responseStream: true,\n      options: {},\n    },\n    /**\n     * Requests the latest ECS state in stream format, which will chunk the state.\n     *\n     * V2 version optimized to return entities as raw bytes.\n     */\n    getStateLatestStreamV2: {\n      name: \"GetStateLatestStreamV2\",\n      requestType: ECSStateRequestLatestStream,\n      requestStream: false,\n      responseType: ECSStateReplyV2,\n      responseStream: true,\n      options: {},\n    },\n    /** Requests the latest ECS state, with aditional pruning. */\n    getStateLatestStreamPruned: {\n      name: \"GetStateLatestStreamPruned\",\n      requestType: ECSStateRequestLatestStreamPruned,\n      requestStream: false,\n      responseType: ECSStateReply,\n      responseStream: true,\n      options: {},\n    },\n    /**\n     * Requests the latest ECS state, with aditional pruning.\n     *\n     * V2 version optimized to return entities as raw bytes.\n     */\n    getStateLatestStreamPrunedV2: {\n      name: \"GetStateLatestStreamPrunedV2\",\n      requestType: ECSStateRequestLatestStreamPruned,\n      requestStream: false,\n      responseType: ECSStateReplyV2,\n      responseStream: true,\n      options: {},\n    },\n    /** Requests the latest block number based on the latest ECS state. */\n    getStateBlockLatest: {\n      name: \"GetStateBlockLatest\",\n      requestType: ECSStateBlockRequestLatest,\n      requestStream: false,\n      responseType: ECSStateBlockReply,\n      responseStream: false,\n      options: {},\n    },\n    /** Requests the ECS state at specific block. */\n    getStateAtBlock: {\n      name: \"GetStateAtBlock\",\n      requestType: ECSStateRequestAtBlock,\n      requestStream: false,\n      responseType: ECSStateReply,\n      responseStream: false,\n      options: {},\n    },\n    /** Requests a list of known worlds based on chain state. */\n    getWorlds: {\n      name: \"GetWorlds\",\n      requestType: WorldsRequest,\n      requestStream: false,\n      responseType: Worlds,\n      responseStream: false,\n      options: {},\n    },\n  },\n} as const;\n\nexport interface ECSStateSnapshotServiceServiceImplementation<CallContextExt = {}> {\n  /** Requests the latest ECS state. */\n  getStateLatest(\n    request: ECSStateRequestLatest,\n    context: CallContext & CallContextExt\n  ): Promise<DeepPartial<ECSStateReply>>;\n  /** Requests the latest ECS state in stream format, which will chunk the state. */\n  getStateLatestStream(\n    request: ECSStateRequestLatestStream,\n    context: CallContext & CallContextExt\n  ): ServerStreamingMethodResult<DeepPartial<ECSStateReply>>;\n  /**\n   * Requests the latest ECS state in stream format, which will chunk the state.\n   *\n   * V2 version optimized to return entities as raw bytes.\n   */\n  getStateLatestStreamV2(\n    request: ECSStateRequestLatestStream,\n    context: CallContext & CallContextExt\n  ): ServerStreamingMethodResult<DeepPartial<ECSStateReplyV2>>;\n  /** Requests the latest ECS state, with aditional pruning. */\n  getStateLatestStreamPruned(\n    request: ECSStateRequestLatestStreamPruned,\n    context: CallContext & CallContextExt\n  ): ServerStreamingMethodResult<DeepPartial<ECSStateReply>>;\n  /**\n   * Requests the latest ECS state, with aditional pruning.\n   *\n   * V2 version optimized to return entities as raw bytes.\n   */\n  getStateLatestStreamPrunedV2(\n    request: ECSStateRequestLatestStreamPruned,\n    context: CallContext & CallContextExt\n  ): ServerStreamingMethodResult<DeepPartial<ECSStateReplyV2>>;\n  /** Requests the latest block number based on the latest ECS state. */\n  getStateBlockLatest(\n    request: ECSStateBlockRequestLatest,\n    context: CallContext & CallContextExt\n  ): Promise<DeepPartial<ECSStateBlockReply>>;\n  /** Requests the ECS state at specific block. */\n  getStateAtBlock(\n    request: ECSStateRequestAtBlock,\n    context: CallContext & CallContextExt\n  ): Promise<DeepPartial<ECSStateReply>>;\n  /** Requests a list of known worlds based on chain state. */\n  getWorlds(request: WorldsRequest, context: CallContext & CallContextExt): Promise<DeepPartial<Worlds>>;\n}\n\nexport interface ECSStateSnapshotServiceClient<CallOptionsExt = {}> {\n  /** Requests the latest ECS state. */\n  getStateLatest(\n    request: DeepPartial<ECSStateRequestLatest>,\n    options?: CallOptions & CallOptionsExt\n  ): Promise<ECSStateReply>;\n  /** Requests the latest ECS state in stream format, which will chunk the state. */\n  getStateLatestStream(\n    request: DeepPartial<ECSStateRequestLatestStream>,\n    options?: CallOptions & CallOptionsExt\n  ): AsyncIterable<ECSStateReply>;\n  /**\n   * Requests the latest ECS state in stream format, which will chunk the state.\n   *\n   * V2 version optimized to return entities as raw bytes.\n   */\n  getStateLatestStreamV2(\n    request: DeepPartial<ECSStateRequestLatestStream>,\n    options?: CallOptions & CallOptionsExt\n  ): AsyncIterable<ECSStateReplyV2>;\n  /** Requests the latest ECS state, with aditional pruning. */\n  getStateLatestStreamPruned(\n    request: DeepPartial<ECSStateRequestLatestStreamPruned>,\n    options?: CallOptions & CallOptionsExt\n  ): AsyncIterable<ECSStateReply>;\n  /**\n   * Requests the latest ECS state, with aditional pruning.\n   *\n   * V2 version optimized to return entities as raw bytes.\n   */\n  getStateLatestStreamPrunedV2(\n    request: DeepPartial<ECSStateRequestLatestStreamPruned>,\n    options?: CallOptions & CallOptionsExt\n  ): AsyncIterable<ECSStateReplyV2>;\n  /** Requests the latest block number based on the latest ECS state. */\n  getStateBlockLatest(\n    request: DeepPartial<ECSStateBlockRequestLatest>,\n    options?: CallOptions & CallOptionsExt\n  ): Promise<ECSStateBlockReply>;\n  /** Requests the ECS state at specific block. */\n  getStateAtBlock(\n    request: DeepPartial<ECSStateRequestAtBlock>,\n    options?: CallOptions & CallOptionsExt\n  ): Promise<ECSStateReply>;\n  /** Requests a list of known worlds based on chain state. */\n  getWorlds(request: DeepPartial<WorldsRequest>, options?: CallOptions & CallOptionsExt): Promise<Worlds>;\n}\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nexport type ServerStreamingMethodResult<Response> = { [Symbol.asyncIterator](): AsyncIterator<Response, void> };\n","{\n  \"abi\": [\n    {\n      \"inputs\": [],\n      \"name\": \"BareComponent__NotImplemented\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"OwnableWritable__NotWriter\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"Ownable__NotOwner\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"Ownable__NotTransitiveOwner\",\n      \"type\": \"error\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"previousOwner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"writer\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"authorizeWriter\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getEntities\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"value\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"getEntitiesWithValue\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getRawValue\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getSchema\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string[]\",\n          \"name\": \"keys\",\n          \"type\": \"string[]\"\n        },\n        {\n          \"internalType\": \"enum LibTypes.SchemaValue[]\",\n          \"name\": \"values\",\n          \"type\": \"uint8[]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"has\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"id\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"indexer\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"registerIndexer\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_world\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"registerWorld\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"remove\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"value\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"set\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"writer\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"unauthorizeWriter\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"world\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"writeAccess\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ],\n  \"bytecode\": {\n    \"object\": \"0x\",\n    \"sourceMap\": \"\",\n    \"linkReferences\": {}\n  },\n  \"deployedBytecode\": {\n    \"object\": \"0x\",\n    \"sourceMap\": \"\",\n    \"linkReferences\": {}\n  },\n  \"methodIdentifiers\": {\n    \"authorizeWriter(address)\": \"4fef6a38\",\n    \"getEntities()\": \"31b933b9\",\n    \"getEntitiesWithValue(bytes)\": \"b361be46\",\n    \"getRawValue(uint256)\": \"b8bc073d\",\n    \"getSchema()\": \"6b122fe0\",\n    \"has(uint256)\": \"cccf7a8e\",\n    \"id()\": \"af640d0f\",\n    \"owner()\": \"8da5cb5b\",\n    \"registerIndexer(address)\": \"75c0669c\",\n    \"registerWorld(address)\": \"9d2c76b4\",\n    \"remove(uint256)\": \"4cc82215\",\n    \"set(uint256,bytes)\": \"8b282947\",\n    \"transferOwnership(address)\": \"f2fde38b\",\n    \"unauthorizeWriter(address)\": \"bf4fe57e\",\n    \"world()\": \"30b67baa\",\n    \"writeAccess(address)\": \"861eb905\"\n  },\n  \"rawMetadata\": \"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.17+commit.8df45f5f\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[],\\\"name\\\":\\\"BareComponent__NotImplemented\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"OwnableWritable__NotWriter\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"Ownable__NotOwner\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"Ownable__NotTransitiveOwner\\\",\\\"type\\\":\\\"error\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"previousOwner\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"newOwner\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"OwnershipTransferred\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"writer\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"authorizeWriter\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"getEntities\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"getEntitiesWithValue\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"getRawValue\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"getSchema\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string[]\\\",\\\"name\\\":\\\"keys\\\",\\\"type\\\":\\\"string[]\\\"},{\\\"internalType\\\":\\\"enum LibTypes.SchemaValue[]\\\",\\\"name\\\":\\\"values\\\",\\\"type\\\":\\\"uint8[]\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"has\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"id\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"owner\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"indexer\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"registerIndexer\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_world\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"registerWorld\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"remove\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"set\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"transferOwnership\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"writer\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"unauthorizeWriter\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"world\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"operator\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"writeAccess\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{\\\"authorizeWriter(address)\\\":{\\\"params\\\":{\\\"writer\\\":\\\"Address to grant write access to.\\\"}},\\\"getEntitiesWithValue(bytes)\\\":{\\\"params\\\":{\\\"value\\\":\\\"Abi-encoded value to get the list of entities with this value for.\\\"}},\\\"getRawValue(uint256)\\\":{\\\"params\\\":{\\\"entity\\\":\\\"Entity to get the raw value in this component for.\\\"}},\\\"has(uint256)\\\":{\\\"params\\\":{\\\"entity\\\":\\\"Entity to check whether it has a value in this component for.\\\"}},\\\"owner()\\\":{\\\"returns\\\":{\\\"_0\\\":\\\"conrtact owner\\\"}},\\\"registerIndexer(address)\\\":{\\\"params\\\":{\\\"indexer\\\":\\\"Address of the indexer to notify when a component value is set.\\\"}},\\\"registerWorld(address)\\\":{\\\"params\\\":{\\\"_world\\\":\\\"Address of the World contract.\\\"}},\\\"remove(uint256)\\\":{\\\"params\\\":{\\\"entity\\\":\\\"Entity to remove from this component.\\\"}},\\\"set(uint256,bytes)\\\":{\\\"params\\\":{\\\"entity\\\":\\\"Entity to set the value for.\\\",\\\"value\\\":\\\"Value to set for the given entity.\\\"}},\\\"transferOwnership(address)\\\":{\\\"params\\\":{\\\"account\\\":\\\"address of new owner\\\"}},\\\"unauthorizeWriter(address)\\\":{\\\"params\\\":{\\\"writer\\\":\\\"Address to revoke write access.\\\"}}},\\\"version\\\":1},\\\"userdoc\\\":{\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{\\\"authorizeWriter(address)\\\":{\\\"notice\\\":\\\"Grant write access to the given address. Can only be called by the owner.\\\"},\\\"getEntities()\\\":{\\\"notice\\\":\\\"Get a list of all entities that have a value in this component.\\\"},\\\"getEntitiesWithValue(bytes)\\\":{\\\"notice\\\":\\\"Get a list of all entities that have the specified value in this component.\\\"},\\\"getRawValue(uint256)\\\":{\\\"notice\\\":\\\"Get the raw (abi-encoded) value of the given entity in this component.\\\"},\\\"getSchema()\\\":{\\\"notice\\\":\\\"Return the keys and value types of the schema of this component. \\\"},\\\"has(uint256)\\\":{\\\"notice\\\":\\\"Check whether the given entity has a value in this component.\\\"},\\\"id()\\\":{\\\"notice\\\":\\\"Public identifier of this component \\\"},\\\"owner()\\\":{\\\"notice\\\":\\\"get the ERC173 contract owner\\\"},\\\"registerIndexer(address)\\\":{\\\"notice\\\":\\\"Register a new indexer that gets notified when a component value is set.\\\"},\\\"registerWorld(address)\\\":{\\\"notice\\\":\\\"Register this component in the given world.\\\"},\\\"remove(uint256)\\\":{\\\"notice\\\":\\\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\\\"},\\\"set(uint256,bytes)\\\":{\\\"notice\\\":\\\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\\\"},\\\"transferOwnership(address)\\\":{\\\"notice\\\":\\\"transfer contract ownership to new account\\\"},\\\"unauthorizeWriter(address)\\\":{\\\"notice\\\":\\\"Revoke write access from the given address. Can only be called by the owner.\\\"},\\\"world()\\\":{\\\"notice\\\":\\\"Reference to the World contract this component is registered in \\\"},\\\"writeAccess(address)\\\":{\\\"notice\\\":\\\"Whether given operator has write access \\\"}},\\\"notice\\\":\\\"Components are a key-value store from entity id to component value. They are registered in the World and register updates to their state in the World. They have an owner, who can grant write access to more addresses. (Systems that want to write to a component need to be given write access first.) Everyone has read access.\\\",\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"src/Component.sol\\\":\\\"Component\\\"},\\\"evmVersion\\\":\\\"london\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":true,\\\"runs\\\":1000000},\\\"remappings\\\":[\\\":@rari-capital/=../../node_modules/@rari-capital/\\\",\\\":@solidstate/=../../node_modules/@solidstate/\\\",\\\":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\\\",\\\":base64-sol/=../../node_modules/base64-sol/\\\",\\\":ds-test/=../../node_modules/ds-test/src/\\\",\\\":forge-std/=../../node_modules/forge-std/src/\\\",\\\":hardhat/=../../node_modules/hardhat/\\\",\\\":memmove/=../../node_modules/memmove/src/\\\",\\\":solmate/=../../node_modules/@rari-capital/solmate/src/\\\"]},\\\"sources\\\":{\\\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\\\":{\\\"keccak256\\\":\\\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\\\",\\\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\\\"]},\\\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\\\":{\\\"keccak256\\\":\\\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\\\",\\\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\\\"]},\\\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\\\":{\\\"keccak256\\\":\\\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\\\",\\\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\\\"]},\\\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\\\":{\\\"keccak256\\\":\\\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\\\",\\\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\\\"]},\\\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\\\":{\\\"keccak256\\\":\\\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\\\",\\\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\\\"]},\\\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\\\":{\\\"keccak256\\\":\\\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\\\",\\\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\\\"]},\\\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\\\":{\\\"keccak256\\\":\\\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\\\",\\\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\\\"]},\\\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\\\":{\\\"keccak256\\\":\\\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\\\",\\\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\\\"]},\\\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\\\":{\\\"keccak256\\\":\\\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\\\",\\\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\\\"]},\\\"../../node_modules/memmove/src/Array.sol\\\":{\\\"keccak256\\\":\\\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\\\",\\\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\\\"]},\\\"../../node_modules/memmove/src/LinkedList.sol\\\":{\\\"keccak256\\\":\\\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\\\",\\\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\\\"]},\\\"src/BareComponent.sol\\\":{\\\"keccak256\\\":\\\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\\\",\\\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\\\"]},\\\"src/Component.sol\\\":{\\\"keccak256\\\":\\\"0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a\\\",\\\"dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh\\\"]},\\\"src/LibTypes.sol\\\":{\\\"keccak256\\\":\\\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\\\",\\\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\\\"]},\\\"src/MapSet.sol\\\":{\\\"keccak256\\\":\\\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\\\",\\\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\\\"]},\\\"src/Ownable.sol\\\":{\\\"keccak256\\\":\\\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\\\",\\\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\\\"]},\\\"src/OwnableWritable.sol\\\":{\\\"keccak256\\\":\\\"0x44e1afa8b4b2132122255943deb1ba8787693cd5893876a06643deed3052b859\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://3761f562ad1a9fae0abf914e4e15592fb8b7dd231039448d20ad7dcfabf6de41\\\",\\\"dweb:/ipfs/QmbLN1mfNXYyrc4qxQauvBYTyJu9nR18t9xb54GY8xP3T7\\\"]},\\\"src/OwnableWritableStorage.sol\\\":{\\\"keccak256\\\":\\\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\\\",\\\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\\\"]},\\\"src/Set.sol\\\":{\\\"keccak256\\\":\\\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\\\",\\\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\\\"]},\\\"src/interfaces/IComponent.sol\\\":{\\\"keccak256\\\":\\\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\\\",\\\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\\\"]},\\\"src/interfaces/IERC173.sol\\\":{\\\"keccak256\\\":\\\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\\\",\\\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\\\"]},\\\"src/interfaces/IEntityContainer.sol\\\":{\\\"keccak256\\\":\\\"0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10\\\",\\\"dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV\\\"]},\\\"src/interfaces/IEntityIndexer.sol\\\":{\\\"keccak256\\\":\\\"0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4\\\",\\\"dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw\\\"]},\\\"src/interfaces/IOwnableWritable.sol\\\":{\\\"keccak256\\\":\\\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\\\",\\\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\\\"]},\\\"src/interfaces/IUint256Component.sol\\\":{\\\"keccak256\\\":\\\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\\\",\\\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\\\"]},\\\"src/interfaces/IWorld.sol\\\":{\\\"keccak256\\\":\\\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\\\",\\\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\\\"]},\\\"src/interfaces/Query.sol\\\":{\\\"keccak256\\\":\\\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\\\",\\\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\\\"]}},\\\"version\\\":1}\",\n  \"metadata\": {\n    \"compiler\": {\n      \"version\": \"0.8.17+commit.8df45f5f\"\n    },\n    \"language\": \"Solidity\",\n    \"output\": {\n      \"abi\": [\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BareComponent__NotImplemented\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"OwnableWritable__NotWriter\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"Ownable__NotOwner\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"Ownable__NotTransitiveOwner\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"previousOwner\",\n              \"type\": \"address\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"newOwner\",\n              \"type\": \"address\",\n              \"indexed\": true\n            }\n          ],\n          \"type\": \"event\",\n          \"name\": \"OwnershipTransferred\",\n          \"anonymous\": false\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"writer\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"authorizeWriter\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getEntities\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"\",\n              \"type\": \"uint256[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"value\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getEntitiesWithValue\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"\",\n              \"type\": \"uint256[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getRawValue\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"getSchema\",\n          \"outputs\": [\n            {\n              \"internalType\": \"string[]\",\n              \"name\": \"keys\",\n              \"type\": \"string[]\"\n            },\n            {\n              \"internalType\": \"enum LibTypes.SchemaValue[]\",\n              \"name\": \"values\",\n              \"type\": \"uint8[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"has\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"id\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"owner\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"indexer\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerIndexer\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_world\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerWorld\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"remove\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"value\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"set\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"account\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"transferOwnership\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"writer\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"unauthorizeWriter\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"world\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"operator\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"writeAccess\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ]\n        }\n      ],\n      \"devdoc\": {\n        \"kind\": \"dev\",\n        \"methods\": {\n          \"authorizeWriter(address)\": {\n            \"params\": {\n              \"writer\": \"Address to grant write access to.\"\n            }\n          },\n          \"getEntitiesWithValue(bytes)\": {\n            \"params\": {\n              \"value\": \"Abi-encoded value to get the list of entities with this value for.\"\n            }\n          },\n          \"getRawValue(uint256)\": {\n            \"params\": {\n              \"entity\": \"Entity to get the raw value in this component for.\"\n            }\n          },\n          \"has(uint256)\": {\n            \"params\": {\n              \"entity\": \"Entity to check whether it has a value in this component for.\"\n            }\n          },\n          \"owner()\": {\n            \"returns\": {\n              \"_0\": \"conrtact owner\"\n            }\n          },\n          \"registerIndexer(address)\": {\n            \"params\": {\n              \"indexer\": \"Address of the indexer to notify when a component value is set.\"\n            }\n          },\n          \"registerWorld(address)\": {\n            \"params\": {\n              \"_world\": \"Address of the World contract.\"\n            }\n          },\n          \"remove(uint256)\": {\n            \"params\": {\n              \"entity\": \"Entity to remove from this component.\"\n            }\n          },\n          \"set(uint256,bytes)\": {\n            \"params\": {\n              \"entity\": \"Entity to set the value for.\",\n              \"value\": \"Value to set for the given entity.\"\n            }\n          },\n          \"transferOwnership(address)\": {\n            \"params\": {\n              \"account\": \"address of new owner\"\n            }\n          },\n          \"unauthorizeWriter(address)\": {\n            \"params\": {\n              \"writer\": \"Address to revoke write access.\"\n            }\n          }\n        },\n        \"version\": 1\n      },\n      \"userdoc\": {\n        \"kind\": \"user\",\n        \"methods\": {\n          \"authorizeWriter(address)\": {\n            \"notice\": \"Grant write access to the given address. Can only be called by the owner.\"\n          },\n          \"getEntities()\": {\n            \"notice\": \"Get a list of all entities that have a value in this component.\"\n          },\n          \"getEntitiesWithValue(bytes)\": {\n            \"notice\": \"Get a list of all entities that have the specified value in this component.\"\n          },\n          \"getRawValue(uint256)\": {\n            \"notice\": \"Get the raw (abi-encoded) value of the given entity in this component.\"\n          },\n          \"getSchema()\": {\n            \"notice\": \"Return the keys and value types of the schema of this component. \"\n          },\n          \"has(uint256)\": {\n            \"notice\": \"Check whether the given entity has a value in this component.\"\n          },\n          \"id()\": {\n            \"notice\": \"Public identifier of this component \"\n          },\n          \"owner()\": {\n            \"notice\": \"get the ERC173 contract owner\"\n          },\n          \"registerIndexer(address)\": {\n            \"notice\": \"Register a new indexer that gets notified when a component value is set.\"\n          },\n          \"registerWorld(address)\": {\n            \"notice\": \"Register this component in the given world.\"\n          },\n          \"remove(uint256)\": {\n            \"notice\": \"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"\n          },\n          \"set(uint256,bytes)\": {\n            \"notice\": \"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"\n          },\n          \"transferOwnership(address)\": {\n            \"notice\": \"transfer contract ownership to new account\"\n          },\n          \"unauthorizeWriter(address)\": {\n            \"notice\": \"Revoke write access from the given address. Can only be called by the owner.\"\n          },\n          \"world()\": {\n            \"notice\": \"Reference to the World contract this component is registered in \"\n          },\n          \"writeAccess(address)\": {\n            \"notice\": \"Whether given operator has write access \"\n          }\n        },\n        \"version\": 1\n      }\n    },\n    \"settings\": {\n      \"remappings\": [\n        \":@rari-capital/=../../node_modules/@rari-capital/\",\n        \":@solidstate/=../../node_modules/@solidstate/\",\n        \":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\",\n        \":base64-sol/=../../node_modules/base64-sol/\",\n        \":ds-test/=../../node_modules/ds-test/src/\",\n        \":forge-std/=../../node_modules/forge-std/src/\",\n        \":hardhat/=../../node_modules/hardhat/\",\n        \":memmove/=../../node_modules/memmove/src/\",\n        \":solmate/=../../node_modules/@rari-capital/solmate/src/\"\n      ],\n      \"optimizer\": {\n        \"enabled\": true,\n        \"runs\": 1000000\n      },\n      \"metadata\": {\n        \"bytecodeHash\": \"ipfs\"\n      },\n      \"compilationTarget\": {\n        \"src/Component.sol\": \"Component\"\n      },\n      \"libraries\": {}\n    },\n    \"sources\": {\n      \"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\": {\n        \"keccak256\": \"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\n        \"urls\": [\n          \"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\n          \"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\": {\n        \"keccak256\": \"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\n        \"urls\": [\n          \"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\n          \"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\": {\n        \"keccak256\": \"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\n        \"urls\": [\n          \"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\n          \"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\": {\n        \"keccak256\": \"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\n        \"urls\": [\n          \"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\n          \"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\": {\n        \"keccak256\": \"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\n        \"urls\": [\n          \"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\n          \"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\": {\n        \"keccak256\": \"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\n        \"urls\": [\n          \"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\n          \"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\": {\n        \"keccak256\": \"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\n        \"urls\": [\n          \"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\n          \"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\": {\n        \"keccak256\": \"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\n        \"urls\": [\n          \"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\n          \"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\": {\n        \"keccak256\": \"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\n        \"urls\": [\n          \"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\n          \"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/memmove/src/Array.sol\": {\n        \"keccak256\": \"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\n        \"urls\": [\n          \"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\n          \"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/memmove/src/LinkedList.sol\": {\n        \"keccak256\": \"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\n        \"urls\": [\n          \"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\n          \"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/BareComponent.sol\": {\n        \"keccak256\": \"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\n        \"urls\": [\n          \"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\n          \"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/Component.sol\": {\n        \"keccak256\": \"0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874\",\n        \"urls\": [\n          \"bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a\",\n          \"dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/LibTypes.sol\": {\n        \"keccak256\": \"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\n        \"urls\": [\n          \"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\n          \"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/MapSet.sol\": {\n        \"keccak256\": \"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\n        \"urls\": [\n          \"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\n          \"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/Ownable.sol\": {\n        \"keccak256\": \"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\n        \"urls\": [\n          \"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\n          \"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/OwnableWritable.sol\": {\n        \"keccak256\": \"0x44e1afa8b4b2132122255943deb1ba8787693cd5893876a06643deed3052b859\",\n        \"urls\": [\n          \"bzz-raw://3761f562ad1a9fae0abf914e4e15592fb8b7dd231039448d20ad7dcfabf6de41\",\n          \"dweb:/ipfs/QmbLN1mfNXYyrc4qxQauvBYTyJu9nR18t9xb54GY8xP3T7\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/OwnableWritableStorage.sol\": {\n        \"keccak256\": \"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\n        \"urls\": [\n          \"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\n          \"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/Set.sol\": {\n        \"keccak256\": \"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\n        \"urls\": [\n          \"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\n          \"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IComponent.sol\": {\n        \"keccak256\": \"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\n        \"urls\": [\n          \"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\n          \"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IERC173.sol\": {\n        \"keccak256\": \"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\n        \"urls\": [\n          \"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\n          \"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IEntityContainer.sol\": {\n        \"keccak256\": \"0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8\",\n        \"urls\": [\n          \"bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10\",\n          \"dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IEntityIndexer.sol\": {\n        \"keccak256\": \"0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5\",\n        \"urls\": [\n          \"bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4\",\n          \"dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IOwnableWritable.sol\": {\n        \"keccak256\": \"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\n        \"urls\": [\n          \"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\n          \"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IUint256Component.sol\": {\n        \"keccak256\": \"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\n        \"urls\": [\n          \"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\n          \"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IWorld.sol\": {\n        \"keccak256\": \"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\n        \"urls\": [\n          \"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\n          \"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/Query.sol\": {\n        \"keccak256\": \"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\n        \"urls\": [\n          \"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\n          \"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"\n        ],\n        \"license\": \"MIT\"\n      }\n    },\n    \"version\": 1\n  },\n  \"ast\": {\n    \"absolutePath\": \"src/Component.sol\",\n    \"id\": 12774,\n    \"exportedSymbols\": {\n      \"BareComponent\": [\n        12510\n      ],\n      \"Component\": [\n        12773\n      ],\n      \"IEntityIndexer\": [\n        16003\n      ],\n      \"IWorld\": [\n        16190\n      ],\n      \"LibTypes\": [\n        14609\n      ],\n      \"MapSet\": [\n        14802\n      ],\n      \"Set\": [\n        15152\n      ]\n    },\n    \"nodeType\": \"SourceUnit\",\n    \"src\": \"32:3467:30\",\n    \"nodes\": [\n      {\n        \"id\": 12512,\n        \"nodeType\": \"PragmaDirective\",\n        \"src\": \"32:24:30\",\n        \"nodes\": [],\n        \"literals\": [\n          \"solidity\",\n          \">=\",\n          \"0.8\",\n          \".0\"\n        ]\n      },\n      {\n        \"id\": 12514,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"58:65:30\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/interfaces/IEntityIndexer.sol\",\n        \"file\": \"./interfaces/IEntityIndexer.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 12774,\n        \"sourceUnit\": 16004,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 12513,\n              \"name\": \"IEntityIndexer\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16003,\n              \"src\": \"67:14:30\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 12516,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"124:49:30\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/interfaces/IWorld.sol\",\n        \"file\": \"./interfaces/IWorld.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 12774,\n        \"sourceUnit\": 16191,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 12515,\n              \"name\": \"IWorld\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16190,\n              \"src\": \"133:6:30\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 12518,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"174:52:30\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/BareComponent.sol\",\n        \"file\": \"./BareComponent.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 12774,\n        \"sourceUnit\": 12511,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 12517,\n              \"name\": \"BareComponent\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 12510,\n              \"src\": \"183:13:30\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 12520,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"228:32:30\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/Set.sol\",\n        \"file\": \"./Set.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 12774,\n        \"sourceUnit\": 15153,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 12519,\n              \"name\": \"Set\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 15152,\n              \"src\": \"237:3:30\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 12522,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"261:38:30\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/MapSet.sol\",\n        \"file\": \"./MapSet.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 12774,\n        \"sourceUnit\": 14803,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 12521,\n              \"name\": \"MapSet\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 14802,\n              \"src\": \"270:6:30\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 12524,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"300:42:30\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/LibTypes.sol\",\n        \"file\": \"./LibTypes.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 12774,\n        \"sourceUnit\": 14610,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 12523,\n              \"name\": \"LibTypes\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 14609,\n              \"src\": \"309:8:30\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 12773,\n        \"nodeType\": \"ContractDefinition\",\n        \"src\": \"691:2807:30\",\n        \"nodes\": [\n          {\n            \"id\": 12531,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"795:21:30\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"documentation\": {\n              \"id\": 12528,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"740:52:30\",\n              \"text\": \"Set of entities with values in this component \"\n            },\n            \"mutability\": \"mutable\",\n            \"name\": \"entities\",\n            \"nameLocation\": \"808:8:30\",\n            \"scope\": 12773,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n              \"typeString\": \"contract Set\"\n            },\n            \"typeName\": {\n              \"id\": 12530,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 12529,\n                \"name\": \"Set\",\n                \"nameLocations\": [\n                  \"795:3:30\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 15152,\n                \"src\": \"795:3:30\"\n              },\n              \"referencedDeclaration\": 15152,\n              \"src\": \"795:3:30\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                \"typeString\": \"contract Set\"\n              }\n            },\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 12535,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"876:31:30\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"documentation\": {\n              \"id\": 12532,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"821:52:30\",\n              \"text\": \"Reverse mapping from value to set of entities \"\n            },\n            \"mutability\": \"mutable\",\n            \"name\": \"valueToEntities\",\n            \"nameLocation\": \"892:15:30\",\n            \"scope\": 12773,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n              \"typeString\": \"contract MapSet\"\n            },\n            \"typeName\": {\n              \"id\": 12534,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 12533,\n                \"name\": \"MapSet\",\n                \"nameLocations\": [\n                  \"876:6:30\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 14802,\n                \"src\": \"876:6:30\"\n              },\n              \"referencedDeclaration\": 14802,\n              \"src\": \"876:6:30\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                \"typeString\": \"contract MapSet\"\n              }\n            },\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 12540,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"983:34:30\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"documentation\": {\n              \"id\": 12536,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"912:68:30\",\n              \"text\": \"List of indexers to be updated when a component value changes \"\n            },\n            \"mutability\": \"mutable\",\n            \"name\": \"indexers\",\n            \"nameLocation\": \"1009:8:30\",\n            \"scope\": 12773,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage\",\n              \"typeString\": \"contract IEntityIndexer[]\"\n            },\n            \"typeName\": {\n              \"baseType\": {\n                \"id\": 12538,\n                \"nodeType\": \"UserDefinedTypeName\",\n                \"pathNode\": {\n                  \"id\": 12537,\n                  \"name\": \"IEntityIndexer\",\n                  \"nameLocations\": [\n                    \"983:14:30\"\n                  ],\n                  \"nodeType\": \"IdentifierPath\",\n                  \"referencedDeclaration\": 16003,\n                  \"src\": \"983:14:30\"\n                },\n                \"referencedDeclaration\": 16003,\n                \"src\": \"983:14:30\",\n                \"typeDescriptions\": {\n                  \"typeIdentifier\": \"t_contract$_IEntityIndexer_$16003\",\n                  \"typeString\": \"contract IEntityIndexer\"\n                }\n              },\n              \"id\": 12539,\n              \"nodeType\": \"ArrayTypeName\",\n              \"src\": \"983:16:30\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage_ptr\",\n                \"typeString\": \"contract IEntityIndexer[]\"\n              }\n            },\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 12566,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"1022:135:30\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 12565,\n              \"nodeType\": \"Block\",\n              \"src\": \"1090:67:30\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"id\": 12556,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 12551,\n                      \"name\": \"entities\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 12531,\n                      \"src\": \"1096:8:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                        \"typeString\": \"contract Set\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"arguments\": [],\n                      \"expression\": {\n                        \"argumentTypes\": [],\n                        \"id\": 12554,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"NewExpression\",\n                        \"src\": \"1107:7:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_creation_nonpayable$__$returns$_t_contract$_Set_$15152_$\",\n                          \"typeString\": \"function () returns (contract Set)\"\n                        },\n                        \"typeName\": {\n                          \"id\": 12553,\n                          \"nodeType\": \"UserDefinedTypeName\",\n                          \"pathNode\": {\n                            \"id\": 12552,\n                            \"name\": \"Set\",\n                            \"nameLocations\": [\n                              \"1111:3:30\"\n                            ],\n                            \"nodeType\": \"IdentifierPath\",\n                            \"referencedDeclaration\": 15152,\n                            \"src\": \"1111:3:30\"\n                          },\n                          \"referencedDeclaration\": 15152,\n                          \"src\": \"1111:3:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                            \"typeString\": \"contract Set\"\n                          }\n                        }\n                      },\n                      \"id\": 12555,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"1107:9:30\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                        \"typeString\": \"contract Set\"\n                      }\n                    },\n                    \"src\": \"1096:20:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                      \"typeString\": \"contract Set\"\n                    }\n                  },\n                  \"id\": 12557,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"1096:20:30\"\n                },\n                {\n                  \"expression\": {\n                    \"id\": 12563,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 12558,\n                      \"name\": \"valueToEntities\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 12535,\n                      \"src\": \"1122:15:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                        \"typeString\": \"contract MapSet\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"arguments\": [],\n                      \"expression\": {\n                        \"argumentTypes\": [],\n                        \"id\": 12561,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"NewExpression\",\n                        \"src\": \"1140:10:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_creation_nonpayable$__$returns$_t_contract$_MapSet_$14802_$\",\n                          \"typeString\": \"function () returns (contract MapSet)\"\n                        },\n                        \"typeName\": {\n                          \"id\": 12560,\n                          \"nodeType\": \"UserDefinedTypeName\",\n                          \"pathNode\": {\n                            \"id\": 12559,\n                            \"name\": \"MapSet\",\n                            \"nameLocations\": [\n                              \"1144:6:30\"\n                            ],\n                            \"nodeType\": \"IdentifierPath\",\n                            \"referencedDeclaration\": 14802,\n                            \"src\": \"1144:6:30\"\n                          },\n                          \"referencedDeclaration\": 14802,\n                          \"src\": \"1144:6:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                            \"typeString\": \"contract MapSet\"\n                          }\n                        }\n                      },\n                      \"id\": 12562,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"1140:12:30\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                        \"typeString\": \"contract MapSet\"\n                      }\n                    },\n                    \"src\": \"1122:30:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                      \"typeString\": \"contract MapSet\"\n                    }\n                  },\n                  \"id\": 12564,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"1122:30:30\"\n                }\n              ]\n            },\n            \"implemented\": true,\n            \"kind\": \"constructor\",\n            \"modifiers\": [\n              {\n                \"arguments\": [\n                  {\n                    \"id\": 12547,\n                    \"name\": \"_world\",\n                    \"nodeType\": \"Identifier\",\n                    \"overloadedDeclarations\": [],\n                    \"referencedDeclaration\": 12542,\n                    \"src\": \"1077:6:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  {\n                    \"id\": 12548,\n                    \"name\": \"_id\",\n                    \"nodeType\": \"Identifier\",\n                    \"overloadedDeclarations\": [],\n                    \"referencedDeclaration\": 12544,\n                    \"src\": \"1085:3:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  }\n                ],\n                \"id\": 12549,\n                \"kind\": \"baseConstructorSpecifier\",\n                \"modifierName\": {\n                  \"id\": 12546,\n                  \"name\": \"BareComponent\",\n                  \"nameLocations\": [\n                    \"1063:13:30\"\n                  ],\n                  \"nodeType\": \"IdentifierPath\",\n                  \"referencedDeclaration\": 12510,\n                  \"src\": \"1063:13:30\"\n                },\n                \"nodeType\": \"ModifierInvocation\",\n                \"src\": \"1063:26:30\"\n              }\n            ],\n            \"name\": \"\",\n            \"nameLocation\": \"-1:-1:-1\",\n            \"parameters\": {\n              \"id\": 12545,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12542,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_world\",\n                  \"nameLocation\": \"1042:6:30\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12566,\n                  \"src\": \"1034:14:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12541,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1034:7:30\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 12544,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_id\",\n                  \"nameLocation\": \"1058:3:30\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12566,\n                  \"src\": \"1050:11:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12543,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1050:7:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1033:29:30\"\n            },\n            \"returnParameters\": {\n              \"id\": 12550,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"1090:0:30\"\n            },\n            \"scope\": 12773,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 12581,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"1204:111:30\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 12580,\n              \"nodeType\": \"Block\",\n              \"src\": \"1277:38:30\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 12577,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12569,\n                        \"src\": \"1303:6:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12575,\n                        \"name\": \"entities\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12531,\n                        \"src\": \"1290:8:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                          \"typeString\": \"contract Set\"\n                        }\n                      },\n                      \"id\": 12576,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"1299:3:30\",\n                      \"memberName\": \"has\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 15133,\n                      \"src\": \"1290:12:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_view$_t_uint256_$returns$_t_bool_$\",\n                        \"typeString\": \"function (uint256) view external returns (bool)\"\n                      }\n                    },\n                    \"id\": 12578,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"1290:20:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"functionReturnParameters\": 12574,\n                  \"id\": 12579,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"1283:27:30\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              12416\n            ],\n            \"documentation\": {\n              \"id\": 12567,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1161:40:30\",\n              \"text\": \" @inheritdoc BareComponent\"\n            },\n            \"functionSelector\": \"cccf7a8e\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"has\",\n            \"nameLocation\": \"1213:3:30\",\n            \"overrides\": {\n              \"id\": 12571,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"1253:8:30\"\n            },\n            \"parameters\": {\n              \"id\": 12570,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12569,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"1225:6:30\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12581,\n                  \"src\": \"1217:14:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12568,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1217:7:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1216:16:30\"\n            },\n            \"returnParameters\": {\n              \"id\": 12574,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12573,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12581,\n                  \"src\": \"1271:4:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bool\",\n                    \"typeString\": \"bool\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12572,\n                    \"name\": \"bool\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1271:4:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1270:6:30\"\n            },\n            \"scope\": 12773,\n            \"stateMutability\": \"view\",\n            \"virtual\": true,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 12594,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"1400:116:30\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 12593,\n              \"nodeType\": \"Block\",\n              \"src\": \"1479:37:30\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [],\n                    \"expression\": {\n                      \"argumentTypes\": [],\n                      \"expression\": {\n                        \"id\": 12589,\n                        \"name\": \"entities\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12531,\n                        \"src\": \"1492:8:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                          \"typeString\": \"contract Set\"\n                        }\n                      },\n                      \"id\": 12590,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"1501:8:30\",\n                      \"memberName\": \"getItems\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 15142,\n                      \"src\": \"1492:17:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$\",\n                        \"typeString\": \"function () view external returns (uint256[] memory)\"\n                      }\n                    },\n                    \"id\": 12591,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"1492:19:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_array$_t_uint256_$dyn_memory_ptr\",\n                      \"typeString\": \"uint256[] memory\"\n                    }\n                  },\n                  \"functionReturnParameters\": 12588,\n                  \"id\": 12592,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"1485:26:30\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              12442\n            ],\n            \"documentation\": {\n              \"id\": 12582,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1319:78:30\",\n              \"text\": \" Get a list of all entities that have a value in this component.\"\n            },\n            \"functionSelector\": \"31b933b9\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"getEntities\",\n            \"nameLocation\": \"1409:11:30\",\n            \"overrides\": {\n              \"id\": 12584,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"1443:8:30\"\n            },\n            \"parameters\": {\n              \"id\": 12583,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"1420:2:30\"\n            },\n            \"returnParameters\": {\n              \"id\": 12588,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12587,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12594,\n                  \"src\": \"1461:16:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_array$_t_uint256_$dyn_memory_ptr\",\n                    \"typeString\": \"uint256[]\"\n                  },\n                  \"typeName\": {\n                    \"baseType\": {\n                      \"id\": 12585,\n                      \"name\": \"uint256\",\n                      \"nodeType\": \"ElementaryTypeName\",\n                      \"src\": \"1461:7:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"id\": 12586,\n                    \"nodeType\": \"ArrayTypeName\",\n                    \"src\": \"1461:9:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_array$_t_uint256_$dyn_storage_ptr\",\n                      \"typeString\": \"uint256[]\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1460:18:30\"\n            },\n            \"scope\": 12773,\n            \"stateMutability\": \"view\",\n            \"virtual\": true,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 12615,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"1698:228:30\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 12614,\n              \"nodeType\": \"Block\",\n              \"src\": \"1804:122:30\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [\n                              {\n                                \"id\": 12609,\n                                \"name\": \"value\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": 12597,\n                                \"src\": \"1913:5:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                                  \"typeString\": \"bytes memory\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                                  \"typeString\": \"bytes memory\"\n                                }\n                              ],\n                              \"id\": 12608,\n                              \"name\": \"keccak256\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -8,\n                              \"src\": \"1903:9:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                                \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                              }\n                            },\n                            \"id\": 12610,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"1903:16:30\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          ],\n                          \"id\": 12607,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"1895:7:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_uint256_$\",\n                            \"typeString\": \"type(uint256)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 12606,\n                            \"name\": \"uint256\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"1895:7:30\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 12611,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"1895:25:30\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12604,\n                        \"name\": \"valueToEntities\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12535,\n                        \"src\": \"1870:15:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                          \"typeString\": \"contract MapSet\"\n                        }\n                      },\n                      \"id\": 12605,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"1886:8:30\",\n                      \"memberName\": \"getItems\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 14788,\n                      \"src\": \"1870:24:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$\",\n                        \"typeString\": \"function (uint256) view external returns (uint256[] memory)\"\n                      }\n                    },\n                    \"id\": 12612,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"1870:51:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_array$_t_uint256_$dyn_memory_ptr\",\n                      \"typeString\": \"uint256[] memory\"\n                    }\n                  },\n                  \"functionReturnParameters\": 12603,\n                  \"id\": 12613,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"1863:58:30\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              12456\n            ],\n            \"documentation\": {\n              \"id\": 12595,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1520:175:30\",\n              \"text\": \" Get a list of all entities that have the specified value in this component.\\n @param value Abi-encoded value to get the list of entities with this value for.\"\n            },\n            \"functionSelector\": \"b361be46\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"getEntitiesWithValue\",\n            \"nameLocation\": \"1707:20:30\",\n            \"overrides\": {\n              \"id\": 12599,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"1768:8:30\"\n            },\n            \"parameters\": {\n              \"id\": 12598,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12597,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"value\",\n                  \"nameLocation\": \"1741:5:30\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12615,\n                  \"src\": \"1728:18:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12596,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1728:5:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1727:20:30\"\n            },\n            \"returnParameters\": {\n              \"id\": 12603,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12602,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12615,\n                  \"src\": \"1786:16:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_array$_t_uint256_$dyn_memory_ptr\",\n                    \"typeString\": \"uint256[]\"\n                  },\n                  \"typeName\": {\n                    \"baseType\": {\n                      \"id\": 12600,\n                      \"name\": \"uint256\",\n                      \"nodeType\": \"ElementaryTypeName\",\n                      \"src\": \"1786:7:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"id\": 12601,\n                    \"nodeType\": \"ArrayTypeName\",\n                    \"src\": \"1786:9:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_array$_t_uint256_$dyn_storage_ptr\",\n                      \"typeString\": \"uint256[]\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1785:18:30\"\n            },\n            \"scope\": 12773,\n            \"stateMutability\": \"view\",\n            \"virtual\": true,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 12633,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2104:128:30\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 12632,\n              \"nodeType\": \"Block\",\n              \"src\": \"2183:49:30\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 12628,\n                            \"name\": \"indexer\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 12618,\n                            \"src\": \"2218:7:30\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          ],\n                          \"id\": 12627,\n                          \"name\": \"IEntityIndexer\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 16003,\n                          \"src\": \"2203:14:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_contract$_IEntityIndexer_$16003_$\",\n                            \"typeString\": \"type(contract IEntityIndexer)\"\n                          }\n                        },\n                        \"id\": 12629,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2203:23:30\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IEntityIndexer_$16003\",\n                          \"typeString\": \"contract IEntityIndexer\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IEntityIndexer_$16003\",\n                          \"typeString\": \"contract IEntityIndexer\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12624,\n                        \"name\": \"indexers\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12540,\n                        \"src\": \"2189:8:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage\",\n                          \"typeString\": \"contract IEntityIndexer[] storage ref\"\n                        }\n                      },\n                      \"id\": 12626,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2198:4:30\",\n                      \"memberName\": \"push\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"src\": \"2189:13:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_arraypush_nonpayable$_t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage_ptr_$_t_contract$_IEntityIndexer_$16003_$returns$__$bound_to$_t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage_ptr_$\",\n                        \"typeString\": \"function (contract IEntityIndexer[] storage pointer,contract IEntityIndexer)\"\n                      }\n                    },\n                    \"id\": 12630,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2189:38:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 12631,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2189:38:30\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              12467\n            ],\n            \"documentation\": {\n              \"id\": 12616,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1930:171:30\",\n              \"text\": \" Register a new indexer that gets notified when a component value is set.\\n @param indexer Address of the indexer to notify when a component value is set.\"\n            },\n            \"functionSelector\": \"75c0669c\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [\n              {\n                \"id\": 12622,\n                \"kind\": \"modifierInvocation\",\n                \"modifierName\": {\n                  \"id\": 12621,\n                  \"name\": \"onlyWriter\",\n                  \"nameLocations\": [\n                    \"2172:10:30\"\n                  ],\n                  \"nodeType\": \"IdentifierPath\",\n                  \"referencedDeclaration\": 14872,\n                  \"src\": \"2172:10:30\"\n                },\n                \"nodeType\": \"ModifierInvocation\",\n                \"src\": \"2172:10:30\"\n              }\n            ],\n            \"name\": \"registerIndexer\",\n            \"nameLocation\": \"2113:15:30\",\n            \"overrides\": {\n              \"id\": 12620,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"2163:8:30\"\n            },\n            \"parameters\": {\n              \"id\": 12619,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12618,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"indexer\",\n                  \"nameLocation\": \"2137:7:30\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12633,\n                  \"src\": \"2129:15:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12617,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2129:7:30\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"2128:17:30\"\n            },\n            \"returnParameters\": {\n              \"id\": 12623,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2183:0:30\"\n            },\n            \"scope\": 12773,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": true,\n            \"visibility\": \"external\"\n          },\n          {\n            \"id\": 12703,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2279:579:30\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 12702,\n              \"nodeType\": \"Block\",\n              \"src\": \"2355:503:30\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 12645,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12636,\n                        \"src\": \"2398:6:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12642,\n                        \"name\": \"entities\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12531,\n                        \"src\": \"2385:8:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                          \"typeString\": \"contract Set\"\n                        }\n                      },\n                      \"id\": 12644,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2394:3:30\",\n                      \"memberName\": \"add\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 15026,\n                      \"src\": \"2385:12:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256) external\"\n                      }\n                    },\n                    \"id\": 12646,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2385:20:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 12647,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2385:20:30\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [\n                              {\n                                \"baseExpression\": {\n                                  \"id\": 12654,\n                                  \"name\": \"entityToValue\",\n                                  \"nodeType\": \"Identifier\",\n                                  \"overloadedDeclarations\": [],\n                                  \"referencedDeclaration\": 12318,\n                                  \"src\": \"2528:13:30\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_mapping$_t_uint256_$_t_bytes_storage_$\",\n                                    \"typeString\": \"mapping(uint256 => bytes storage ref)\"\n                                  }\n                                },\n                                \"id\": 12656,\n                                \"indexExpression\": {\n                                  \"id\": 12655,\n                                  \"name\": \"entity\",\n                                  \"nodeType\": \"Identifier\",\n                                  \"overloadedDeclarations\": [],\n                                  \"referencedDeclaration\": 12636,\n                                  \"src\": \"2542:6:30\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_uint256\",\n                                    \"typeString\": \"uint256\"\n                                  }\n                                },\n                                \"isConstant\": false,\n                                \"isLValue\": true,\n                                \"isPure\": false,\n                                \"lValueRequested\": false,\n                                \"nodeType\": \"IndexAccess\",\n                                \"src\": \"2528:21:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_bytes_storage\",\n                                  \"typeString\": \"bytes storage ref\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_bytes_storage\",\n                                  \"typeString\": \"bytes storage ref\"\n                                }\n                              ],\n                              \"id\": 12653,\n                              \"name\": \"keccak256\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -8,\n                              \"src\": \"2518:9:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                                \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                              }\n                            },\n                            \"id\": 12657,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"2518:32:30\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          ],\n                          \"id\": 12652,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"2510:7:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_uint256_$\",\n                            \"typeString\": \"type(uint256)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 12651,\n                            \"name\": \"uint256\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"2510:7:30\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 12658,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2510:41:30\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 12659,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12636,\n                        \"src\": \"2553:6:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12648,\n                        \"name\": \"valueToEntities\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12535,\n                        \"src\": \"2487:15:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                          \"typeString\": \"contract MapSet\"\n                        }\n                      },\n                      \"id\": 12650,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2503:6:30\",\n                      \"memberName\": \"remove\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 14732,\n                      \"src\": \"2487:22:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256,uint256) external\"\n                      }\n                    },\n                    \"id\": 12660,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2487:73:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 12661,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2487:73:30\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [\n                              {\n                                \"id\": 12668,\n                                \"name\": \"value\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": 12638,\n                                \"src\": \"2654:5:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                                  \"typeString\": \"bytes memory\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                                  \"typeString\": \"bytes memory\"\n                                }\n                              ],\n                              \"id\": 12667,\n                              \"name\": \"keccak256\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -8,\n                              \"src\": \"2644:9:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                                \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                              }\n                            },\n                            \"id\": 12669,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"2644:16:30\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          ],\n                          \"id\": 12666,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"2636:7:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_uint256_$\",\n                            \"typeString\": \"type(uint256)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 12665,\n                            \"name\": \"uint256\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"2636:7:30\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 12670,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2636:25:30\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 12671,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12636,\n                        \"src\": \"2663:6:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12662,\n                        \"name\": \"valueToEntities\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12535,\n                        \"src\": \"2616:15:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                          \"typeString\": \"contract MapSet\"\n                        }\n                      },\n                      \"id\": 12664,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2632:3:30\",\n                      \"memberName\": \"add\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 14661,\n                      \"src\": \"2616:19:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256,uint256) external\"\n                      }\n                    },\n                    \"id\": 12672,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2616:54:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 12673,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2616:54:30\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 12677,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12636,\n                        \"src\": \"2739:6:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 12678,\n                        \"name\": \"value\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12638,\n                        \"src\": \"2747:5:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12674,\n                        \"name\": \"super\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": -25,\n                        \"src\": \"2728:5:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_type$_t_super$_Component_$12773_$\",\n                          \"typeString\": \"type(contract super Component)\"\n                        }\n                      },\n                      \"id\": 12676,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2734:4:30\",\n                      \"memberName\": \"_set\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 12490,\n                      \"src\": \"2728:10:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$\",\n                        \"typeString\": \"function (uint256,bytes memory)\"\n                      }\n                    },\n                    \"id\": 12679,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2728:25:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 12680,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2728:25:30\"\n                },\n                {\n                  \"body\": {\n                    \"id\": 12700,\n                    \"nodeType\": \"Block\",\n                    \"src\": \"2806:48:30\",\n                    \"statements\": [\n                      {\n                        \"expression\": {\n                          \"arguments\": [\n                            {\n                              \"id\": 12696,\n                              \"name\": \"entity\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 12636,\n                              \"src\": \"2833:6:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_uint256\",\n                                \"typeString\": \"uint256\"\n                              }\n                            },\n                            {\n                              \"id\": 12697,\n                              \"name\": \"value\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 12638,\n                              \"src\": \"2841:5:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                                \"typeString\": \"bytes memory\"\n                              }\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_uint256\",\n                                \"typeString\": \"uint256\"\n                              },\n                              {\n                                \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                                \"typeString\": \"bytes memory\"\n                              }\n                            ],\n                            \"expression\": {\n                              \"baseExpression\": {\n                                \"id\": 12692,\n                                \"name\": \"indexers\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": 12540,\n                                \"src\": \"2814:8:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage\",\n                                  \"typeString\": \"contract IEntityIndexer[] storage ref\"\n                                }\n                              },\n                              \"id\": 12694,\n                              \"indexExpression\": {\n                                \"id\": 12693,\n                                \"name\": \"i\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": 12682,\n                                \"src\": \"2823:1:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_uint256\",\n                                  \"typeString\": \"uint256\"\n                                }\n                              },\n                              \"isConstant\": false,\n                              \"isLValue\": true,\n                              \"isPure\": false,\n                              \"lValueRequested\": false,\n                              \"nodeType\": \"IndexAccess\",\n                              \"src\": \"2814:11:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_contract$_IEntityIndexer_$16003\",\n                                \"typeString\": \"contract IEntityIndexer\"\n                              }\n                            },\n                            \"id\": 12695,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"2826:6:30\",\n                            \"memberName\": \"update\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"referencedDeclaration\": 15997,\n                            \"src\": \"2814:18:30\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$\",\n                              \"typeString\": \"function (uint256,bytes memory) external\"\n                            }\n                          },\n                          \"id\": 12698,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"kind\": \"functionCall\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"2814:33:30\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_tuple$__$\",\n                            \"typeString\": \"tuple()\"\n                          }\n                        },\n                        \"id\": 12699,\n                        \"nodeType\": \"ExpressionStatement\",\n                        \"src\": \"2814:33:30\"\n                      }\n                    ]\n                  },\n                  \"condition\": {\n                    \"commonType\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    },\n                    \"id\": 12688,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftExpression\": {\n                      \"id\": 12685,\n                      \"name\": \"i\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 12682,\n                      \"src\": \"2780:1:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"nodeType\": \"BinaryOperation\",\n                    \"operator\": \"<\",\n                    \"rightExpression\": {\n                      \"expression\": {\n                        \"id\": 12686,\n                        \"name\": \"indexers\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12540,\n                        \"src\": \"2784:8:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage\",\n                          \"typeString\": \"contract IEntityIndexer[] storage ref\"\n                        }\n                      },\n                      \"id\": 12687,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2793:6:30\",\n                      \"memberName\": \"length\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"src\": \"2784:15:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"src\": \"2780:19:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"id\": 12701,\n                  \"initializationExpression\": {\n                    \"assignments\": [\n                      12682\n                    ],\n                    \"declarations\": [\n                      {\n                        \"constant\": false,\n                        \"id\": 12682,\n                        \"mutability\": \"mutable\",\n                        \"name\": \"i\",\n                        \"nameLocation\": \"2773:1:30\",\n                        \"nodeType\": \"VariableDeclaration\",\n                        \"scope\": 12701,\n                        \"src\": \"2765:9:30\",\n                        \"stateVariable\": false,\n                        \"storageLocation\": \"default\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        \"typeName\": {\n                          \"id\": 12681,\n                          \"name\": \"uint256\",\n                          \"nodeType\": \"ElementaryTypeName\",\n                          \"src\": \"2765:7:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        },\n                        \"visibility\": \"internal\"\n                      }\n                    ],\n                    \"id\": 12684,\n                    \"initialValue\": {\n                      \"hexValue\": \"30\",\n                      \"id\": 12683,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"kind\": \"number\",\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"Literal\",\n                      \"src\": \"2777:1:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_rational_0_by_1\",\n                        \"typeString\": \"int_const 0\"\n                      },\n                      \"value\": \"0\"\n                    },\n                    \"nodeType\": \"VariableDeclarationStatement\",\n                    \"src\": \"2765:13:30\"\n                  },\n                  \"loopExpression\": {\n                    \"expression\": {\n                      \"id\": 12690,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"UnaryOperation\",\n                      \"operator\": \"++\",\n                      \"prefix\": false,\n                      \"src\": \"2801:3:30\",\n                      \"subExpression\": {\n                        \"id\": 12689,\n                        \"name\": \"i\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12682,\n                        \"src\": \"2801:1:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"id\": 12691,\n                    \"nodeType\": \"ExpressionStatement\",\n                    \"src\": \"2801:3:30\"\n                  },\n                  \"nodeType\": \"ForStatement\",\n                  \"src\": \"2760:94:30\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              12490\n            ],\n            \"documentation\": {\n              \"id\": 12634,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2236:40:30\",\n              \"text\": \" @inheritdoc BareComponent\"\n            },\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"_set\",\n            \"nameLocation\": \"2288:4:30\",\n            \"overrides\": {\n              \"id\": 12640,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"2346:8:30\"\n            },\n            \"parameters\": {\n              \"id\": 12639,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12636,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"2301:6:30\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12703,\n                  \"src\": \"2293:14:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12635,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2293:7:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 12638,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"value\",\n                  \"nameLocation\": \"2322:5:30\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12703,\n                  \"src\": \"2309:18:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12637,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2309:5:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"2292:36:30\"\n            },\n            \"returnParameters\": {\n              \"id\": 12641,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2355:0:30\"\n            },\n            \"scope\": 12773,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": true,\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 12772,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2905:591:30\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 12771,\n              \"nodeType\": \"Block\",\n              \"src\": \"2964:532:30\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"condition\": {\n                    \"commonType\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    },\n                    \"id\": 12722,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftExpression\": {\n                      \"arguments\": [\n                        {\n                          \"arguments\": [\n                            {\n                              \"arguments\": [\n                                {\n                                  \"baseExpression\": {\n                                    \"id\": 12715,\n                                    \"name\": \"entityToValue\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": 12318,\n                                    \"src\": \"3066:13:30\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_mapping$_t_uint256_$_t_bytes_storage_$\",\n                                      \"typeString\": \"mapping(uint256 => bytes storage ref)\"\n                                    }\n                                  },\n                                  \"id\": 12717,\n                                  \"indexExpression\": {\n                                    \"id\": 12716,\n                                    \"name\": \"entity\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": 12706,\n                                    \"src\": \"3080:6:30\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_uint256\",\n                                      \"typeString\": \"uint256\"\n                                    }\n                                  },\n                                  \"isConstant\": false,\n                                  \"isLValue\": true,\n                                  \"isPure\": false,\n                                  \"lValueRequested\": false,\n                                  \"nodeType\": \"IndexAccess\",\n                                  \"src\": \"3066:21:30\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_bytes_storage\",\n                                    \"typeString\": \"bytes storage ref\"\n                                  }\n                                }\n                              ],\n                              \"expression\": {\n                                \"argumentTypes\": [\n                                  {\n                                    \"typeIdentifier\": \"t_bytes_storage\",\n                                    \"typeString\": \"bytes storage ref\"\n                                  }\n                                ],\n                                \"id\": 12714,\n                                \"name\": \"keccak256\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": -8,\n                                \"src\": \"3056:9:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                                  \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                                }\n                              },\n                              \"id\": 12718,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": false,\n                              \"kind\": \"functionCall\",\n                              \"lValueRequested\": false,\n                              \"nameLocations\": [],\n                              \"names\": [],\n                              \"nodeType\": \"FunctionCall\",\n                              \"src\": \"3056:32:30\",\n                              \"tryCall\": false,\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_bytes32\",\n                                \"typeString\": \"bytes32\"\n                              }\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_bytes32\",\n                                \"typeString\": \"bytes32\"\n                              }\n                            ],\n                            \"id\": 12713,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"lValueRequested\": false,\n                            \"nodeType\": \"ElementaryTypeNameExpression\",\n                            \"src\": \"3048:7:30\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_uint256_$\",\n                              \"typeString\": \"type(uint256)\"\n                            },\n                            \"typeName\": {\n                              \"id\": 12712,\n                              \"name\": \"uint256\",\n                              \"nodeType\": \"ElementaryTypeName\",\n                              \"src\": \"3048:7:30\",\n                              \"typeDescriptions\": {}\n                            }\n                          },\n                          \"id\": 12719,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"kind\": \"typeConversion\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"3048:41:30\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        }\n                      ],\n                      \"expression\": {\n                        \"argumentTypes\": [\n                          {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        ],\n                        \"expression\": {\n                          \"id\": 12710,\n                          \"name\": \"valueToEntities\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 12535,\n                          \"src\": \"3027:15:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                            \"typeString\": \"contract MapSet\"\n                          }\n                        },\n                        \"id\": 12711,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"memberLocation\": \"3043:4:30\",\n                        \"memberName\": \"size\",\n                        \"nodeType\": \"MemberAccess\",\n                        \"referencedDeclaration\": 14801,\n                        \"src\": \"3027:20:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_external_view$_t_uint256_$returns$_t_uint256_$\",\n                          \"typeString\": \"function (uint256) view external returns (uint256)\"\n                        }\n                      },\n                      \"id\": 12720,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"3027:63:30\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"nodeType\": \"BinaryOperation\",\n                    \"operator\": \"==\",\n                    \"rightExpression\": {\n                      \"hexValue\": \"30\",\n                      \"id\": 12721,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"kind\": \"number\",\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"Literal\",\n                      \"src\": \"3094:1:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_rational_0_by_1\",\n                        \"typeString\": \"int_const 0\"\n                      },\n                      \"value\": \"0\"\n                    },\n                    \"src\": \"3027:68:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"id\": 12724,\n                  \"nodeType\": \"IfStatement\",\n                  \"src\": \"3023:81:30\",\n                  \"trueBody\": {\n                    \"functionReturnParameters\": 12709,\n                    \"id\": 12723,\n                    \"nodeType\": \"Return\",\n                    \"src\": \"3097:7:30\"\n                  }\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [\n                              {\n                                \"baseExpression\": {\n                                  \"id\": 12731,\n                                  \"name\": \"entityToValue\",\n                                  \"nodeType\": \"Identifier\",\n                                  \"overloadedDeclarations\": [],\n                                  \"referencedDeclaration\": 12318,\n                                  \"src\": \"3201:13:30\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_mapping$_t_uint256_$_t_bytes_storage_$\",\n                                    \"typeString\": \"mapping(uint256 => bytes storage ref)\"\n                                  }\n                                },\n                                \"id\": 12733,\n                                \"indexExpression\": {\n                                  \"id\": 12732,\n                                  \"name\": \"entity\",\n                                  \"nodeType\": \"Identifier\",\n                                  \"overloadedDeclarations\": [],\n                                  \"referencedDeclaration\": 12706,\n                                  \"src\": \"3215:6:30\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_uint256\",\n                                    \"typeString\": \"uint256\"\n                                  }\n                                },\n                                \"isConstant\": false,\n                                \"isLValue\": true,\n                                \"isPure\": false,\n                                \"lValueRequested\": false,\n                                \"nodeType\": \"IndexAccess\",\n                                \"src\": \"3201:21:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_bytes_storage\",\n                                  \"typeString\": \"bytes storage ref\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_bytes_storage\",\n                                  \"typeString\": \"bytes storage ref\"\n                                }\n                              ],\n                              \"id\": 12730,\n                              \"name\": \"keccak256\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -8,\n                              \"src\": \"3191:9:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                                \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                              }\n                            },\n                            \"id\": 12734,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"3191:32:30\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          ],\n                          \"id\": 12729,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"3183:7:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_uint256_$\",\n                            \"typeString\": \"type(uint256)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 12728,\n                            \"name\": \"uint256\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"3183:7:30\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 12735,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"3183:41:30\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 12736,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12706,\n                        \"src\": \"3226:6:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12725,\n                        \"name\": \"valueToEntities\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12535,\n                        \"src\": \"3160:15:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_MapSet_$14802\",\n                          \"typeString\": \"contract MapSet\"\n                        }\n                      },\n                      \"id\": 12727,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3176:6:30\",\n                      \"memberName\": \"remove\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 14732,\n                      \"src\": \"3160:22:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256,uint256) external\"\n                      }\n                    },\n                    \"id\": 12737,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3160:73:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 12738,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3160:73:30\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 12742,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12706,\n                        \"src\": \"3302:6:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12739,\n                        \"name\": \"entities\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12531,\n                        \"src\": \"3286:8:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                          \"typeString\": \"contract Set\"\n                        }\n                      },\n                      \"id\": 12741,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3295:6:30\",\n                      \"memberName\": \"remove\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 15075,\n                      \"src\": \"3286:15:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256) external\"\n                      }\n                    },\n                    \"id\": 12743,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3286:23:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 12744,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3286:23:30\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 12748,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12706,\n                        \"src\": \"3391:6:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 12745,\n                        \"name\": \"super\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": -25,\n                        \"src\": \"3377:5:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_type$_t_super$_Component_$12773_$\",\n                          \"typeString\": \"type(contract super Component)\"\n                        }\n                      },\n                      \"id\": 12747,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3383:7:30\",\n                      \"memberName\": \"_remove\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 12509,\n                      \"src\": \"3377:13:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256)\"\n                      }\n                    },\n                    \"id\": 12749,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3377:21:30\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 12750,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3377:21:30\"\n                },\n                {\n                  \"body\": {\n                    \"id\": 12769,\n                    \"nodeType\": \"Block\",\n                    \"src\": \"3451:41:30\",\n                    \"statements\": [\n                      {\n                        \"expression\": {\n                          \"arguments\": [\n                            {\n                              \"id\": 12766,\n                              \"name\": \"entity\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 12706,\n                              \"src\": \"3478:6:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_uint256\",\n                                \"typeString\": \"uint256\"\n                              }\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_uint256\",\n                                \"typeString\": \"uint256\"\n                              }\n                            ],\n                            \"expression\": {\n                              \"baseExpression\": {\n                                \"id\": 12762,\n                                \"name\": \"indexers\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": 12540,\n                                \"src\": \"3459:8:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage\",\n                                  \"typeString\": \"contract IEntityIndexer[] storage ref\"\n                                }\n                              },\n                              \"id\": 12764,\n                              \"indexExpression\": {\n                                \"id\": 12763,\n                                \"name\": \"i\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": 12752,\n                                \"src\": \"3468:1:30\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_uint256\",\n                                  \"typeString\": \"uint256\"\n                                }\n                              },\n                              \"isConstant\": false,\n                              \"isLValue\": true,\n                              \"isPure\": false,\n                              \"lValueRequested\": false,\n                              \"nodeType\": \"IndexAccess\",\n                              \"src\": \"3459:11:30\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_contract$_IEntityIndexer_$16003\",\n                                \"typeString\": \"contract IEntityIndexer\"\n                              }\n                            },\n                            \"id\": 12765,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"3471:6:30\",\n                            \"memberName\": \"remove\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"referencedDeclaration\": 16002,\n                            \"src\": \"3459:18:30\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$returns$__$\",\n                              \"typeString\": \"function (uint256) external\"\n                            }\n                          },\n                          \"id\": 12767,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"kind\": \"functionCall\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"3459:26:30\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_tuple$__$\",\n                            \"typeString\": \"tuple()\"\n                          }\n                        },\n                        \"id\": 12768,\n                        \"nodeType\": \"ExpressionStatement\",\n                        \"src\": \"3459:26:30\"\n                      }\n                    ]\n                  },\n                  \"condition\": {\n                    \"commonType\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    },\n                    \"id\": 12758,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftExpression\": {\n                      \"id\": 12755,\n                      \"name\": \"i\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 12752,\n                      \"src\": \"3425:1:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"nodeType\": \"BinaryOperation\",\n                    \"operator\": \"<\",\n                    \"rightExpression\": {\n                      \"expression\": {\n                        \"id\": 12756,\n                        \"name\": \"indexers\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12540,\n                        \"src\": \"3429:8:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_array$_t_contract$_IEntityIndexer_$16003_$dyn_storage\",\n                          \"typeString\": \"contract IEntityIndexer[] storage ref\"\n                        }\n                      },\n                      \"id\": 12757,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3438:6:30\",\n                      \"memberName\": \"length\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"src\": \"3429:15:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"src\": \"3425:19:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"id\": 12770,\n                  \"initializationExpression\": {\n                    \"assignments\": [\n                      12752\n                    ],\n                    \"declarations\": [\n                      {\n                        \"constant\": false,\n                        \"id\": 12752,\n                        \"mutability\": \"mutable\",\n                        \"name\": \"i\",\n                        \"nameLocation\": \"3418:1:30\",\n                        \"nodeType\": \"VariableDeclaration\",\n                        \"scope\": 12770,\n                        \"src\": \"3410:9:30\",\n                        \"stateVariable\": false,\n                        \"storageLocation\": \"default\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        \"typeName\": {\n                          \"id\": 12751,\n                          \"name\": \"uint256\",\n                          \"nodeType\": \"ElementaryTypeName\",\n                          \"src\": \"3410:7:30\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        },\n                        \"visibility\": \"internal\"\n                      }\n                    ],\n                    \"id\": 12754,\n                    \"initialValue\": {\n                      \"hexValue\": \"30\",\n                      \"id\": 12753,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"kind\": \"number\",\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"Literal\",\n                      \"src\": \"3422:1:30\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_rational_0_by_1\",\n                        \"typeString\": \"int_const 0\"\n                      },\n                      \"value\": \"0\"\n                    },\n                    \"nodeType\": \"VariableDeclarationStatement\",\n                    \"src\": \"3410:13:30\"\n                  },\n                  \"loopExpression\": {\n                    \"expression\": {\n                      \"id\": 12760,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"UnaryOperation\",\n                      \"operator\": \"++\",\n                      \"prefix\": false,\n                      \"src\": \"3446:3:30\",\n                      \"subExpression\": {\n                        \"id\": 12759,\n                        \"name\": \"i\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 12752,\n                        \"src\": \"3446:1:30\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"id\": 12761,\n                    \"nodeType\": \"ExpressionStatement\",\n                    \"src\": \"3446:3:30\"\n                  },\n                  \"nodeType\": \"ForStatement\",\n                  \"src\": \"3405:87:30\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              12509\n            ],\n            \"documentation\": {\n              \"id\": 12704,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2862:40:30\",\n              \"text\": \" @inheritdoc BareComponent\"\n            },\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"_remove\",\n            \"nameLocation\": \"2914:7:30\",\n            \"overrides\": {\n              \"id\": 12708,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"2955:8:30\"\n            },\n            \"parameters\": {\n              \"id\": 12707,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 12706,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"2930:6:30\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 12772,\n                  \"src\": \"2922:14:30\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 12705,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2922:7:30\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"2921:16:30\"\n            },\n            \"returnParameters\": {\n              \"id\": 12709,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2964:0:30\"\n            },\n            \"scope\": 12773,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": true,\n            \"visibility\": \"internal\"\n          }\n        ],\n        \"abstract\": true,\n        \"baseContracts\": [\n          {\n            \"baseName\": {\n              \"id\": 12526,\n              \"name\": \"BareComponent\",\n              \"nameLocations\": [\n                \"722:13:30\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 12510,\n              \"src\": \"722:13:30\"\n            },\n            \"id\": 12527,\n            \"nodeType\": \"InheritanceSpecifier\",\n            \"src\": \"722:13:30\"\n          }\n        ],\n        \"canonicalName\": \"Component\",\n        \"contractDependencies\": [\n          14802,\n          15152\n        ],\n        \"contractKind\": \"contract\",\n        \"documentation\": {\n          \"id\": 12525,\n          \"nodeType\": \"StructuredDocumentation\",\n          \"src\": \"344:346:30\",\n          \"text\": \" Components are a key-value store from entity id to component value.\\n They are registered in the World and register updates to their state in the World.\\n They have an owner, who can grant write access to more addresses.\\n (Systems that want to write to a component need to be given write access first.)\\n Everyone has read access.\"\n        },\n        \"fullyImplemented\": false,\n        \"linearizedBaseContracts\": [\n          12773,\n          12510,\n          14909,\n          14821,\n          545,\n          21812,\n          22183,\n          21688,\n          15952,\n          16020,\n          604,\n          21828\n        ],\n        \"name\": \"Component\",\n        \"nameLocation\": \"709:9:30\",\n        \"scope\": 12774,\n        \"usedErrors\": [\n          12310,\n          14836,\n          22180,\n          22182\n        ]\n      }\n    ],\n    \"license\": \"MIT\"\n  },\n  \"id\": 30\n}","{\n  \"abi\": [\n    {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"componentId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"component\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ComponentValueRemoved\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"componentId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"component\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"ComponentValueSet\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"components\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract IUint256Component\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getComponent\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"componentAddr\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getComponentIdFromAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getNumEntities\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"systemId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getSystemAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getUniqueEntityId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"hasEntity\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"init\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"enum QueryType\",\n              \"name\": \"queryType\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"componentId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"value\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"internalType\": \"struct WorldQueryFragment[]\",\n          \"name\": \"worldQueryFragments\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"query\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"register\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract RegisterSystem\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"componentAddr\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"registerComponent\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"registerComponentValueRemoved\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"component\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"registerComponentValueRemoved\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"component\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"registerComponentValueSet\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"entity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"registerComponentValueSet\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"systemAddr\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"registerSystem\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"systems\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract IUint256Component\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ],\n  \"bytecode\": {\n    \"object\": \"\",\n    \"sourceMap\": \"1597:5812:41:-:0;;;1649:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1626:32:41;;;-1:-1:-1;;;;;;1626:32:41;-1:-1:-1;;;;;1626:32:41;;;;;;;;;;2005:327;;;;;;;;;;2068:1;107:39:43;99:48;;2039:55:41;;;;;:::i;:::-;-1:-1:-1;;;;;206:32:69;;;188:51;;270:2;255:18;;248:34;176:2;161:18;2039:55:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2025:11:41;:69;;-1:-1:-1;;;;;;2025:69:41;-1:-1:-1;;;;;2025:69:41;;;;;;;;;;2111:52;;-1:-1:-1;;195:36:43;;2111:52:41;;;:::i;:::-;-1:-1:-1;;;;;206:32:69;;;188:51;;270:2;255:18;;248:34;176:2;161:18;2111:52:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2100:8:41;:63;;-1:-1:-1;;;;;;2100:63:41;-1:-1:-1;;;;;2100:63:41;;;;;;-1:-1:-1;2213:11:41;2180:46;;2199:4;;2213:11;;;;;2180:46;;;:::i;:::-;-1:-1:-1;;;;;538:15:69;;;520:34;;590:15;;585:2;570:18;;563:43;470:2;455:18;2180:46:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2169:8:41;:57;;-1:-1:-1;;;;;;2169:57:41;-1:-1:-1;;;;;2169:57:41;;;;;;;;;2232:8;;:43;;-1:-1:-1;;;2232:43:41;;;;;763:51:69;;;;2232:8:41;;;;:24;;736:18:69;;2232:43:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2281:11:41;;2317:8;;2281:46;;-1:-1:-1;;;2281:46:41;;-1:-1:-1;;;;;2317:8:41;;;2281:46;;;763:51:69;2281:11:41;;;-1:-1:-1;2281:27:41;;-1:-1:-1;736:18:69;;2281:46:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1597:5812;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;617:203:69:-;1597:5812:41;;;;;;\",\n    \"linkReferences\": {}\n  },\n  \"deployedBytecode\": {\n    \"object\": \"0x608060405234801561001057600080fd5b506004361061011b5760003560e01c8063af104e40116100b2578063d803064a11610081578063e3d1287511610066578063e3d128751461026f578063f303477014610292578063fb3ec48b146102a557600080fd5b8063d803064a14610254578063e1c7392a1461026757600080fd5b8063af104e4014610208578063ba62fbe41461021b578063cfd3c57f14610239578063d7ecf62b1461024c57600080fd5b80634f27da18116100ee5780634f27da18146101ac578063614bfa6e146101bf578063687485a6146101d55780639f54f545146101f557600080fd5b80630d59332e146101205780630de3b7b5146101645780631aa3a008146101795780631ee444b714610199575b600080fd5b60025473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610177610172366004612614565b6102b8565b005b60035461013a9073ffffffffffffffffffffffffffffffffffffffff1681565b6101776101a7366004612656565b61040a565b61013a6101ba366004612614565b6104d9565b6101c7610505565b60405190815260200161015b565b6101e86101e3366004612680565b610563565b60405161015b91906126f5565b6101c7610203366004612739565b610742565b61017761021636600461279d565b610768565b60015473ffffffffffffffffffffffffffffffffffffffff1661013a565b6101776102473660046127f7565b610979565b6101c7610b5c565b610177610262366004612656565b610bf3565b610177610d6e565b61028261027d366004612614565b610f61565b604051901515815260200161015b565b6101776102a0366004612656565b610ff5565b61013a6102b3366004612614565b61102f565b6001546040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815233600482018190529173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b9190612843565b6103b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f636f6d706f6e656e74206e6f742072656769737465726564000000000000000060448201526064015b60405180910390fd5b600154829033906103dd9073ffffffffffffffffffffffffffffffffffffffff1682611055565b6040517f6dd56823030ae6d8ae09cbfb8972c4e9494e67b209c4ab6300c21d73e269b35090600090a45050565b60035460405173ffffffffffffffffffffffffffffffffffffffff909116906309c5eabe9061044490339060019087908790602001612894565b6040516020818303038152906040526040518263ffffffff1660e01b815260040161046f919061292c565b6000604051808303816000875af115801561048e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104d491908101906129fb565b505050565b6001546000906104ff9073ffffffffffffffffffffffffffffffffffffffff16836111f4565b92915050565b600080610510610b5c565b905060005b8161051f81612adc565b9250508160405160200161053591815260200190565b6040516020818303038152906040528051906020012060001c905061055981610f61565b6105155792915050565b606060008267ffffffffffffffff8111156105805761058061297d565b6040519080825280602002602001820160405280156105cd57816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161059e5790505b50905060005b838110156107305760405180606001604052808686848181106105f8576105f8612b14565b905060200281019061060a9190612b43565b610618906020810190612b81565b600581111561062957610629612865565b815260015460209091019061067b9073ffffffffffffffffffffffffffffffffffffffff1688888681811061066057610660612b14565b90506020028101906106729190612b43565b60200135611338565b73ffffffffffffffffffffffffffffffffffffffff1681526020018686848181106106a8576106a8612b14565b90506020028101906106ba9190612b43565b6106c8906040810190612ba2565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250825183908390811061071257610712612b14565b6020026020010181905250808061072890612adc565b9150506105d3565b5061073a81611344565b949350505050565b6001546000906104ff9073ffffffffffffffffffffffffffffffffffffffff1683611055565b600154849073ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e6107a58373ffffffffffffffffffffffffffffffffffffffff1690565b6040518263ffffffff1660e01b81526004016107c391815260200190565b602060405180830381865afa1580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108049190612843565b61086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f636f6d706f6e656e74206e6f742072656769737465726564000000000000000060448201526064016103ad565b3373ffffffffffffffffffffffffffffffffffffffff86161461088c57600080fd5b6000546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b1580156108f857600080fd5b505af115801561090c573d6000803e3d6000fd5b505060015486925073ffffffffffffffffffffffffffffffffffffffff8089169250610939911688611055565b7f6ac31c38682e0128240cf68316d7ae751020d8f74c614e2a30278afcec8a6073868660405161096a929190612c07565b60405180910390a45050505050565b6001546040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815233600482018190529173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa1580156109e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0c9190612843565b610a72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f636f6d706f6e656e74206e6f742072656769737465726564000000000000000060448201526064016103ad565b6000546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b158015610ade57600080fd5b505af1158015610af2573d6000803e3d6000fd5b5050600154869250339150610b1d9073ffffffffffffffffffffffffffffffffffffffff1682611055565b7f6ac31c38682e0128240cf68316d7ae751020d8f74c614e2a30278afcec8a60738686604051610b4e929190612c07565b60405180910390a450505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee9190612c54565b905090565b600154829073ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e610c308373ffffffffffffffffffffffffffffffffffffffff1690565b6040518263ffffffff1660e01b8152600401610c4e91815260200190565b602060405180830381865afa158015610c6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8f9190612843565b610cf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f636f6d706f6e656e74206e6f742072656769737465726564000000000000000060448201526064016103ad565b3373ffffffffffffffffffffffffffffffffffffffff841614610d1757600080fd5b600154829073ffffffffffffffffffffffffffffffffffffffff80861691610d40911686611055565b6040517f6dd56823030ae6d8ae09cbfb8972c4e9494e67b209c4ab6300c21d73e269b35090600090a4505050565b6001546040517f9d2c76b400000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff90911690639d2c76b490602401600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506002546040517f9d2c76b400000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169250639d2c76b49150602401600060405180830381600087803b158015610e5c57600080fd5b505af1158015610e70573d6000803e3d6000fd5b505060035460405173ffffffffffffffffffffffffffffffffffffffff90911692506309c5eabe9150610ece90339060019085907f554d0b3fe5f19a44775dc4000490ad0bafbc48129e8e396be983226890aece9990602001612894565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401610ef9919061292c565b6000604051808303816000875af1158015610f18573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f5e91908101906129fb565b50565b600080546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063cccf7a8e90602401602060405180830381865afa158015610fd1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190612843565b60035460405173ffffffffffffffffffffffffffffffffffffffff909116906309c5eabe9061044490339060009087908790602001612894565b6002546000906104ff9073ffffffffffffffffffffffffffffffffffffffff16836111f4565b60008273ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e6110908473ffffffffffffffffffffffffffffffffffffffff1690565b6040518263ffffffff1660e01b81526004016110ae91815260200190565b602060405180830381865afa1580156110cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ef9190612843565b611155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f61646472657373206e6f7420726567697374657265640000000000000000000060448201526064016103ad565b8273ffffffffffffffffffffffffffffffffffffffff16630ff4c91661118e8473ffffffffffffffffffffffffffffffffffffffff1690565b6040518263ffffffff1660e01b81526004016111ac91815260200190565b602060405180830381865afa1580156111c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ed9190612c54565b9392505050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015611264573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526112aa9190810190612c6d565b90508051600003611317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016103ad565b61073a8160008151811061132d5761132d612b14565b602002602001015190565b60006111ed83836111f4565b606061134e6125a1565b7620000000000000000000000000000000000000000000008152600060208201819052600160808301525b835181101561181457600084828151811061139657611396612b14565b602002602001015190506113a981611827565b156113f7576004815160058111156113c3576113c3612865565b036113d057604083018190525b6005815160058111156113e5576113e5612865565b036113f257606083018190525b611801565b82608001511561171a5761140a81611862565b611470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e454741544956455f494e495449414c5f465241474d454e540000000000000060448201526064016103ad565b600060808401819052808251600581111561148d5761148d612865565b1461153b57816020015173ffffffffffffffffffffffffffffffffffffffff1663b361be4683604001516040518263ffffffff1660e01b81526004016114d3919061292c565b600060405180830381865afa1580156114f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115369190810190612c6d565b6115d0565b816020015173ffffffffffffffffffffffffffffffffffffffff166331b933b96040518163ffffffff1660e01b8152600401600060405180830381865afa15801561158a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115d09190810190612c6d565b90506115db81611886565b845280516020808601919091526060850151015173ffffffffffffffffffffffffffffffffffffffff161580159061162e5750600084606001516040015180602001905181019061162c9190612c54565b115b156117145760005b815181101561171257600061168883838151811061165657611656612b14565b60200260200101518760600151602001518860600151604001518060200190518101906116839190612c54565b6118ee565b905060005b81518110156116fd576116d66116ce60405180604001604052808585815181106116b9576116b9612b14565b60200260200101518152602001600081525090565b885190611b25565b8752602087018051906116e882612adc565b905250806116f581612adc565b91505061168d565b5050808061170a90612adc565b915050611636565b505b50611801565b82517620000000000000000000000000000000000000000000009060009060019060601c69ffffffffffffffffffff165b81156117f657600061176f8260408051808201909152600080825260208201525090565b805190915060006117808289611b8a565b905061178e8a898484611f49565b905080156117cc576117bc6117b56040518060400160405280858152602001600081525090565b8890611b25565b9650856117c881612adc565b9650505b6117d98a89848a8a611fdb565b8b5160b01c86015191985096508015159550935061174b92505050565b505090845260208401525b508061180c81612adc565b915050611379565b506111ed8160000151826020015161216c565b600060048251600581111561183e5761183e612865565b14806104ff575060055b8251600581111561185b5761185b612865565b1492915050565b6000808251600581111561187857611878612865565b14806104ff57506002611848565b76200000000000000000000000000000000000000000000060005b82518110156118e8576118d46118cd60405180604001604052808685815181106116b9576116b9612b14565b8390611b25565b9150806118e081612adc565b9150506118a1565b50919050565b60608160000361190d57506040805160008152602081019091526111ed565b60008373ffffffffffffffffffffffffffffffffffffffff1663b361be468660405160200161193e91815260200190565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401611969919061292c565b600060405180830381865afa158015611986573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526119cc9190810190612c6d565b9050826001036119dd5790506111ed565b7620000000000000000000000000000000000000000000006000805b8351811015611a9e576000611a2f858381518110611a1957611a19612b14565b60200260200101518960018a6116839190612d13565b905060005b8151811015611a8957611a67611a6060405180604001604052808585815181106116b9576116b9612b14565b8690611b25565b945083611a7381612adc565b9450508080611a8190612adc565b915050611a34565b50508080611a9690612adc565b9150506119f9565b506000611ab783855184611ab29190612d26565b61216c565b905060005b8451811015611b1957848181518110611ad757611ad7612b14565b6020026020010151828285611aec9190612d26565b81518110611afc57611afc612b14565b602090810291909101015280611b1181612adc565b915050611abc565b50979650505050505050565b6000808360501b60b01c1160018114611b4a578260101b8360601b8517179150611b83565b828460b01c8560a01b60b01c01528260101b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000085161791505b5092915050565b60008082516005811115611ba057611ba0612865565b03611c415760208201516040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169063cccf7a8e90602401602060405180830381865afa158015611c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3a9190612843565b90506104ff565b600282516005811115611c5657611c56612865565b03611d2d5760208201516040517fb8bc073d0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169063b8bc073d90602401600060405180830381865afa158015611ccc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611d1291908101906129fb565b805190602001208260400151805190602001201490506104ff565b600182516005811115611d4257611d42612865565b03611de45760208201516040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169063cccf7a8e90602401602060405180830381865afa158015611db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddc9190612843565b1590506104ff565b600382516005811115611df957611df9612865565b03611ed15760208201516040517fb8bc073d0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169063b8bc073d90602401600060405180830381865afa158015611e6f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611eb591908101906129fb565b80519060200120826040015180519060200120141590506104ff565b611eda82612244565b611f40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e4f5f454e544954595f465241474d454e54000000000000000000000000000060448201526064016103ad565b50600092915050565b60408401516020015160009073ffffffffffffffffffffffffffffffffffffffff1615801590611f9457506000856040015160400151806020019051810190611f929190612c54565b115b8015611fa75750611fa582856122a3565b155b15611fd357600080611fbe858789604001516122ce565b915091508015611fd05750905061073a565b50505b509392505050565b606085015160200151600090819073ffffffffffffffffffffffffffffffffffffffff1615801590612028575060008760600151604001518060200190518101906120269190612c54565b115b15612160576000612058868960600151602001518a60600151604001518060200190518101906116839190612c54565b905060005b815181101561215d57600082828151811061207a5761207a612b14565b602002602001015190506000612090828b611b8a565b9050801580156120bd575060408b01516020015173ffffffffffffffffffffffffffffffffffffffff1615155b80156120e4575060008b60400151604001518060200190518101906120e29190612c54565b115b1561210c576000806120fb848d8f604001516122ce565b915091508015612109578192505b50505b80156121485761213861213160405180604001604052808c8152602001600081525090565b8990611b25565b97508661214481612adc565b9750505b5050808061215590612adc565b91505061205d565b50505b50919590945092505050565b60608167ffffffffffffffff8111156121875761218761297d565b6040519080825280602002602001820160405280156121b0578160200160208202803683370190505b50905081156104ff57600169ffffffffffffffffffff606085901c1660005b821561223b5760006121f38360408051808201909152600080825260208201525090565b9050806000015185838151811061220c5761220c612b14565b60209081029190910101528161222181612adc565b60b089901c949094015180151595509392506121cf915050565b50505092915050565b6000808251600581111561225a5761225a612865565b1480612278575060028251600581111561227657612276612865565b145b80612296575060015b8251600581111561229457612294612865565b145b806104ff57506003611848565b60008280156122b657506122b682611862565b806111ed5750821580156111ed57506111ed82612598565b6000806122da84612244565b612340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e4f5f454e544954595f465241474d454e54000000000000000000000000000060448201526064016103ad565b60048351600581111561235557612355612865565b146123bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e4f5f50524f58595f524541445f465241474d454e540000000000000000000060448201526064016103ad565b8460005b84604001518060200190518101906123d89190612c54565b8110156125895760208501516040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063cccf7a8e90602401602060405180830381865afa158015612450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124749190612843565b6124845750600091506125909050565b60208501516040517fb8bc073d0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063b8bc073d90602401600060405180830381865afa1580156124f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261253b91908101906129fb565b80602001905181019061254e9190612c54565b915061255a8287611b8a565b935061256684876122a3565b156125775750600191506125909050565b8061258181612adc565b9150506123c0565b5060019150505b935093915050565b60006001612281565b6040805160a081018252600080825260208201529081016125dd6040805160608101909152806000815260006020820152606060409091015290565b81526020016126076040805160608101909152806000815260006020820152606060409091015290565b8152600060209091015290565b60006020828403121561262657600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461265157600080fd5b919050565b6000806040838503121561266957600080fd5b6126728361262d565b946020939093013593505050565b6000806020838503121561269357600080fd5b823567ffffffffffffffff808211156126ab57600080fd5b818501915085601f8301126126bf57600080fd5b8135818111156126ce57600080fd5b8660208260051b85010111156126e357600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b8181101561272d57835183529284019291840191600101612711565b50909695505050505050565b60006020828403121561274b57600080fd5b6111ed8261262d565b60008083601f84011261276657600080fd5b50813567ffffffffffffffff81111561277e57600080fd5b60208301915083602082850101111561279657600080fd5b9250929050565b600080600080606085870312156127b357600080fd5b6127bc8561262d565b935060208501359250604085013567ffffffffffffffff8111156127df57600080fd5b6127eb87828801612754565b95989497509550505050565b60008060006040848603121561280c57600080fd5b83359250602084013567ffffffffffffffff81111561282a57600080fd5b61283686828701612754565b9497909650939450505050565b60006020828403121561285557600080fd5b815180151581146111ed57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff85811682526080820190600286106128ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b85602084015280851660408401525082606083015295945050505050565b60005b8381101561292357818101518382015260200161290b565b50506000910152565b602081526000825180602084015261294b816040850160208701612908565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156129f3576129f361297d565b604052919050565b600060208284031215612a0d57600080fd5b815167ffffffffffffffff80821115612a2557600080fd5b818401915084601f830112612a3957600080fd5b815181811115612a4b57612a4b61297d565b612a7c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016129ac565b9150808252856020828501011115612a9357600080fd5b612aa4816020840160208601612908565b50949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612b0d57612b0d612aad565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112612b7757600080fd5b9190910192915050565b600060208284031215612b9357600080fd5b8135600681106111ed57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612bd757600080fd5b83018035915067ffffffffffffffff821115612bf257600080fd5b60200191503681900382131561279657600080fd5b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b600060208284031215612c6657600080fd5b5051919050565b60006020808385031215612c8057600080fd5b825167ffffffffffffffff80821115612c9857600080fd5b818501915085601f830112612cac57600080fd5b815181811115612cbe57612cbe61297d565b8060051b9150612ccf8483016129ac565b8181529183018401918481019088841115612ce957600080fd5b938501935b83851015612d0757845182529385019390850190612cee565b98975050505050505050565b818103818111156104ff576104ff612aad565b808201808211156104ff576104ff612aad56fea2646970667358221220d1e8a36cc80e7980bf73f173ae068cf20f4c841b03a0584f27ab6f9832c2bb7464736f6c63430008110033\",\n    \"sourceMap\": \"1597:5812:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2986:85;3058:8;;;;2986:85;;;217:42:69;205:55;;;187:74;;175:2;160:18;2986:85:41;;;;;;;;5313:199;;;;;;:::i;:::-;;:::i;:::-;;1739:30;;;;;;;;;3401:151;;;;;;:::i;:::-;;:::i;5609:115::-;;;;;;:::i;:::-;;:::i;7152:255::-;;;:::i;:::-;;;1549:25:69;;;1537:2;1522:18;7152:255:41;1403:177:69;6431:500:41;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5821:150::-;;;;;;:::i;:::-;;:::i;3989:319::-;;;;;;:::i;:::-;;:::i;2785:91::-;2860:11;;;;2785:91;;4443:259;;;;;;:::i;:::-;;:::i;6200:94::-;;;:::i;4910:263::-;;;;;;:::i;:::-;;:::i;2445:221::-;;;:::i;6998:105::-;;;;;;:::i;:::-;;:::i;:::-;;;4627:14:69;;4620:22;4602:41;;4590:2;4575:18;6998:105:41;4462:187:69;3156:163:41;;;;;;:::i;:::-;;:::i;6068:128::-;;;;;;:::i;:::-;;:::i;5313:199::-;3700:11;;:43;;;;;5402:10;3700:43;;;1549:25:69;;;5402:10:41;3700:11;;;:15;;1522:18:69;;3700:43:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3692:80;;;;;;;5138:2:69;3692:80:41;;;5120:21:69;5177:2;5157:18;;;5150:30;5216:26;5196:18;;;5189:54;5260:18;;3692:80:41;;;;;;;;;5462:11:::1;::::0;5500:6;;5488:10:::1;::::0;5447:39:::1;::::0;5425:82:::1;5462:11;5488:10:::0;5447:14:::1;:39::i;:::-;5425:82;::::0;::::1;::::0;;;::::1;5313:199:::0;;:::o;3401:151::-;3470:8;;3487:59;;3470:8;;;;;:16;;3487:59;;3498:10;;3470:8;;3531:10;;3543:2;;3487:59;;;:::i;:::-;;;;;;;;;;;;;3470:77;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3401:151;;:::o;5609:115::-;5703:11;;5666:7;;5688:31;;5703:11;;5716:2;5688:14;:31::i;:::-;5681:38;5609:115;-1:-1:-1;;5609:115:41:o;7152:255::-;7202:7;7217:17;7237:16;:14;:16::i;:::-;7217:36;;7259:10;7275:112;7286:11;;;;:::i;:::-;;;;7345:9;7328:27;;;;;;8720:19:69;;8764:2;8755:12;;8591:182;7328:27:41;;;;;;;;;;;;;7318:38;;;;;;7310:47;;7305:52;;7372:13;7382:2;7372:9;:13::i;:::-;7275:112;;7400:2;7152:255;-1:-1:-1;;7152:255:41:o;6431:500::-;6518:16;6542:32;6597:19;6577:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6577:47:41;;;;;;;;;;;;;;;;6542:82;;6635:9;6630:259;6646:30;;;6630:259;;;6706:176;;;;;;;;6729:19;;6749:1;6729:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:32;;;;;;;:::i;:::-;6706:176;;;;;;;;:::i;:::-;;;6788:11;;6706:176;;;;;6771:65;;6788:11;;6801:19;;6821:1;6801:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:34;;;6771:16;:65::i;:::-;6706:176;;;;;;6846:19;;6866:1;6846:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:28;;;;;;;:::i;:::-;6706:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6706:176:41;;-1:-1:-1;6691:12:41;;:9;;6701:1;;6691:12;;;;;;:::i;:::-;;;;;;:191;;;;6678:3;;;;;:::i;:::-;;;;6630:259;;;;6901:25;6916:9;6901:14;:25::i;:::-;6894:32;6431:500;-1:-1:-1;;;;6431:500:41:o;5821:150::-;5939:11;;5902:7;;5924:42;;5939:11;;5952:13;5924:14;:42::i;3989:319::-;3700:11;;4130:9;;3700:11;;:15;3716:26;4130:9;604:22:68;;;531:98;3716:26:41;3700:43;;;;;;;;;;;;;1549:25:69;;1537:2;1522:18;;1403:177;3700:43:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3692:80;;;;;;;5138:2:69;3692:80:41;;;5120:21:69;5177:2;5157:18;;;5150:30;5216:26;5196:18;;;5189:54;5260:18;;3692:80:41;4936:348:69;3692:80:41;4155:10:::1;:23;::::0;::::1;;4147:32;;;::::0;::::1;;4189:8;::::0;4185:25:::1;::::0;;;;::::1;::::0;::::1;1549::69::0;;;4189:8:41::1;::::0;;::::1;::::0;4185:17:::1;::::0;1522:18:69;;4185:25:41::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4254:11:41::1;::::0;4290:6;;-1:-1:-1;4221:82:41::1;::::0;;::::1;::::0;-1:-1:-1;4239:38:41::1;::::0;4254:11:::1;4279:9:::0;4239:14:::1;:38::i;:::-;4221:82;4298:4;;4221:82;;;;;;;:::i;:::-;;;;;;;;3989:319:::0;;;;;:::o;4443:259::-;3700:11;;:43;;;;;4557:10;3700:43;;;1549:25:69;;;4557:10:41;3700:11;;;:15;;1522:18:69;;3700:43:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3692:80;;;;;;;5138:2:69;3692:80:41;;;5120:21:69;5177:2;5157:18;;;5150:30;5216:26;5196:18;;;5189:54;5260:18;;3692:80:41;4936:348:69;3692:80:41;4581:8:::1;::::0;4577:25:::1;::::0;;;;::::1;::::0;::::1;1549::69::0;;;4581:8:41::1;::::0;;::::1;::::0;4577:17:::1;::::0;1522:18:69;;4577:25:41::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4646:11:41::1;::::0;4684:6;;-1:-1:-1;4672:10:41::1;::::0;-1:-1:-1;4631:39:41::1;::::0;4613:84:::1;4646:11;4672:10:::0;4631:14:::1;:39::i;:::-;4613:84;4692:4;;4613:84;;;;;;;:::i;:::-;;;;;;;;4443:259:::0;;;;:::o;6200:94::-;6247:7;6273:8;;;;;;;;;;;6269:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6262:27;;6200:94;:::o;4910:263::-;3700:11;;5026:9;;3700:11;;:15;3716:26;5026:9;604:22:68;;;531:98;3716:26:41;3700:43;;;;;;;;;;;;;1549:25:69;;1537:2;1522:18;;1403:177;3700:43:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3692:80;;;;;;;5138:2:69;3692:80:41;;;5120:21:69;5177:2;5157:18;;;5150:30;5216:26;5196:18;;;5189:54;5260:18;;3692:80:41;4936:348:69;3692:80:41;5053:10:::1;:23;::::0;::::1;;5045:32;;;::::0;::::1;;5125:11;::::0;5161:6;;5088:80:::1;::::0;;::::1;::::0;5110:38:::1;::::0;5125:11:::1;5150:9:::0;5110:14:::1;:38::i;:::-;5088:80;::::0;::::1;::::0;;;::::1;4910:263:::0;;;:::o;2445:221::-;2474:11;;:40;;;;;2508:4;2474:40;;;187:74:69;2474:11:41;;;;;:25;;160:18:69;;2474:40:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2520:8:41;;:37;;;;;2551:4;2520:37;;;187:74:69;2520:8:41;;;;;-1:-1:-1;2520:22:41;;-1:-1:-1;160:18:69;;2520:37:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2563:8:41;;2580:80;;2563:8;;;;;-1:-1:-1;2563:16:41;;-1:-1:-1;2580:80:41;;2591:10;;2563:8;;;;540:34:55;;2580:80:41;;;:::i;:::-;;;;;;;;;;;;;2563:98;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2445:221::o;6998:105::-;7054:4;7077:8;;7073:25;;;;;;;;1549::69;;;7077:8:41;;;;;7073:17;;1522:18:69;;7073:25:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3156:163::-;3231:8;;3248:65;;3231:8;;;;;:16;;3248:65;;3259:10;;3231:8;;3295:13;;3310:2;;3248:65;;;:::i;6068:128::-;6172:8;;6135:7;;6157:34;;6172:8;;6182;6157:14;:34::i;1094:217:68:-;1174:7;1195:8;:12;;;1208:21;1224:4;604:22;;;531:98;1208:21;1195:35;;;;;;;;;;;;;1549:25:69;;1537:2;1522:18;;1403:177;1195:35:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1187:70;;;;;;;11071:2:69;1187:70:68;;;11053:21:69;11110:2;11090:18;;;11083:30;11149:24;11129:18;;;11122:52;11191:18;;1187:70:68;10869:346:69;1187:70:68;1268:8;:17;;;1286:21;1302:4;604:22;;;531:98;1286:21;1268:40;;;;;;;;;;;;;1549:25:69;;1537:2;1522:18;;1403:177;1268:40:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1261:47;1094:217;-1:-1:-1;;;1094:217:68:o;741:248::-;860:33;;;;;;;;1549:25:69;;;819:7:68;;;;860:29;;;;;;1522:18:69;;860:33:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;832:61;;905:8;:15;924:1;905:20;897:50;;;;;;;12363:2:69;897:50:68;;;12345:21:69;12402:2;12382:18;;;12375:30;12441:19;12421:18;;;12414:47;12478:18;;897:50:68;12161:341:69;897:50:68;958:28;974:8;983:1;974:11;;;;;;;;:::i;:::-;;;;;;;452:6;361:102;1406:150;1488:10;1522:30;1537:10;1549:2;1522:14;:30::i;3984:3450:32:-;4056:16;4080:18;;:::i;:::-;4237:24:17;4104:44:32;;:10;4154:13;;;:17;;;4233:4;4213:17;;;:24;4269:3109;4289:9;:16;4285:1;:20;4269:3109;;;4320:29;4352:9;4362:1;4352:12;;;;;;;;:::i;:::-;;;;;;;4320:44;;4376:27;4394:8;4376:17;:27::i;:::-;4372:3000;;;4507:19;4485:18;;:41;;;;;;;;:::i;:::-;;4481:69;;4528:11;;;:22;;;4481:69;4586:21;4564:18;;:43;;;;;;;;:::i;:::-;;4560:73;;4609:13;;;:24;;;4560:73;4372:3000;;;4652:1;:17;;;4648:2724;;;4788:28;4807:8;4788:18;:28::i;:::-;4780:66;;;;;;;12709:2:69;4780:66:32;;;12691:21:69;12748:2;12728:18;;;12721:30;12787:27;12767:18;;;12760:55;12832:18;;4780:66:32;12507:349:69;4780:66:32;4876:5;4856:17;;;:25;;;4876:5;4966:18;;:35;;;;;;;;:::i;:::-;;:148;;5059:8;:18;;;:39;;;5099:8;:14;;;5059:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4966:148;;;5014:8;:18;;;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4935:179;;5138:24;5150:11;5138;:24::i;:::-;5125:37;;5188:18;;5172:13;;;;:34;;;;5316:13;;;;:23;;5308:46;;;;;;5307:98;;;5404:1;5370;:13;;;:19;;;5359:42;;;;;;;;;;;;:::i;:::-;:46;5307:98;5303:635;;;5424:11;5419:509;5443:11;:18;5437:3;:24;5419:509;;;5484:30;5517:159;5549:11;5561:3;5549:16;;;;;;;;:::i;:::-;;;;;;;5581:1;:13;;;:23;;;5631:1;:13;;;:19;;;5620:42;;;;;;;;;;;;:::i;:::-;5517:16;:159::i;:::-;5484:192;;5696:18;5691:225;5729:13;:20;5716:10;:33;5691:225;;;5794:76;5819:50;5827:41;;;;;;;;5839:13;5853:10;5839:25;;;;;;;;:::i;:::-;;;;;;;5827:41;;;;5866:1;5827:41;;;452:6:68;361:102;5819:50:32;5794:10;;;:24;:76::i;:::-;5781:89;;5886:13;;;:15;;;;;;:::i;:::-;;;-1:-1:-1;5751:12:32;;;;:::i;:::-;;;;5691:225;;;;5470:458;5463:5;;;;;:::i;:::-;;;;5419:509;;;;5303:635;4671:1275;4648:2724;;;6187:10;;4237:24:17;;6036:23:32;;6155:4;;4582:20:17;;;;6269:985:32;6276:7;6269:985;;;6297:23;6323:20;6335:7;-1:-1:-1;;;;;;;;;;;;;;;;;;579:3:32;448:140;6323:20;6372:10;;6297:46;;-1:-1:-1;6355:14:32;6495:37;6372:10;6523:8;6495:19;:37::i;:::-;6481:51;;6632:46;6650:1;6653:8;6663:6;6671;6632:17;:46::i;:::-;6623:55;;6782:6;6778:144;;;6819:59;6846:31;6854:22;;;;;;;;6866:6;6854:22;;;;6874:1;6854:22;;;452:6:68;361:102;6846:31:32;6819:12;;:26;:59::i;:::-;6804:74;-1:-1:-1;6892:17:32;;;;:::i;:::-;;;;6778:144;7077:71;7097:1;7100:8;7110:6;7118:12;7132:15;7077:19;:71::i;:::-;7219:10;;6494:3:17;6490:14;6477:28;;6471:35;7043:105:32;;-1:-1:-1;7043:105:32;-1:-1:-1;6529:14:17;;;7198:45:32;-1:-1:-1;7198:45:32;-1:-1:-1;6269:985:32;;-1:-1:-1;;;6269:985:32;;-1:-1:-1;;7297:25:32;;;7332:13;;;:31;4648:2724;-1:-1:-1;4307:3:32;;;;:::i;:::-;;;;4269:3109;;;;7391:38;7403:1;:10;;;7415:1;:13;;;7391:11;:38::i;938:180::-;1010:4;1049:19;1027:18;;:41;;;;;;;;:::i;:::-;;:88;;;-1:-1:-1;1094:21:32;1072:43;:18;;:43;;;;;;;;:::i;:::-;;1020:95;938:180;-1:-1:-1;;938:180:32:o;590:172::-;663:4;;680:18;;:35;;;;;;;;:::i;:::-;;:79;;;-1:-1:-1;741:18:32;719:40;;12216:251;4237:24:17;12282:15:32;12349:114;12369:5;:12;12365:1;:16;12349:114;;;12403:53;12422:33;12430:24;;;;;;;;12442:5;12448:1;12442:8;;;;;;;;:::i;12422:33::-;12403:4;;:18;:53::i;:::-;12396:60;-1:-1:-1;12383:3:32;;;;:::i;:::-;;;;12349:114;;;;12216:251;;;:::o;9853:1054::-;9971:16;9999:5;10008:1;9999:10;9995:39;;-1:-1:-1;10018:16:32;;;10032:1;10018:16;;;;;;;;10011:23;;9995:39;10041:31;10075:9;:30;;;10117:6;10106:18;;;;;;1549:25:69;;1537:2;1522:18;;1403:177;10106:18:32;;;;;;;;;;;;;10075:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10041:84;;10135:5;10144:1;10135:10;10131:37;;10154:14;-1:-1:-1;10147:21:32;;10131:37;4237:24:17;10175:28:32;;10281:360;10301:14;:21;10297:1;:25;10281:360;;;10337:33;10373:57;10390:14;10405:1;10390:17;;;;;;;;:::i;:::-;;;;;;;10409:9;10428:1;10420:5;:9;;;;:::i;10373:57::-;10337:93;;10443:9;10438:197;10458:16;:23;10454:1;:27;10438:197;;;10518:77;10550:44;10558:35;;;;;;;;10570:16;10587:1;10570:19;;;;;;;;:::i;10550:44::-;10518:17;;:31;:77::i;:::-;10498:97;-1:-1:-1;10605:21:32;;;;:::i;:::-;;;;10483:3;;;;;:::i;:::-;;;;10438:197;;;;10329:312;10324:3;;;;;:::i;:::-;;;;10281:360;;;;10647:28;10678:75;10690:17;10731:14;:21;10709:19;:43;;;;:::i;:::-;10678:11;:75::i;:::-;10647:106;;10764:9;10759:119;10779:14;:21;10775:1;:25;10759:119;;;10854:14;10869:1;10854:17;;;;;;;;:::i;:::-;;;;;;;10815:11;10849:1;10827:19;:23;;;;:::i;:::-;10815:36;;;;;;;;:::i;:::-;;;;;;;;;;:56;10802:3;;;;:::i;:::-;;;;10759:119;;;-1:-1:-1;10891:11:32;9853:1054;-1:-1:-1;;;;;;;9853:1054:32:o;5475:835:17:-;5555:12;5653:1;5645:4;5641:2;5637:13;5632:3;5628:23;5625:30;5674:1;5669:462;;;;6271:7;6267:2;6263:16;6252:7;6248:2;6244:16;6238:4;6235:26;6232:48;6227:53;;5618:676;;5669:462;5988:7;5902:4;5897:3;5893:14;5841:4;5836:3;5832:14;5827:3;5823:24;5794:172;5766:247;6108:7;6104:2;6100:16;6088:9;6082:4;6078:20;6075:42;6070:47;;5618:676;;5475:835;;;;:::o;1391:843:32:-;1481:4;;1495:18;;:35;;;;;;;;:::i;:::-;;1491:129;;1585:18;;;;:30;;;;;;;;1549:25:69;;;1585:22:32;;;;;;;1522:18:69;;1585:30:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1578:37;;;;1491:129;1650:18;1628;;:40;;;;;;;;:::i;:::-;;1624:192;;1772:18;;;;:38;;;;;;;;1549:25:69;;;1772:30:32;;;;;;;1522:18:69;;1772:38:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:49;;;;;;1743:8;:14;;;1733:25;;;;;;:78;1726:85;;;;1624:192;1846:13;1824:18;;:35;;;;;;;;:::i;:::-;;1820:134;;1919:18;;;;:30;;;;;;;;1549:25:69;;;1919:22:32;;;;;;;1522:18:69;;1919:30:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1918:31;1911:38;;;;1820:134;1984:18;1962;;:40;;;;;;;;:::i;:::-;;1958:196;;2110:18;;;;:38;;;;;;;;1549:25:69;;;2110:30:32;;;;;;;1522:18:69;;2110:38:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2100:49;;;;;;2081:8;:14;;;2071:25;;;;;;:78;;2064:85;;;;1958:196;2166:26;2183:8;2166:16;:26::i;:::-;2158:57;;;;;;;13326:2:69;2158:57:32;;;13308:21:69;13365:2;13345:18;;;13338:30;13404:20;13384:18;;;13377:48;13442:18;;2158:57:32;13124:342:69;2158:57:32;-1:-1:-1;2226:5:32;1391:843;;;;:::o;7508:495::-;7689:11;;;;:21;;;7658:4;;7681:44;;;;;;:98;;;7778:1;7746;:11;;;:17;;;7735:40;;;;;;;;;;;;:::i;:::-;:44;7681:98;:146;;;;;7790:37;7810:6;7818:8;7790:19;:37::i;:::-;7789:38;7681:146;7670:310;;;7843:14;7859:15;7878:55;7903:6;7911:8;7921:1;:11;;;7878:24;:55::i;:::-;7842:91;;;;7945:10;7941:32;;;-1:-1:-1;7964:9:32;-1:-1:-1;7957:16:32;;7941:32;7834:146;;7670:310;-1:-1:-1;7992:6:32;7508:495;-1:-1:-1;;;7508:495:32:o;8108:1346::-;8341:13;;;;:23;;;8301:10;;;;8333:46;;;;;;8332:98;;;8429:1;8395;:13;;;:19;;;8384:42;;;;;;;;;;;;:::i;:::-;:46;8332:98;8328:1077;;;8440:30;8473:125;8499:6;8515:1;:13;;;:23;;;8559:1;:13;;;:19;;;8548:42;;;;;;;;;;;;:::i;8473:125::-;8440:158;;8612:11;8607:792;8631:13;:20;8625:3;:26;8607:792;;;8670:19;8692:13;8706:3;8692:18;;;;;;;;:::i;:::-;;;;;;;8670:40;;8783:16;8802:42;8822:11;8835:8;8802:19;:42::i;:::-;8783:61;;8946:11;8945:12;:60;;;;-1:-1:-1;8969:11:32;;;;:21;;;8961:44;;;;8945:60;:108;;;;;9052:1;9020;:11;;;:17;;;9009:40;;;;;;;;;;;;:::i;:::-;:44;8945:108;8930:308;;;9077:16;9095:15;9114:60;9139:11;9152:8;9162:1;:11;;;9114:24;:60::i;:::-;9076:98;;;;9190:10;9186:41;;;9216:11;9202:25;;9186:41;9064:174;;8930:308;9252:11;9248:143;;;9292:59;9319:31;9327:22;;;;;;;;9339:6;9327:22;;;;9347:1;9327:22;;;452:6:68;361:102;9319:31:32;9292:12;;:26;:59::i;:::-;9277:74;-1:-1:-1;9363:17:32;;;;:::i;:::-;;;;9248:143;8660:739;;8653:5;;;;;:::i;:::-;;;;8607:792;;;;8432:973;8328:1077;-1:-1:-1;9419:12:32;;9433:15;;-1:-1:-1;8108:1346:32;-1:-1:-1;;;8108:1346:32:o;11719:424::-;11794:22;11846:6;11832:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11832:21:32;-1:-1:-1;11824:29:32;-1:-1:-1;11859:29:32;;11876:12;11859:29;11910:4;4582:20:17;;;;;;11895:12:32;11975:164;11982:7;11975:164;;;11999:23;12025:20;12037:7;-1:-1:-1;;;;;;;;;;;;;;;;;;579:3:32;448:140;12025:20;11999:46;;12064:4;:10;;;12053:5;12059:1;12053:8;;;;;;;;:::i;:::-;;;;;;;;;;:21;12082:3;;;;:::i;:::-;6494::17;6490:14;;;6477:28;;;;6471:35;6529:14;;;;-1:-1:-1;6471:35:17;12082:3:32;-1:-1:-1;11975:164:32;;-1:-1:-1;;11975:164:32;;11818:325;;;11719:424;;;;:::o;1120:269::-;1191:4;;1212:18;;:35;;;;;;;;:::i;:::-;;:83;;;-1:-1:-1;1277:18:32;1255;;:40;;;;;;;;:::i;:::-;;1212:83;:126;;;-1:-1:-1;1325:13:32;1303:35;:18;;:35;;;;;;;;:::i;:::-;;1212:126;:174;;;-1:-1:-1;1368:18:32;1346:40;;3394:192;3481:4;3499:6;:38;;;;;3509:28;3528:8;3509:18;:28::i;:::-;3498:85;;;;3544:6;3543:7;:39;;;;;3554:28;3573:8;3554:18;:28::i;2236:858::-;2371:11;2384:15;2413:26;2430:8;2413:16;:26::i;:::-;2405:57;;;;;;;13326:2:69;2405:57:32;;;13308:21:69;13365:2;13345:18;;;13338:30;13404:20;13384:18;;;13377:48;13442:18;;2405:57:32;13124:342:69;2405:57:32;2497:19;2474;;:42;;;;;;;;:::i;:::-;;2466:77;;;;;;;13673:2:69;2466:77:32;;;13655:21:69;13712:2;13692:18;;;13685:30;13751:24;13731:18;;;13724:52;13793:18;;2466:77:32;13471:346:69;2466:77:32;2570:6;2548:19;2581:486;2612:9;:15;;;2601:38;;;;;;;;;;;;:::i;:::-;2597:1;:42;2581:486;;;2727:19;;;;:36;;;;;;;;1549:25:69;;;2727:23:32;;;;;;;1522:18:69;;2727:36:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2722:80;;-1:-1:-1;2789:5:32;;-1:-1:-1;2773:22:32;;-1:-1:-1;2773:22:32;2722:80;2864:19;;;;:44;;;;;;;;1549:25:69;;;2864:31:32;;;;;;;1522:18:69;;2864:44:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2853:67;;;;;;;;;;;;:::i;:::-;2839:81;;2935:42;2955:11;2968:8;2935:19;:42::i;:::-;2926:51;;2988:37;3008:6;3016:8;2988:19;:37::i;:::-;2984:79;;;-1:-1:-1;3051:4:32;;-1:-1:-1;3035:21:32;;-1:-1:-1;3035:21:32;2984:79;2641:3;;;;:::i;:::-;;;;2581:486;;;-1:-1:-1;3086:4:32;;-1:-1:-1;;2236:858:32;;;;;;;:::o;764:172::-;837:4;876:13;854:35;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;272:180:69:-;331:6;384:2;372:9;363:7;359:23;355:32;352:52;;;400:1;397;390:12;352:52;-1:-1:-1;423:23:69;;272:180;-1:-1:-1;272:180:69:o;712:196::-;780:20;;840:42;829:54;;819:65;;809:93;;898:1;895;888:12;809:93;712:196;;;:::o;913:254::-;981:6;989;1042:2;1030:9;1021:7;1017:23;1013:32;1010:52;;;1058:1;1055;1048:12;1010:52;1081:29;1100:9;1081:29;:::i;:::-;1071:39;1157:2;1142:18;;;;1129:32;;-1:-1:-1;;;913:254:69:o;1585:654::-;1710:6;1718;1771:2;1759:9;1750:7;1746:23;1742:32;1739:52;;;1787:1;1784;1777:12;1739:52;1827:9;1814:23;1856:18;1897:2;1889:6;1886:14;1883:34;;;1913:1;1910;1903:12;1883:34;1951:6;1940:9;1936:22;1926:32;;1996:7;1989:4;1985:2;1981:13;1977:27;1967:55;;2018:1;2015;2008:12;1967:55;2058:2;2045:16;2084:2;2076:6;2073:14;2070:34;;;2100:1;2097;2090:12;2070:34;2153:7;2148:2;2138:6;2135:1;2131:14;2127:2;2123:23;2119:32;2116:45;2113:65;;;2174:1;2171;2164:12;2113:65;2205:2;2197:11;;;;;2227:6;;-1:-1:-1;1585:654:69;;-1:-1:-1;;;;1585:654:69:o;2244:632::-;2415:2;2467:21;;;2537:13;;2440:18;;;2559:22;;;2386:4;;2415:2;2638:15;;;;2612:2;2597:18;;;2386:4;2681:169;2695:6;2692:1;2689:13;2681:169;;;2756:13;;2744:26;;2825:15;;;;2790:12;;;;2717:1;2710:9;2681:169;;;-1:-1:-1;2867:3:69;;2244:632;-1:-1:-1;;;;;;2244:632:69:o;2881:186::-;2940:6;2993:2;2981:9;2972:7;2968:23;2964:32;2961:52;;;3009:1;3006;2999:12;2961:52;3032:29;3051:9;3032:29;:::i;3072:347::-;3123:8;3133:6;3187:3;3180:4;3172:6;3168:17;3164:27;3154:55;;3205:1;3202;3195:12;3154:55;-1:-1:-1;3228:20:69;;3271:18;3260:30;;3257:50;;;3303:1;3300;3293:12;3257:50;3340:4;3332:6;3328:17;3316:29;;3392:3;3385:4;3376:6;3368;3364:19;3360:30;3357:39;3354:59;;;3409:1;3406;3399:12;3354:59;3072:347;;;;;:::o;3424:551::-;3512:6;3520;3528;3536;3589:2;3577:9;3568:7;3564:23;3560:32;3557:52;;;3605:1;3602;3595:12;3557:52;3628:29;3647:9;3628:29;:::i;:::-;3618:39;;3704:2;3693:9;3689:18;3676:32;3666:42;;3759:2;3748:9;3744:18;3731:32;3786:18;3778:6;3775:30;3772:50;;;3818:1;3815;3808:12;3772:50;3857:58;3907:7;3898:6;3887:9;3883:22;3857:58;:::i;:::-;3424:551;;;;-1:-1:-1;3934:8:69;-1:-1:-1;;;;3424:551:69:o;3980:477::-;4059:6;4067;4075;4128:2;4116:9;4107:7;4103:23;4099:32;4096:52;;;4144:1;4141;4134:12;4096:52;4180:9;4167:23;4157:33;;4241:2;4230:9;4226:18;4213:32;4268:18;4260:6;4257:30;4254:50;;;4300:1;4297;4290:12;4254:50;4339:58;4389:7;4380:6;4369:9;4365:22;4339:58;:::i;:::-;3980:477;;4416:8;;-1:-1:-1;4313:84:69;;-1:-1:-1;;;;3980:477:69:o;4654:277::-;4721:6;4774:2;4762:9;4753:7;4749:23;4745:32;4742:52;;;4790:1;4787;4780:12;4742:52;4822:9;4816:16;4875:5;4868:13;4861:21;4854:5;4851:32;4841:60;;4897:1;4894;4887:12;5289:184;5341:77;5338:1;5331:88;5438:4;5435:1;5428:15;5462:4;5459:1;5452:15;5478:696;5735:42;5804:15;;;5786:34;;5712:3;5697:19;;;5850:1;5839:13;;5829:201;;5886:77;5883:1;5876:88;5987:4;5984:1;5977:15;6015:4;6012:1;6005:15;5829:201;6066:6;6061:2;6050:9;6046:18;6039:34;6121:2;6113:6;6109:15;6104:2;6093:9;6089:18;6082:43;;6161:6;6156:2;6145:9;6141:18;6134:34;5478:696;;;;;;;:::o;6179:250::-;6264:1;6274:113;6288:6;6285:1;6282:13;6274:113;;;6364:11;;;6358:18;6345:11;;;6338:39;6310:2;6303:10;6274:113;;;-1:-1:-1;;6421:1:69;6403:16;;6396:27;6179:250::o;6434:453::-;6581:2;6570:9;6563:21;6544:4;6613:6;6607:13;6656:6;6651:2;6640:9;6636:18;6629:34;6672:79;6744:6;6739:2;6728:9;6724:18;6719:2;6711:6;6707:15;6672:79;:::i;:::-;6803:2;6791:15;6808:66;6787:88;6772:104;;;;6878:2;6768:113;;6434:453;-1:-1:-1;;6434:453:69:o;6892:184::-;6944:77;6941:1;6934:88;7041:4;7038:1;7031:15;7065:4;7062:1;7055:15;7081:334;7152:2;7146:9;7208:2;7198:13;;7213:66;7194:86;7182:99;;7311:18;7296:34;;7332:22;;;7293:62;7290:88;;;7358:18;;:::i;:::-;7394:2;7387:22;7081:334;;-1:-1:-1;7081:334:69:o;7420:777::-;7499:6;7552:2;7540:9;7531:7;7527:23;7523:32;7520:52;;;7568:1;7565;7558:12;7520:52;7601:9;7595:16;7630:18;7671:2;7663:6;7660:14;7657:34;;;7687:1;7684;7677:12;7657:34;7725:6;7714:9;7710:22;7700:32;;7770:7;7763:4;7759:2;7755:13;7751:27;7741:55;;7792:1;7789;7782:12;7741:55;7821:2;7815:9;7843:2;7839;7836:10;7833:36;;;7849:18;;:::i;:::-;7891:112;7999:2;7930:66;7923:4;7919:2;7915:13;7911:86;7907:95;7891:112;:::i;:::-;7878:125;;8026:2;8019:5;8012:17;8066:7;8061:2;8056;8052;8048:11;8044:20;8041:33;8038:53;;;8087:1;8084;8077:12;8038:53;8100:67;8164:2;8159;8152:5;8148:14;8143:2;8139;8135:11;8100:67;:::i;:::-;-1:-1:-1;8186:5:69;7420:777;-1:-1:-1;;;;7420:777:69:o;8202:184::-;8254:77;8251:1;8244:88;8351:4;8348:1;8341:15;8375:4;8372:1;8365:15;8391:195;8430:3;8461:66;8454:5;8451:77;8448:103;;8531:18;;:::i;:::-;-1:-1:-1;8578:1:69;8567:13;;8391:195::o;8778:184::-;8830:77;8827:1;8820:88;8927:4;8924:1;8917:15;8951:4;8948:1;8941:15;8967:395;9072:4;9130:11;9117:25;9220:66;9209:8;9193:14;9189:29;9185:102;9165:18;9161:127;9151:155;;9302:1;9299;9292:12;9151:155;9323:33;;;;;8967:395;-1:-1:-1;;8967:395:69:o;9367:271::-;9441:6;9494:2;9482:9;9473:7;9469:23;9465:32;9462:52;;;9510:1;9507;9500:12;9462:52;9549:9;9536:23;9588:1;9581:5;9578:12;9568:40;;9604:1;9601;9594:12;9643:580;9720:4;9726:6;9786:11;9773:25;9876:66;9865:8;9849:14;9845:29;9841:102;9821:18;9817:127;9807:155;;9958:1;9955;9948:12;9807:155;9985:33;;10037:20;;;-1:-1:-1;10080:18:69;10069:30;;10066:50;;;10112:1;10109;10102:12;10066:50;10145:4;10133:17;;-1:-1:-1;10176:14:69;10172:27;;;10162:38;;10159:58;;;10213:1;10210;10203:12;10228:447;10385:2;10374:9;10367:21;10424:6;10419:2;10408:9;10404:18;10397:34;10481:6;10473;10468:2;10457:9;10453:18;10440:48;10537:1;10508:22;;;10532:2;10504:31;;;10497:42;;;;10591:2;10579:15;;;10596:66;10575:88;10560:104;10556:113;;10228:447;-1:-1:-1;10228:447:69:o;10680:184::-;10750:6;10803:2;10791:9;10782:7;10778:23;10774:32;10771:52;;;10819:1;10816;10809:12;10771:52;-1:-1:-1;10842:16:69;;10680:184;-1:-1:-1;10680:184:69:o;11220:936::-;11315:6;11346:2;11389;11377:9;11368:7;11364:23;11360:32;11357:52;;;11405:1;11402;11395:12;11357:52;11438:9;11432:16;11467:18;11508:2;11500:6;11497:14;11494:34;;;11524:1;11521;11514:12;11494:34;11562:6;11551:9;11547:22;11537:32;;11607:7;11600:4;11596:2;11592:13;11588:27;11578:55;;11629:1;11626;11619:12;11578:55;11658:2;11652:9;11680:2;11676;11673:10;11670:36;;;11686:18;;:::i;:::-;11732:2;11729:1;11725:10;11715:20;;11755:28;11779:2;11775;11771:11;11755:28;:::i;:::-;11817:15;;;11887:11;;;11883:20;;;11848:12;;;;11915:19;;;11912:39;;;11947:1;11944;11937:12;11912:39;11971:11;;;;11991:135;12007:6;12002:3;11999:15;11991:135;;;12073:10;;12061:23;;12024:12;;;;12104;;;;11991:135;;;12145:5;11220:936;-1:-1:-1;;;;;;;;11220:936:69:o;12861:128::-;12928:9;;;12949:11;;;12946:37;;;12963:18;;:::i;12994:125::-;13059:9;;;13080:10;;;13077:36;;;13093:18;;:::i\",\n    \"linkReferences\": {}\n  },\n  \"methodIdentifiers\": {\n    \"components()\": \"ba62fbe4\",\n    \"getComponent(uint256)\": \"4f27da18\",\n    \"getComponentIdFromAddress(address)\": \"9f54f545\",\n    \"getNumEntities()\": \"d7ecf62b\",\n    \"getSystemAddress(uint256)\": \"fb3ec48b\",\n    \"getUniqueEntityId()\": \"614bfa6e\",\n    \"hasEntity(uint256)\": \"e3d12875\",\n    \"init()\": \"e1c7392a\",\n    \"query((uint8,uint256,bytes)[])\": \"687485a6\",\n    \"register()\": \"1aa3a008\",\n    \"registerComponent(address,uint256)\": \"f3034770\",\n    \"registerComponentValueRemoved(address,uint256)\": \"d803064a\",\n    \"registerComponentValueRemoved(uint256)\": \"0de3b7b5\",\n    \"registerComponentValueSet(address,uint256,bytes)\": \"af104e40\",\n    \"registerComponentValueSet(uint256,bytes)\": \"cfd3c57f\",\n    \"registerSystem(address,uint256)\": \"1ee444b7\",\n    \"systems()\": \"0d59332e\"\n  },\n  \"rawMetadata\": \"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.17+commit.8df45f5f\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"componentId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"component\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"ComponentValueRemoved\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"componentId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"component\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"ComponentValueSet\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"components\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract IUint256Component\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"getComponent\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"componentAddr\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"getComponentIdFromAddress\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"getNumEntities\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"systemId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"getSystemAddress\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"getUniqueEntityId\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"hasEntity\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"init\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"components\\\":[{\\\"internalType\\\":\\\"enum QueryType\\\",\\\"name\\\":\\\"queryType\\\",\\\"type\\\":\\\"uint8\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"componentId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"internalType\\\":\\\"struct WorldQueryFragment[]\\\",\\\"name\\\":\\\"worldQueryFragments\\\",\\\"type\\\":\\\"tuple[]\\\"}],\\\"name\\\":\\\"query\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"register\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract RegisterSystem\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"componentAddr\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"registerComponent\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"registerComponentValueRemoved\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"component\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"registerComponentValueRemoved\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"component\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"registerComponentValueSet\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"entity\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"registerComponentValueSet\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"systemAddr\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"registerSystem\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"systems\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract IUint256Component\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{},\\\"version\\\":1},\\\"userdoc\\\":{\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{\\\"components()\\\":{\\\"notice\\\":\\\"Get the component registry Uint256Component (mapping from component address to component id)\\\"},\\\"getComponent(uint256)\\\":{\\\"notice\\\":\\\"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \\\"},\\\"getComponentIdFromAddress(address)\\\":{\\\"notice\\\":\\\"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \\\"},\\\"getSystemAddress(uint256)\\\":{\\\"notice\\\":\\\"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \\\"},\\\"getUniqueEntityId()\\\":{\\\"notice\\\":\\\"Get a new unique entity ID.\\\"},\\\"hasEntity(uint256)\\\":{\\\"notice\\\":\\\"Check whether an entity exists in this world.\\\"},\\\"init()\\\":{\\\"notice\\\":\\\"Initialize the World. Separated from the constructor to prevent circular dependencies.\\\"},\\\"query((uint8,uint256,bytes)[])\\\":{\\\"notice\\\":\\\"Helper function to execute a query with query fragments referring to a component ID instead of a component address.\\\"},\\\"registerComponent(address,uint256)\\\":{\\\"notice\\\":\\\"Register a new component in this World. ID must be unique.\\\"},\\\"registerComponentValueRemoved(address,uint256)\\\":{\\\"notice\\\":\\\"Deprecated - use registerComponentValueRemoved(entity) instead Register a component value removal. Emits the `ComponentValueRemoved` event for clients to reconstruct the state.\\\"},\\\"registerComponentValueRemoved(uint256)\\\":{\\\"notice\\\":\\\"Register a component value removal. Emits the `ComponentValueRemoved` event for clients to reconstruct the state.\\\"},\\\"registerComponentValueSet(address,uint256,bytes)\\\":{\\\"notice\\\":\\\"Deprecated - use registerComponentValueSet(entity, data) instead Register a component value update. Emits the `ComponentValueSet` event for clients to reconstruct the state.\\\"},\\\"registerComponentValueSet(uint256,bytes)\\\":{\\\"notice\\\":\\\"Register a component value update. Emits the `ComponentValueSet` event for clients to reconstruct the state.\\\"},\\\"registerSystem(address,uint256)\\\":{\\\"notice\\\":\\\"Register a new system in this World. ID must be unique.\\\"},\\\"systems()\\\":{\\\"notice\\\":\\\"Get the system registry Uint256Component (mapping from system address to system id)\\\"}},\\\"notice\\\":\\\"The `World` contract is at the core of every on-chain world. Entities, components and systems are registered in the `World`. Components register updates to their state via the `registerComponentValueSet` and `registerComponentValueRemoved` methods, which emit the `ComponentValueSet` and `ComponentValueRemoved` events respectively. Clients can reconstruct the entire state (of all components) by listening to these two events, instead of having to add a separate getter or event listener for every type of data. (Have a look at the MUD network package for a TypeScript implementation of contract/client state sync.) The `World` is an ownerless and permissionless contract. Anyone can register new components and systems in the world (via the `registerComponent` and `registerSystem` methods). Clients decide which components and systems they care about.\\\",\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"src/World.sol\\\":\\\"World\\\"},\\\"evmVersion\\\":\\\"london\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":true,\\\"runs\\\":1000000},\\\"remappings\\\":[\\\":@rari-capital/=../../node_modules/@rari-capital/\\\",\\\":@solidstate/=../../node_modules/@solidstate/\\\",\\\":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\\\",\\\":base64-sol/=../../node_modules/base64-sol/\\\",\\\":ds-test/=../../node_modules/ds-test/src/\\\",\\\":forge-std/=../../node_modules/forge-std/src/\\\",\\\":hardhat/=../../node_modules/hardhat/\\\",\\\":memmove/=../../node_modules/memmove/src/\\\",\\\":solmate/=../../node_modules/@rari-capital/solmate/src/\\\"]},\\\"sources\\\":{\\\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\\\":{\\\"keccak256\\\":\\\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\\\",\\\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\\\"]},\\\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\\\":{\\\"keccak256\\\":\\\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\\\",\\\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\\\"]},\\\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\\\":{\\\"keccak256\\\":\\\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\\\",\\\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\\\"]},\\\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\\\":{\\\"keccak256\\\":\\\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\\\",\\\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\\\"]},\\\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\\\":{\\\"keccak256\\\":\\\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\\\",\\\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\\\"]},\\\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\\\":{\\\"keccak256\\\":\\\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\\\",\\\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\\\"]},\\\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\\\":{\\\"keccak256\\\":\\\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\\\",\\\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\\\"]},\\\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\\\":{\\\"keccak256\\\":\\\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\\\",\\\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\\\"]},\\\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\\\":{\\\"keccak256\\\":\\\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\\\",\\\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\\\"]},\\\"../../node_modules/memmove/src/Array.sol\\\":{\\\"keccak256\\\":\\\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\\\",\\\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\\\"]},\\\"../../node_modules/memmove/src/LinkedList.sol\\\":{\\\"keccak256\\\":\\\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\\\",\\\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\\\"]},\\\"src/BareComponent.sol\\\":{\\\"keccak256\\\":\\\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\\\",\\\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\\\"]},\\\"src/Component.sol\\\":{\\\"keccak256\\\":\\\"0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a\\\",\\\"dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh\\\"]},\\\"src/LibQuery.sol\\\":{\\\"keccak256\\\":\\\"0x880ef5273d93926a8edb17b0314c5a7368a0da4ea4b818e354c89891b1080ba0\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://6163c65c40133c58326c9890d1db1feb4cb9291c4d15149d801ae52865df9f4c\\\",\\\"dweb:/ipfs/QmdrfbUFc3ApNSYWWv4t7GMbaMwxwpPTJf8SfZHsH3X3Hd\\\"]},\\\"src/LibTypes.sol\\\":{\\\"keccak256\\\":\\\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\\\",\\\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\\\"]},\\\"src/MapSet.sol\\\":{\\\"keccak256\\\":\\\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\\\",\\\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\\\"]},\\\"src/Ownable.sol\\\":{\\\"keccak256\\\":\\\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\\\",\\\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\\\"]},\\\"src/OwnableWritable.sol\\\":{\\\"keccak256\\\":\\\"0x44e1afa8b4b2132122255943deb1ba8787693cd5893876a06643deed3052b859\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://3761f562ad1a9fae0abf914e4e15592fb8b7dd231039448d20ad7dcfabf6de41\\\",\\\"dweb:/ipfs/QmbLN1mfNXYyrc4qxQauvBYTyJu9nR18t9xb54GY8xP3T7\\\"]},\\\"src/OwnableWritableStorage.sol\\\":{\\\"keccak256\\\":\\\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\\\",\\\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\\\"]},\\\"src/Set.sol\\\":{\\\"keccak256\\\":\\\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\\\",\\\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\\\"]},\\\"src/System.sol\\\":{\\\"keccak256\\\":\\\"0xbf4719134350c08ce16bf348792e466ee1571407d8d3a5f0d22add9567cb64cb\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://d4487c51e8c02bdf331e2a3fc5b215015a7ea4e35348f043711e57d86237aeb4\\\",\\\"dweb:/ipfs/QmdRW3S7oasyn3buPqnPG2Q4AUo3w3mpNHUiWTuGMnbbwn\\\"]},\\\"src/World.sol\\\":{\\\"keccak256\\\":\\\"0x5eb54e585f9edeba68519e411e9a73a6d80460b01f87590f2b212f7ac511b9bd\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://6caf469b0a696767bb72288b16d4dca20187daa9261cdca253671489738cf27c\\\",\\\"dweb:/ipfs/QmbEoVs4VUh7uK8LTyS4A6jd9Fkkoix6tWPHAm2DZmkkVX\\\"]},\\\"src/components/Uint256Component.sol\\\":{\\\"keccak256\\\":\\\"0x6f4f16d1a14a8587d9bd21a7f33744d1ffb3cfd5309c6b8229236e5e2d84b465\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://2dde592cc08fb85378b2b4c263434122c4e4a19a10a6a0b5857c48b002571470\\\",\\\"dweb:/ipfs/QmafCQgVugZuVfCNBQaFGFM2Qc9sWML4fG6Pct5ujRXt94\\\"]},\\\"src/constants.sol\\\":{\\\"keccak256\\\":\\\"0x024a3ff3077a272339b7baa96b826fd75f040d7cd2c6e13b9c8cf7ad16f789b8\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://1ddcb26a7703e9b03b34d5465010a4ae5ced137021c94987053544ad1156a644\\\",\\\"dweb:/ipfs/QmYue4gnb8noyoxxTchs5chZji7DKynKMp2x33RgRW6xqZ\\\"]},\\\"src/interfaces/IComponent.sol\\\":{\\\"keccak256\\\":\\\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\\\",\\\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\\\"]},\\\"src/interfaces/IERC173.sol\\\":{\\\"keccak256\\\":\\\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\\\",\\\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\\\"]},\\\"src/interfaces/IEntityContainer.sol\\\":{\\\"keccak256\\\":\\\"0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10\\\",\\\"dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV\\\"]},\\\"src/interfaces/IEntityIndexer.sol\\\":{\\\"keccak256\\\":\\\"0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4\\\",\\\"dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw\\\"]},\\\"src/interfaces/IOwnableWritable.sol\\\":{\\\"keccak256\\\":\\\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\\\",\\\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\\\"]},\\\"src/interfaces/ISystem.sol\\\":{\\\"keccak256\\\":\\\"0xbc1c0b0c72ab5e20ff7eae3cf53627aac367a2f9a65d2e87451a0313869d3bed\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://b2a7c4c30beb9b96c4e8112b9864f7bac5c761e61765e0dc359d926572feaa5a\\\",\\\"dweb:/ipfs/QmVNJbky7itfqBBdDCh8anSWMaHhXs2mKhzuW7hbCVWgj3\\\"]},\\\"src/interfaces/IUint256Component.sol\\\":{\\\"keccak256\\\":\\\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\\\",\\\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\\\"]},\\\"src/interfaces/IWorld.sol\\\":{\\\"keccak256\\\":\\\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\\\",\\\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\\\"]},\\\"src/interfaces/Query.sol\\\":{\\\"keccak256\\\":\\\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\\\",\\\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\\\"]},\\\"src/systems/RegisterSystem.sol\\\":{\\\"keccak256\\\":\\\"0x5b238c1bacaa26480ae434f15754b9ad53856accb46ca41ce769713bbfc73f8f\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://c5449b9bf09030b85130d1fc3de196484d75459bea492175d13d01ec4d11e469\\\",\\\"dweb:/ipfs/QmWPf9LREhwNLn2Bc1MYw9vQM1RN7Dstadh8NYsF5zrPTq\\\"]},\\\"src/utils.sol\\\":{\\\"keccak256\\\":\\\"0x17f7831c03bdd77f0c7d98c94931d830fbbfa1878c365f54b12841c85611e24e\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://6ae566ee03c5050b239277ef4184b9e5dcb332c8cc65b032f8e0d9e46408ea6d\\\",\\\"dweb:/ipfs/QmetdhxahRf7FJk1kn8KgDmizU2zYk3jjt9qo6Gwz2M5YP\\\"]}},\\\"version\\\":1}\",\n  \"metadata\": {\n    \"compiler\": {\n      \"version\": \"0.8.17+commit.8df45f5f\"\n    },\n    \"language\": \"Solidity\",\n    \"output\": {\n      \"abi\": [\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"constructor\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"componentId\",\n              \"type\": \"uint256\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"component\",\n              \"type\": \"address\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\",\n              \"indexed\": true\n            }\n          ],\n          \"type\": \"event\",\n          \"name\": \"ComponentValueRemoved\",\n          \"anonymous\": false\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"componentId\",\n              \"type\": \"uint256\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"component\",\n              \"type\": \"address\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\",\n              \"indexed\": true\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"data\",\n              \"type\": \"bytes\",\n              \"indexed\": false\n            }\n          ],\n          \"type\": \"event\",\n          \"name\": \"ComponentValueSet\",\n          \"anonymous\": false\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"components\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract IUint256Component\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"id\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getComponent\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"componentAddr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getComponentIdFromAddress\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getNumEntities\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"systemId\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getSystemAddress\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"getUniqueEntityId\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"hasEntity\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"init\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"struct WorldQueryFragment[]\",\n              \"name\": \"worldQueryFragments\",\n              \"type\": \"tuple[]\",\n              \"components\": [\n                {\n                  \"internalType\": \"enum QueryType\",\n                  \"name\": \"queryType\",\n                  \"type\": \"uint8\"\n                },\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"componentId\",\n                  \"type\": \"uint256\"\n                },\n                {\n                  \"internalType\": \"bytes\",\n                  \"name\": \"value\",\n                  \"type\": \"bytes\"\n                }\n              ]\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"query\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"\",\n              \"type\": \"uint256[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"register\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract RegisterSystem\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"componentAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"id\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerComponent\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerComponentValueRemoved\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"component\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerComponentValueRemoved\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"component\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"data\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerComponentValueSet\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"entity\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"data\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerComponentValueSet\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"systemAddr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"id\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"registerSystem\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"systems\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract IUint256Component\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        }\n      ],\n      \"devdoc\": {\n        \"kind\": \"dev\",\n        \"methods\": {},\n        \"version\": 1\n      },\n      \"userdoc\": {\n        \"kind\": \"user\",\n        \"methods\": {\n          \"components()\": {\n            \"notice\": \"Get the component registry Uint256Component (mapping from component address to component id)\"\n          },\n          \"getComponent(uint256)\": {\n            \"notice\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n          },\n          \"getComponentIdFromAddress(address)\": {\n            \"notice\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n          },\n          \"getSystemAddress(uint256)\": {\n            \"notice\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n          },\n          \"getUniqueEntityId()\": {\n            \"notice\": \"Get a new unique entity ID.\"\n          },\n          \"hasEntity(uint256)\": {\n            \"notice\": \"Check whether an entity exists in this world.\"\n          },\n          \"init()\": {\n            \"notice\": \"Initialize the World. Separated from the constructor to prevent circular dependencies.\"\n          },\n          \"query((uint8,uint256,bytes)[])\": {\n            \"notice\": \"Helper function to execute a query with query fragments referring to a component ID instead of a component address.\"\n          },\n          \"registerComponent(address,uint256)\": {\n            \"notice\": \"Register a new component in this World. ID must be unique.\"\n          },\n          \"registerComponentValueRemoved(address,uint256)\": {\n            \"notice\": \"Deprecated - use registerComponentValueRemoved(entity) instead Register a component value removal. Emits the `ComponentValueRemoved` event for clients to reconstruct the state.\"\n          },\n          \"registerComponentValueRemoved(uint256)\": {\n            \"notice\": \"Register a component value removal. Emits the `ComponentValueRemoved` event for clients to reconstruct the state.\"\n          },\n          \"registerComponentValueSet(address,uint256,bytes)\": {\n            \"notice\": \"Deprecated - use registerComponentValueSet(entity, data) instead Register a component value update. Emits the `ComponentValueSet` event for clients to reconstruct the state.\"\n          },\n          \"registerComponentValueSet(uint256,bytes)\": {\n            \"notice\": \"Register a component value update. Emits the `ComponentValueSet` event for clients to reconstruct the state.\"\n          },\n          \"registerSystem(address,uint256)\": {\n            \"notice\": \"Register a new system in this World. ID must be unique.\"\n          },\n          \"systems()\": {\n            \"notice\": \"Get the system registry Uint256Component (mapping from system address to system id)\"\n          }\n        },\n        \"version\": 1\n      }\n    },\n    \"settings\": {\n      \"remappings\": [\n        \":@rari-capital/=../../node_modules/@rari-capital/\",\n        \":@solidstate/=../../node_modules/@solidstate/\",\n        \":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\",\n        \":base64-sol/=../../node_modules/base64-sol/\",\n        \":ds-test/=../../node_modules/ds-test/src/\",\n        \":forge-std/=../../node_modules/forge-std/src/\",\n        \":hardhat/=../../node_modules/hardhat/\",\n        \":memmove/=../../node_modules/memmove/src/\",\n        \":solmate/=../../node_modules/@rari-capital/solmate/src/\"\n      ],\n      \"optimizer\": {\n        \"enabled\": true,\n        \"runs\": 1000000\n      },\n      \"metadata\": {\n        \"bytecodeHash\": \"ipfs\"\n      },\n      \"compilationTarget\": {\n        \"src/World.sol\": \"World\"\n      },\n      \"libraries\": {}\n    },\n    \"sources\": {\n      \"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\": {\n        \"keccak256\": \"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\n        \"urls\": [\n          \"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\n          \"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\": {\n        \"keccak256\": \"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\n        \"urls\": [\n          \"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\n          \"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\": {\n        \"keccak256\": \"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\n        \"urls\": [\n          \"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\n          \"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\": {\n        \"keccak256\": \"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\n        \"urls\": [\n          \"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\n          \"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\": {\n        \"keccak256\": \"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\n        \"urls\": [\n          \"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\n          \"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\": {\n        \"keccak256\": \"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\n        \"urls\": [\n          \"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\n          \"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\": {\n        \"keccak256\": \"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\n        \"urls\": [\n          \"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\n          \"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\": {\n        \"keccak256\": \"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\n        \"urls\": [\n          \"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\n          \"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\": {\n        \"keccak256\": \"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\n        \"urls\": [\n          \"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\n          \"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/memmove/src/Array.sol\": {\n        \"keccak256\": \"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\n        \"urls\": [\n          \"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\n          \"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"../../node_modules/memmove/src/LinkedList.sol\": {\n        \"keccak256\": \"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\n        \"urls\": [\n          \"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\n          \"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/BareComponent.sol\": {\n        \"keccak256\": \"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\n        \"urls\": [\n          \"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\n          \"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/Component.sol\": {\n        \"keccak256\": \"0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874\",\n        \"urls\": [\n          \"bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a\",\n          \"dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/LibQuery.sol\": {\n        \"keccak256\": \"0x880ef5273d93926a8edb17b0314c5a7368a0da4ea4b818e354c89891b1080ba0\",\n        \"urls\": [\n          \"bzz-raw://6163c65c40133c58326c9890d1db1feb4cb9291c4d15149d801ae52865df9f4c\",\n          \"dweb:/ipfs/QmdrfbUFc3ApNSYWWv4t7GMbaMwxwpPTJf8SfZHsH3X3Hd\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/LibTypes.sol\": {\n        \"keccak256\": \"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\n        \"urls\": [\n          \"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\n          \"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/MapSet.sol\": {\n        \"keccak256\": \"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\n        \"urls\": [\n          \"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\n          \"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/Ownable.sol\": {\n        \"keccak256\": \"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\n        \"urls\": [\n          \"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\n          \"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/OwnableWritable.sol\": {\n        \"keccak256\": \"0x44e1afa8b4b2132122255943deb1ba8787693cd5893876a06643deed3052b859\",\n        \"urls\": [\n          \"bzz-raw://3761f562ad1a9fae0abf914e4e15592fb8b7dd231039448d20ad7dcfabf6de41\",\n          \"dweb:/ipfs/QmbLN1mfNXYyrc4qxQauvBYTyJu9nR18t9xb54GY8xP3T7\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/OwnableWritableStorage.sol\": {\n        \"keccak256\": \"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\n        \"urls\": [\n          \"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\n          \"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/Set.sol\": {\n        \"keccak256\": \"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\n        \"urls\": [\n          \"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\n          \"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/System.sol\": {\n        \"keccak256\": \"0xbf4719134350c08ce16bf348792e466ee1571407d8d3a5f0d22add9567cb64cb\",\n        \"urls\": [\n          \"bzz-raw://d4487c51e8c02bdf331e2a3fc5b215015a7ea4e35348f043711e57d86237aeb4\",\n          \"dweb:/ipfs/QmdRW3S7oasyn3buPqnPG2Q4AUo3w3mpNHUiWTuGMnbbwn\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/World.sol\": {\n        \"keccak256\": \"0x5eb54e585f9edeba68519e411e9a73a6d80460b01f87590f2b212f7ac511b9bd\",\n        \"urls\": [\n          \"bzz-raw://6caf469b0a696767bb72288b16d4dca20187daa9261cdca253671489738cf27c\",\n          \"dweb:/ipfs/QmbEoVs4VUh7uK8LTyS4A6jd9Fkkoix6tWPHAm2DZmkkVX\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/components/Uint256Component.sol\": {\n        \"keccak256\": \"0x6f4f16d1a14a8587d9bd21a7f33744d1ffb3cfd5309c6b8229236e5e2d84b465\",\n        \"urls\": [\n          \"bzz-raw://2dde592cc08fb85378b2b4c263434122c4e4a19a10a6a0b5857c48b002571470\",\n          \"dweb:/ipfs/QmafCQgVugZuVfCNBQaFGFM2Qc9sWML4fG6Pct5ujRXt94\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/constants.sol\": {\n        \"keccak256\": \"0x024a3ff3077a272339b7baa96b826fd75f040d7cd2c6e13b9c8cf7ad16f789b8\",\n        \"urls\": [\n          \"bzz-raw://1ddcb26a7703e9b03b34d5465010a4ae5ced137021c94987053544ad1156a644\",\n          \"dweb:/ipfs/QmYue4gnb8noyoxxTchs5chZji7DKynKMp2x33RgRW6xqZ\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IComponent.sol\": {\n        \"keccak256\": \"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\n        \"urls\": [\n          \"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\n          \"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IERC173.sol\": {\n        \"keccak256\": \"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\n        \"urls\": [\n          \"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\n          \"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IEntityContainer.sol\": {\n        \"keccak256\": \"0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8\",\n        \"urls\": [\n          \"bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10\",\n          \"dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IEntityIndexer.sol\": {\n        \"keccak256\": \"0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5\",\n        \"urls\": [\n          \"bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4\",\n          \"dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IOwnableWritable.sol\": {\n        \"keccak256\": \"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\n        \"urls\": [\n          \"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\n          \"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/ISystem.sol\": {\n        \"keccak256\": \"0xbc1c0b0c72ab5e20ff7eae3cf53627aac367a2f9a65d2e87451a0313869d3bed\",\n        \"urls\": [\n          \"bzz-raw://b2a7c4c30beb9b96c4e8112b9864f7bac5c761e61765e0dc359d926572feaa5a\",\n          \"dweb:/ipfs/QmVNJbky7itfqBBdDCh8anSWMaHhXs2mKhzuW7hbCVWgj3\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IUint256Component.sol\": {\n        \"keccak256\": \"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\n        \"urls\": [\n          \"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\n          \"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/IWorld.sol\": {\n        \"keccak256\": \"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\n        \"urls\": [\n          \"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\n          \"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/Query.sol\": {\n        \"keccak256\": \"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\n        \"urls\": [\n          \"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\n          \"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/systems/RegisterSystem.sol\": {\n        \"keccak256\": \"0x5b238c1bacaa26480ae434f15754b9ad53856accb46ca41ce769713bbfc73f8f\",\n        \"urls\": [\n          \"bzz-raw://c5449b9bf09030b85130d1fc3de196484d75459bea492175d13d01ec4d11e469\",\n          \"dweb:/ipfs/QmWPf9LREhwNLn2Bc1MYw9vQM1RN7Dstadh8NYsF5zrPTq\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/utils.sol\": {\n        \"keccak256\": \"0x17f7831c03bdd77f0c7d98c94931d830fbbfa1878c365f54b12841c85611e24e\",\n        \"urls\": [\n          \"bzz-raw://6ae566ee03c5050b239277ef4184b9e5dcb332c8cc65b032f8e0d9e46408ea6d\",\n          \"dweb:/ipfs/QmetdhxahRf7FJk1kn8KgDmizU2zYk3jjt9qo6Gwz2M5YP\"\n        ],\n        \"license\": \"MIT\"\n      }\n    },\n    \"version\": 1\n  },\n  \"ast\": {\n    \"absolutePath\": \"src/World.sol\",\n    \"id\": 15742,\n    \"exportedSymbols\": {\n      \"IUint256Component\": [\n        16077\n      ],\n      \"IWorld\": [\n        16190\n      ],\n      \"LibQuery\": [\n        14570\n      ],\n      \"QueryFragment\": [\n        16212\n      ],\n      \"RegisterSystem\": [\n        16449\n      ],\n      \"RegisterType\": [\n        16233\n      ],\n      \"Set\": [\n        15152\n      ],\n      \"Uint256Component\": [\n        15864\n      ],\n      \"World\": [\n        15741\n      ],\n      \"WorldQueryFragment\": [\n        16091\n      ],\n      \"addressToEntity\": [\n        21254\n      ],\n      \"componentsComponentId\": [\n        15874\n      ],\n      \"entityToAddress\": [\n        21237\n      ],\n      \"getAddressById\": [\n        21290\n      ],\n      \"getComponentById\": [\n        21339\n      ],\n      \"getIdByAddress\": [\n        21319\n      ],\n      \"registerSystemId\": [\n        16241\n      ],\n      \"systemsComponentId\": [\n        15882\n      ]\n    },\n    \"nodeType\": \"SourceUnit\",\n    \"src\": \"32:7378:41\",\n    \"nodes\": [\n      {\n        \"id\": 15205,\n        \"nodeType\": \"PragmaDirective\",\n        \"src\": \"32:24:41\",\n        \"nodes\": [],\n        \"literals\": [\n          \"solidity\",\n          \">=\",\n          \"0.8\",\n          \".0\"\n        ]\n      },\n      {\n        \"id\": 15207,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"58:32:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/Set.sol\",\n        \"file\": \"./Set.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 15153,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15206,\n              \"name\": \"Set\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 15152,\n              \"src\": \"67:3:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15209,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"91:42:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/LibQuery.sol\",\n        \"file\": \"./LibQuery.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 14571,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15208,\n              \"name\": \"LibQuery\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 14570,\n              \"src\": \"100:8:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15212,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"134:69:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/interfaces/IWorld.sol\",\n        \"file\": \"./interfaces/IWorld.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 16191,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15210,\n              \"name\": \"IWorld\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16190,\n              \"src\": \"143:6:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 15211,\n              \"name\": \"WorldQueryFragment\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16091,\n              \"src\": \"151:18:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15214,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"204:55:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/interfaces/Query.sol\",\n        \"file\": \"./interfaces/Query.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 16213,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15213,\n              \"name\": \"QueryFragment\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16212,\n              \"src\": \"213:13:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15216,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"260:71:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/interfaces/IUint256Component.sol\",\n        \"file\": \"./interfaces/IUint256Component.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 16078,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15215,\n              \"name\": \"IUint256Component\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16077,\n              \"src\": \"269:17:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15218,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"332:69:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/components/Uint256Component.sol\",\n        \"file\": \"./components/Uint256Component.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 15865,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15217,\n              \"name\": \"Uint256Component\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 15864,\n              \"src\": \"341:16:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15224,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"402:113:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/utils.sol\",\n        \"file\": \"./utils.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 21478,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15219,\n              \"name\": \"addressToEntity\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 21254,\n              \"src\": \"411:15:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 15220,\n              \"name\": \"entityToAddress\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 21237,\n              \"src\": \"428:15:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 15221,\n              \"name\": \"getIdByAddress\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 21319,\n              \"src\": \"445:14:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 15222,\n              \"name\": \"getAddressById\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 21290,\n              \"src\": \"461:14:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 15223,\n              \"name\": \"getComponentById\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 21339,\n              \"src\": \"477:16:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15227,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"516:76:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/constants.sol\",\n        \"file\": \"./constants.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 15883,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15225,\n              \"name\": \"componentsComponentId\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 15874,\n              \"src\": \"525:21:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 15226,\n              \"name\": \"systemsComponentId\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 15882,\n              \"src\": \"548:18:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15231,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"593:100:41\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/systems/RegisterSystem.sol\",\n        \"file\": \"./systems/RegisterSystem.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 15742,\n        \"sourceUnit\": 16450,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 15228,\n              \"name\": \"RegisterSystem\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16449,\n              \"src\": \"602:14:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 15229,\n              \"name\": \"ID\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16241,\n              \"src\": \"618:2:41\",\n              \"typeDescriptions\": {}\n            },\n            \"local\": \"registerSystemId\",\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 15230,\n              \"name\": \"RegisterType\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 16233,\n              \"src\": \"642:12:41\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 15741,\n        \"nodeType\": \"ContractDefinition\",\n        \"src\": \"1597:5812:41\",\n        \"nodes\": [\n          {\n            \"id\": 15241,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"1626:32:41\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"mutability\": \"mutable\",\n            \"name\": \"entities\",\n            \"nameLocation\": \"1638:8:41\",\n            \"scope\": 15741,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n              \"typeString\": \"contract Set\"\n            },\n            \"typeName\": {\n              \"id\": 15236,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 15235,\n                \"name\": \"Set\",\n                \"nameLocations\": [\n                  \"1626:3:41\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 15152,\n                \"src\": \"1626:3:41\"\n              },\n              \"referencedDeclaration\": 15152,\n              \"src\": \"1626:3:41\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                \"typeString\": \"contract Set\"\n              }\n            },\n            \"value\": {\n              \"arguments\": [],\n              \"expression\": {\n                \"argumentTypes\": [],\n                \"id\": 15239,\n                \"isConstant\": false,\n                \"isLValue\": false,\n                \"isPure\": false,\n                \"lValueRequested\": false,\n                \"nodeType\": \"NewExpression\",\n                \"src\": \"1649:7:41\",\n                \"typeDescriptions\": {\n                  \"typeIdentifier\": \"t_function_creation_nonpayable$__$returns$_t_contract$_Set_$15152_$\",\n                  \"typeString\": \"function () returns (contract Set)\"\n                },\n                \"typeName\": {\n                  \"id\": 15238,\n                  \"nodeType\": \"UserDefinedTypeName\",\n                  \"pathNode\": {\n                    \"id\": 15237,\n                    \"name\": \"Set\",\n                    \"nameLocations\": [\n                      \"1653:3:41\"\n                    ],\n                    \"nodeType\": \"IdentifierPath\",\n                    \"referencedDeclaration\": 15152,\n                    \"src\": \"1653:3:41\"\n                  },\n                  \"referencedDeclaration\": 15152,\n                  \"src\": \"1653:3:41\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                    \"typeString\": \"contract Set\"\n                  }\n                }\n              },\n              \"id\": 15240,\n              \"isConstant\": false,\n              \"isLValue\": false,\n              \"isPure\": false,\n              \"kind\": \"functionCall\",\n              \"lValueRequested\": false,\n              \"nameLocations\": [],\n              \"names\": [],\n              \"nodeType\": \"FunctionCall\",\n              \"src\": \"1649:9:41\",\n              \"tryCall\": false,\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                \"typeString\": \"contract Set\"\n              }\n            },\n            \"visibility\": \"private\"\n          },\n          {\n            \"id\": 15244,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"1662:36:41\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"mutability\": \"mutable\",\n            \"name\": \"_components\",\n            \"nameLocation\": \"1687:11:41\",\n            \"scope\": 15741,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n              \"typeString\": \"contract Uint256Component\"\n            },\n            \"typeName\": {\n              \"id\": 15243,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 15242,\n                \"name\": \"Uint256Component\",\n                \"nameLocations\": [\n                  \"1662:16:41\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 15864,\n                \"src\": \"1662:16:41\"\n              },\n              \"referencedDeclaration\": 15864,\n              \"src\": \"1662:16:41\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                \"typeString\": \"contract Uint256Component\"\n              }\n            },\n            \"visibility\": \"private\"\n          },\n          {\n            \"id\": 15247,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"1702:33:41\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"mutability\": \"mutable\",\n            \"name\": \"_systems\",\n            \"nameLocation\": \"1727:8:41\",\n            \"scope\": 15741,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n              \"typeString\": \"contract Uint256Component\"\n            },\n            \"typeName\": {\n              \"id\": 15246,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 15245,\n                \"name\": \"Uint256Component\",\n                \"nameLocations\": [\n                  \"1702:16:41\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 15864,\n                \"src\": \"1702:16:41\"\n              },\n              \"referencedDeclaration\": 15864,\n              \"src\": \"1702:16:41\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                \"typeString\": \"contract Uint256Component\"\n              }\n            },\n            \"visibility\": \"private\"\n          },\n          {\n            \"id\": 15250,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"1739:30:41\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"functionSelector\": \"1aa3a008\",\n            \"mutability\": \"mutable\",\n            \"name\": \"register\",\n            \"nameLocation\": \"1761:8:41\",\n            \"scope\": 15741,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n              \"typeString\": \"contract RegisterSystem\"\n            },\n            \"typeName\": {\n              \"id\": 15249,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 15248,\n                \"name\": \"RegisterSystem\",\n                \"nameLocations\": [\n                  \"1739:14:41\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 16449,\n                \"src\": \"1739:14:41\"\n              },\n              \"referencedDeclaration\": 16449,\n              \"src\": \"1739:14:41\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                \"typeString\": \"contract RegisterSystem\"\n              }\n            },\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15260,\n            \"nodeType\": \"EventDefinition\",\n            \"src\": \"1774:116:41\",\n            \"nodes\": [],\n            \"anonymous\": false,\n            \"eventSelector\": \"6ac31c38682e0128240cf68316d7ae751020d8f74c614e2a30278afcec8a6073\",\n            \"name\": \"ComponentValueSet\",\n            \"nameLocation\": \"1780:17:41\",\n            \"parameters\": {\n              \"id\": 15259,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15252,\n                  \"indexed\": true,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"componentId\",\n                  \"nameLocation\": \"1814:11:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15260,\n                  \"src\": \"1798:27:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15251,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1798:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15254,\n                  \"indexed\": true,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"component\",\n                  \"nameLocation\": \"1843:9:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15260,\n                  \"src\": \"1827:25:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15253,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1827:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15256,\n                  \"indexed\": true,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"1870:6:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15260,\n                  \"src\": \"1854:22:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15255,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1854:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15258,\n                  \"indexed\": false,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"data\",\n                  \"nameLocation\": \"1884:4:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15260,\n                  \"src\": \"1878:10:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15257,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1878:5:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1797:92:41\"\n            }\n          },\n          {\n            \"id\": 15268,\n            \"nodeType\": \"EventDefinition\",\n            \"src\": \"1893:108:41\",\n            \"nodes\": [],\n            \"anonymous\": false,\n            \"eventSelector\": \"6dd56823030ae6d8ae09cbfb8972c4e9494e67b209c4ab6300c21d73e269b350\",\n            \"name\": \"ComponentValueRemoved\",\n            \"nameLocation\": \"1899:21:41\",\n            \"parameters\": {\n              \"id\": 15267,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15262,\n                  \"indexed\": true,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"componentId\",\n                  \"nameLocation\": \"1937:11:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15268,\n                  \"src\": \"1921:27:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15261,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1921:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15264,\n                  \"indexed\": true,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"component\",\n                  \"nameLocation\": \"1966:9:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15268,\n                  \"src\": \"1950:25:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15263,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1950:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15266,\n                  \"indexed\": true,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"1993:6:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15268,\n                  \"src\": \"1977:22:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15265,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1977:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1920:80:41\"\n            }\n          },\n          {\n            \"id\": 15326,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2005:327:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15325,\n              \"nodeType\": \"Block\",\n              \"src\": \"2019:313:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"id\": 15281,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 15271,\n                      \"name\": \"_components\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15244,\n                      \"src\": \"2025:11:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                        \"typeString\": \"contract Uint256Component\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"arguments\": [\n                        {\n                          \"arguments\": [\n                            {\n                              \"hexValue\": \"30\",\n                              \"id\": 15277,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": true,\n                              \"kind\": \"number\",\n                              \"lValueRequested\": false,\n                              \"nodeType\": \"Literal\",\n                              \"src\": \"2068:1:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_rational_0_by_1\",\n                                \"typeString\": \"int_const 0\"\n                              },\n                              \"value\": \"0\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_rational_0_by_1\",\n                                \"typeString\": \"int_const 0\"\n                              }\n                            ],\n                            \"id\": 15276,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"lValueRequested\": false,\n                            \"nodeType\": \"ElementaryTypeNameExpression\",\n                            \"src\": \"2060:7:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_address_$\",\n                              \"typeString\": \"type(address)\"\n                            },\n                            \"typeName\": {\n                              \"id\": 15275,\n                              \"name\": \"address\",\n                              \"nodeType\": \"ElementaryTypeName\",\n                              \"src\": \"2060:7:41\",\n                              \"typeDescriptions\": {}\n                            }\n                          },\n                          \"id\": 15278,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"kind\": \"typeConversion\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"2060:10:41\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        },\n                        {\n                          \"id\": 15279,\n                          \"name\": \"componentsComponentId\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15874,\n                          \"src\": \"2072:21:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        }\n                      ],\n                      \"expression\": {\n                        \"argumentTypes\": [\n                          {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          },\n                          {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        ],\n                        \"id\": 15274,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"NewExpression\",\n                        \"src\": \"2039:20:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Uint256Component_$15864_$\",\n                          \"typeString\": \"function (address,uint256) returns (contract Uint256Component)\"\n                        },\n                        \"typeName\": {\n                          \"id\": 15273,\n                          \"nodeType\": \"UserDefinedTypeName\",\n                          \"pathNode\": {\n                            \"id\": 15272,\n                            \"name\": \"Uint256Component\",\n                            \"nameLocations\": [\n                              \"2043:16:41\"\n                            ],\n                            \"nodeType\": \"IdentifierPath\",\n                            \"referencedDeclaration\": 15864,\n                            \"src\": \"2043:16:41\"\n                          },\n                          \"referencedDeclaration\": 15864,\n                          \"src\": \"2043:16:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                            \"typeString\": \"contract Uint256Component\"\n                          }\n                        }\n                      },\n                      \"id\": 15280,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"2039:55:41\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                        \"typeString\": \"contract Uint256Component\"\n                      }\n                    },\n                    \"src\": \"2025:69:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                      \"typeString\": \"contract Uint256Component\"\n                    }\n                  },\n                  \"id\": 15282,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2025:69:41\"\n                },\n                {\n                  \"expression\": {\n                    \"id\": 15293,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 15283,\n                      \"name\": \"_systems\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15247,\n                      \"src\": \"2100:8:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                        \"typeString\": \"contract Uint256Component\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"arguments\": [\n                        {\n                          \"arguments\": [\n                            {\n                              \"hexValue\": \"30\",\n                              \"id\": 15289,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": true,\n                              \"kind\": \"number\",\n                              \"lValueRequested\": false,\n                              \"nodeType\": \"Literal\",\n                              \"src\": \"2140:1:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_rational_0_by_1\",\n                                \"typeString\": \"int_const 0\"\n                              },\n                              \"value\": \"0\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_rational_0_by_1\",\n                                \"typeString\": \"int_const 0\"\n                              }\n                            ],\n                            \"id\": 15288,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"lValueRequested\": false,\n                            \"nodeType\": \"ElementaryTypeNameExpression\",\n                            \"src\": \"2132:7:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_address_$\",\n                              \"typeString\": \"type(address)\"\n                            },\n                            \"typeName\": {\n                              \"id\": 15287,\n                              \"name\": \"address\",\n                              \"nodeType\": \"ElementaryTypeName\",\n                              \"src\": \"2132:7:41\",\n                              \"typeDescriptions\": {}\n                            }\n                          },\n                          \"id\": 15290,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"kind\": \"typeConversion\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"2132:10:41\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        },\n                        {\n                          \"id\": 15291,\n                          \"name\": \"systemsComponentId\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15882,\n                          \"src\": \"2144:18:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        }\n                      ],\n                      \"expression\": {\n                        \"argumentTypes\": [\n                          {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          },\n                          {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        ],\n                        \"id\": 15286,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"NewExpression\",\n                        \"src\": \"2111:20:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Uint256Component_$15864_$\",\n                          \"typeString\": \"function (address,uint256) returns (contract Uint256Component)\"\n                        },\n                        \"typeName\": {\n                          \"id\": 15285,\n                          \"nodeType\": \"UserDefinedTypeName\",\n                          \"pathNode\": {\n                            \"id\": 15284,\n                            \"name\": \"Uint256Component\",\n                            \"nameLocations\": [\n                              \"2115:16:41\"\n                            ],\n                            \"nodeType\": \"IdentifierPath\",\n                            \"referencedDeclaration\": 15864,\n                            \"src\": \"2115:16:41\"\n                          },\n                          \"referencedDeclaration\": 15864,\n                          \"src\": \"2115:16:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                            \"typeString\": \"contract Uint256Component\"\n                          }\n                        }\n                      },\n                      \"id\": 15292,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"2111:52:41\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                        \"typeString\": \"contract Uint256Component\"\n                      }\n                    },\n                    \"src\": \"2100:63:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                      \"typeString\": \"contract Uint256Component\"\n                    }\n                  },\n                  \"id\": 15294,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2100:63:41\"\n                },\n                {\n                  \"expression\": {\n                    \"id\": 15305,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 15295,\n                      \"name\": \"register\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15250,\n                      \"src\": \"2169:8:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                        \"typeString\": \"contract RegisterSystem\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"arguments\": [\n                        {\n                          \"id\": 15299,\n                          \"name\": \"this\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": -28,\n                          \"src\": \"2199:4:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_World_$15741\",\n                            \"typeString\": \"contract World\"\n                          }\n                        },\n                        {\n                          \"arguments\": [\n                            {\n                              \"id\": 15302,\n                              \"name\": \"_components\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 15244,\n                              \"src\": \"2213:11:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                                \"typeString\": \"contract Uint256Component\"\n                              }\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                                \"typeString\": \"contract Uint256Component\"\n                              }\n                            ],\n                            \"id\": 15301,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"lValueRequested\": false,\n                            \"nodeType\": \"ElementaryTypeNameExpression\",\n                            \"src\": \"2205:7:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_address_$\",\n                              \"typeString\": \"type(address)\"\n                            },\n                            \"typeName\": {\n                              \"id\": 15300,\n                              \"name\": \"address\",\n                              \"nodeType\": \"ElementaryTypeName\",\n                              \"src\": \"2205:7:41\",\n                              \"typeDescriptions\": {}\n                            }\n                          },\n                          \"id\": 15303,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"kind\": \"typeConversion\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"2205:20:41\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        }\n                      ],\n                      \"expression\": {\n                        \"argumentTypes\": [\n                          {\n                            \"typeIdentifier\": \"t_contract$_World_$15741\",\n                            \"typeString\": \"contract World\"\n                          },\n                          {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        ],\n                        \"id\": 15298,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"NewExpression\",\n                        \"src\": \"2180:18:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_creation_nonpayable$_t_contract$_IWorld_$16190_$_t_address_$returns$_t_contract$_RegisterSystem_$16449_$\",\n                          \"typeString\": \"function (contract IWorld,address) returns (contract RegisterSystem)\"\n                        },\n                        \"typeName\": {\n                          \"id\": 15297,\n                          \"nodeType\": \"UserDefinedTypeName\",\n                          \"pathNode\": {\n                            \"id\": 15296,\n                            \"name\": \"RegisterSystem\",\n                            \"nameLocations\": [\n                              \"2184:14:41\"\n                            ],\n                            \"nodeType\": \"IdentifierPath\",\n                            \"referencedDeclaration\": 16449,\n                            \"src\": \"2184:14:41\"\n                          },\n                          \"referencedDeclaration\": 16449,\n                          \"src\": \"2184:14:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                            \"typeString\": \"contract RegisterSystem\"\n                          }\n                        }\n                      },\n                      \"id\": 15304,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"2180:46:41\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                        \"typeString\": \"contract RegisterSystem\"\n                      }\n                    },\n                    \"src\": \"2169:57:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                      \"typeString\": \"contract RegisterSystem\"\n                    }\n                  },\n                  \"id\": 15306,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2169:57:41\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 15312,\n                            \"name\": \"register\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15250,\n                            \"src\": \"2265:8:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                              \"typeString\": \"contract RegisterSystem\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                              \"typeString\": \"contract RegisterSystem\"\n                            }\n                          ],\n                          \"id\": 15311,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"2257:7:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_address_$\",\n                            \"typeString\": \"type(address)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 15310,\n                            \"name\": \"address\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"2257:7:41\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 15313,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2257:17:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 15307,\n                        \"name\": \"_systems\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15247,\n                        \"src\": \"2232:8:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        }\n                      },\n                      \"id\": 15309,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2241:15:41\",\n                      \"memberName\": \"authorizeWriter\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 14891,\n                      \"src\": \"2232:24:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_address_$returns$__$\",\n                        \"typeString\": \"function (address) external\"\n                      }\n                    },\n                    \"id\": 15314,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2232:43:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15315,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2232:43:41\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 15321,\n                            \"name\": \"register\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15250,\n                            \"src\": \"2317:8:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                              \"typeString\": \"contract RegisterSystem\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                              \"typeString\": \"contract RegisterSystem\"\n                            }\n                          ],\n                          \"id\": 15320,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"2309:7:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_address_$\",\n                            \"typeString\": \"type(address)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 15319,\n                            \"name\": \"address\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"2309:7:41\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 15322,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2309:17:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 15316,\n                        \"name\": \"_components\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15244,\n                        \"src\": \"2281:11:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        }\n                      },\n                      \"id\": 15318,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2293:15:41\",\n                      \"memberName\": \"authorizeWriter\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 14891,\n                      \"src\": \"2281:27:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_address_$returns$__$\",\n                        \"typeString\": \"function (address) external\"\n                      }\n                    },\n                    \"id\": 15323,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2281:46:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15324,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2281:46:41\"\n                }\n              ]\n            },\n            \"implemented\": true,\n            \"kind\": \"constructor\",\n            \"modifiers\": [],\n            \"name\": \"\",\n            \"nameLocation\": \"-1:-1:-1\",\n            \"parameters\": {\n              \"id\": 15269,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2016:2:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15270,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2019:0:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15366,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2445:221:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15365,\n              \"nodeType\": \"Block\",\n              \"src\": \"2468:198:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 15335,\n                            \"name\": \"this\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -28,\n                            \"src\": \"2508:4:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_World_$15741\",\n                              \"typeString\": \"contract World\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_World_$15741\",\n                              \"typeString\": \"contract World\"\n                            }\n                          ],\n                          \"id\": 15334,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"2500:7:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_address_$\",\n                            \"typeString\": \"type(address)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 15333,\n                            \"name\": \"address\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"2500:7:41\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 15336,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2500:13:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 15330,\n                        \"name\": \"_components\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15244,\n                        \"src\": \"2474:11:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        }\n                      },\n                      \"id\": 15332,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2486:13:41\",\n                      \"memberName\": \"registerWorld\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 12368,\n                      \"src\": \"2474:25:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_address_$returns$__$\",\n                        \"typeString\": \"function (address) external\"\n                      }\n                    },\n                    \"id\": 15337,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2474:40:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15338,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2474:40:41\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 15344,\n                            \"name\": \"this\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -28,\n                            \"src\": \"2551:4:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_World_$15741\",\n                              \"typeString\": \"contract World\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_World_$15741\",\n                              \"typeString\": \"contract World\"\n                            }\n                          ],\n                          \"id\": 15343,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"2543:7:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_address_$\",\n                            \"typeString\": \"type(address)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 15342,\n                            \"name\": \"address\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"2543:7:41\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 15345,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2543:13:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 15339,\n                        \"name\": \"_systems\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15247,\n                        \"src\": \"2520:8:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        }\n                      },\n                      \"id\": 15341,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2529:13:41\",\n                      \"memberName\": \"registerWorld\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 12368,\n                      \"src\": \"2520:22:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_address_$returns$__$\",\n                        \"typeString\": \"function (address) external\"\n                      }\n                    },\n                    \"id\": 15346,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2520:37:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15347,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2520:37:41\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"expression\": {\n                              \"id\": 15353,\n                              \"name\": \"msg\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -15,\n                              \"src\": \"2591:3:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_magic_message\",\n                                \"typeString\": \"msg\"\n                              }\n                            },\n                            \"id\": 15354,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"2595:6:41\",\n                            \"memberName\": \"sender\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"src\": \"2591:10:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          },\n                          {\n                            \"expression\": {\n                              \"id\": 15355,\n                              \"name\": \"RegisterType\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 16233,\n                              \"src\": \"2603:12:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_type$_t_enum$_RegisterType_$16233_$\",\n                                \"typeString\": \"type(enum RegisterType)\"\n                              }\n                            },\n                            \"id\": 15356,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"2616:6:41\",\n                            \"memberName\": \"System\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"referencedDeclaration\": 16232,\n                            \"src\": \"2603:19:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_enum$_RegisterType_$16233\",\n                              \"typeString\": \"enum RegisterType\"\n                            }\n                          },\n                          {\n                            \"arguments\": [\n                              {\n                                \"id\": 15359,\n                                \"name\": \"register\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": 15250,\n                                \"src\": \"2632:8:41\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                                  \"typeString\": \"contract RegisterSystem\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                                  \"typeString\": \"contract RegisterSystem\"\n                                }\n                              ],\n                              \"id\": 15358,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": true,\n                              \"lValueRequested\": false,\n                              \"nodeType\": \"ElementaryTypeNameExpression\",\n                              \"src\": \"2624:7:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_type$_t_address_$\",\n                                \"typeString\": \"type(address)\"\n                              },\n                              \"typeName\": {\n                                \"id\": 15357,\n                                \"name\": \"address\",\n                                \"nodeType\": \"ElementaryTypeName\",\n                                \"src\": \"2624:7:41\",\n                                \"typeDescriptions\": {}\n                              }\n                            },\n                            \"id\": 15360,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"typeConversion\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"2624:17:41\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          },\n                          {\n                            \"id\": 15361,\n                            \"name\": \"registerSystemId\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 16241,\n                            \"src\": \"2643:16:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_enum$_RegisterType_$16233\",\n                              \"typeString\": \"enum RegisterType\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"id\": 15351,\n                            \"name\": \"abi\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -1,\n                            \"src\": \"2580:3:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_magic_abi\",\n                              \"typeString\": \"abi\"\n                            }\n                          },\n                          \"id\": 15352,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"2584:6:41\",\n                          \"memberName\": \"encode\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"src\": \"2580:10:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$\",\n                            \"typeString\": \"function () pure returns (bytes memory)\"\n                          }\n                        },\n                        \"id\": 15362,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2580:80:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 15348,\n                        \"name\": \"register\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15250,\n                        \"src\": \"2563:8:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                          \"typeString\": \"contract RegisterSystem\"\n                        }\n                      },\n                      \"id\": 15350,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2572:7:41\",\n                      \"memberName\": \"execute\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 16448,\n                      \"src\": \"2563:16:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$\",\n                        \"typeString\": \"function (bytes memory) external returns (bytes memory)\"\n                      }\n                    },\n                    \"id\": 15363,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2563:98:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                      \"typeString\": \"bytes memory\"\n                    }\n                  },\n                  \"id\": 15364,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2563:98:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16189\n            ],\n            \"documentation\": {\n              \"id\": 15327,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2336:106:41\",\n              \"text\": \" Initialize the World.\\n Separated from the constructor to prevent circular dependencies.\"\n            },\n            \"functionSelector\": \"e1c7392a\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"init\",\n            \"nameLocation\": \"2454:4:41\",\n            \"parameters\": {\n              \"id\": 15328,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2458:2:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15329,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2468:0:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15376,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2785:91:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15375,\n              \"nodeType\": \"Block\",\n              \"src\": \"2847:29:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"id\": 15373,\n                    \"name\": \"_components\",\n                    \"nodeType\": \"Identifier\",\n                    \"overloadedDeclarations\": [],\n                    \"referencedDeclaration\": 15244,\n                    \"src\": \"2860:11:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                      \"typeString\": \"contract Uint256Component\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15372,\n                  \"id\": 15374,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"2853:18:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16097\n            ],\n            \"documentation\": {\n              \"id\": 15367,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2670:112:41\",\n              \"text\": \" Get the component registry Uint256Component\\n (mapping from component address to component id)\"\n            },\n            \"functionSelector\": \"ba62fbe4\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"components\",\n            \"nameLocation\": \"2794:10:41\",\n            \"parameters\": {\n              \"id\": 15368,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2804:2:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15372,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15371,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15376,\n                  \"src\": \"2828:17:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IUint256Component_$16077\",\n                    \"typeString\": \"contract IUint256Component\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15370,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 15369,\n                      \"name\": \"IUint256Component\",\n                      \"nameLocations\": [\n                        \"2828:17:41\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 16077,\n                      \"src\": \"2828:17:41\"\n                    },\n                    \"referencedDeclaration\": 16077,\n                    \"src\": \"2828:17:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IUint256Component_$16077\",\n                      \"typeString\": \"contract IUint256Component\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"2827:19:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15386,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2986:85:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15385,\n              \"nodeType\": \"Block\",\n              \"src\": \"3045:26:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"id\": 15383,\n                    \"name\": \"_systems\",\n                    \"nodeType\": \"Identifier\",\n                    \"overloadedDeclarations\": [],\n                    \"referencedDeclaration\": 15247,\n                    \"src\": \"3058:8:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                      \"typeString\": \"contract Uint256Component\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15382,\n                  \"id\": 15384,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"3051:15:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16103\n            ],\n            \"documentation\": {\n              \"id\": 15377,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2880:103:41\",\n              \"text\": \" Get the system registry Uint256Component\\n (mapping from system address to system id)\"\n            },\n            \"functionSelector\": \"0d59332e\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"systems\",\n            \"nameLocation\": \"2995:7:41\",\n            \"parameters\": {\n              \"id\": 15378,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"3002:2:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15382,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15381,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15386,\n                  \"src\": \"3026:17:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IUint256Component_$16077\",\n                    \"typeString\": \"contract IUint256Component\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15380,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 15379,\n                      \"name\": \"IUint256Component\",\n                      \"nameLocations\": [\n                        \"3026:17:41\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 16077,\n                      \"src\": \"3026:17:41\"\n                    },\n                    \"referencedDeclaration\": 16077,\n                    \"src\": \"3026:17:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IUint256Component_$16077\",\n                      \"typeString\": \"contract IUint256Component\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3025:19:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15409,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3156:163:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15408,\n              \"nodeType\": \"Block\",\n              \"src\": \"3225:94:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"expression\": {\n                              \"id\": 15399,\n                              \"name\": \"msg\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -15,\n                              \"src\": \"3259:3:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_magic_message\",\n                                \"typeString\": \"msg\"\n                              }\n                            },\n                            \"id\": 15400,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"3263:6:41\",\n                            \"memberName\": \"sender\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"src\": \"3259:10:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          },\n                          {\n                            \"expression\": {\n                              \"id\": 15401,\n                              \"name\": \"RegisterType\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 16233,\n                              \"src\": \"3271:12:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_type$_t_enum$_RegisterType_$16233_$\",\n                                \"typeString\": \"type(enum RegisterType)\"\n                              }\n                            },\n                            \"id\": 15402,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"3284:9:41\",\n                            \"memberName\": \"Component\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"referencedDeclaration\": 16231,\n                            \"src\": \"3271:22:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_enum$_RegisterType_$16233\",\n                              \"typeString\": \"enum RegisterType\"\n                            }\n                          },\n                          {\n                            \"id\": 15403,\n                            \"name\": \"componentAddr\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15389,\n                            \"src\": \"3295:13:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          },\n                          {\n                            \"id\": 15404,\n                            \"name\": \"id\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15391,\n                            \"src\": \"3310:2:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_enum$_RegisterType_$16233\",\n                              \"typeString\": \"enum RegisterType\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"id\": 15397,\n                            \"name\": \"abi\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -1,\n                            \"src\": \"3248:3:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_magic_abi\",\n                              \"typeString\": \"abi\"\n                            }\n                          },\n                          \"id\": 15398,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"3252:6:41\",\n                          \"memberName\": \"encode\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"src\": \"3248:10:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$\",\n                            \"typeString\": \"function () pure returns (bytes memory)\"\n                          }\n                        },\n                        \"id\": 15405,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"3248:65:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 15394,\n                        \"name\": \"register\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15250,\n                        \"src\": \"3231:8:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                          \"typeString\": \"contract RegisterSystem\"\n                        }\n                      },\n                      \"id\": 15396,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3240:7:41\",\n                      \"memberName\": \"execute\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 16448,\n                      \"src\": \"3231:16:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$\",\n                        \"typeString\": \"function (bytes memory) external returns (bytes memory)\"\n                      }\n                    },\n                    \"id\": 15406,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3231:83:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                      \"typeString\": \"bytes memory\"\n                    }\n                  },\n                  \"id\": 15407,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3231:83:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16110\n            ],\n            \"documentation\": {\n              \"id\": 15387,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"3075:78:41\",\n              \"text\": \" Register a new component in this World.\\n ID must be unique.\"\n            },\n            \"functionSelector\": \"f3034770\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"registerComponent\",\n            \"nameLocation\": \"3165:17:41\",\n            \"parameters\": {\n              \"id\": 15392,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15389,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"componentAddr\",\n                  \"nameLocation\": \"3191:13:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15409,\n                  \"src\": \"3183:21:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15388,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3183:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15391,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"id\",\n                  \"nameLocation\": \"3214:2:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15409,\n                  \"src\": \"3206:10:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15390,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3206:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3182:35:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15393,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"3225:0:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15432,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3401:151:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15431,\n              \"nodeType\": \"Block\",\n              \"src\": \"3464:88:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"expression\": {\n                              \"id\": 15422,\n                              \"name\": \"msg\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -15,\n                              \"src\": \"3498:3:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_magic_message\",\n                                \"typeString\": \"msg\"\n                              }\n                            },\n                            \"id\": 15423,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"3502:6:41\",\n                            \"memberName\": \"sender\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"src\": \"3498:10:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          },\n                          {\n                            \"expression\": {\n                              \"id\": 15424,\n                              \"name\": \"RegisterType\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 16233,\n                              \"src\": \"3510:12:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_type$_t_enum$_RegisterType_$16233_$\",\n                                \"typeString\": \"type(enum RegisterType)\"\n                              }\n                            },\n                            \"id\": 15425,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"3523:6:41\",\n                            \"memberName\": \"System\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"referencedDeclaration\": 16232,\n                            \"src\": \"3510:19:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_enum$_RegisterType_$16233\",\n                              \"typeString\": \"enum RegisterType\"\n                            }\n                          },\n                          {\n                            \"id\": 15426,\n                            \"name\": \"systemAddr\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15412,\n                            \"src\": \"3531:10:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          },\n                          {\n                            \"id\": 15427,\n                            \"name\": \"id\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15414,\n                            \"src\": \"3543:2:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_enum$_RegisterType_$16233\",\n                              \"typeString\": \"enum RegisterType\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"id\": 15420,\n                            \"name\": \"abi\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -1,\n                            \"src\": \"3487:3:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_magic_abi\",\n                              \"typeString\": \"abi\"\n                            }\n                          },\n                          \"id\": 15421,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"3491:6:41\",\n                          \"memberName\": \"encode\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"src\": \"3487:10:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$\",\n                            \"typeString\": \"function () pure returns (bytes memory)\"\n                          }\n                        },\n                        \"id\": 15428,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"3487:59:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 15417,\n                        \"name\": \"register\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15250,\n                        \"src\": \"3470:8:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_RegisterSystem_$16449\",\n                          \"typeString\": \"contract RegisterSystem\"\n                        }\n                      },\n                      \"id\": 15419,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3479:7:41\",\n                      \"memberName\": \"execute\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 16448,\n                      \"src\": \"3470:16:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$\",\n                        \"typeString\": \"function (bytes memory) external returns (bytes memory)\"\n                      }\n                    },\n                    \"id\": 15429,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3470:77:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                      \"typeString\": \"bytes memory\"\n                    }\n                  },\n                  \"id\": 15430,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3470:77:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16131\n            ],\n            \"documentation\": {\n              \"id\": 15410,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"3323:75:41\",\n              \"text\": \" Register a new system in this World.\\n ID must be unique.\"\n            },\n            \"functionSelector\": \"1ee444b7\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"registerSystem\",\n            \"nameLocation\": \"3410:14:41\",\n            \"parameters\": {\n              \"id\": 15415,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15412,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"systemAddr\",\n                  \"nameLocation\": \"3433:10:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15432,\n                  \"src\": \"3425:18:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15411,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3425:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15414,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"id\",\n                  \"nameLocation\": \"3453:2:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15432,\n                  \"src\": \"3445:10:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15413,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3445:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3424:32:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15416,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"3464:0:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15449,\n            \"nodeType\": \"ModifierDefinition\",\n            \"src\": \"3631:153:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15448,\n              \"nodeType\": \"Block\",\n              \"src\": \"3686:98:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [\n                              {\n                                \"id\": 15441,\n                                \"name\": \"component\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": 15435,\n                                \"src\": \"3732:9:41\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_address\",\n                                  \"typeString\": \"address\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_address\",\n                                  \"typeString\": \"address\"\n                                }\n                              ],\n                              \"id\": 15440,\n                              \"name\": \"addressToEntity\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 21254,\n                              \"src\": \"3716:15:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_internal_pure$_t_address_$returns$_t_uint256_$\",\n                                \"typeString\": \"function (address) pure returns (uint256)\"\n                              }\n                            },\n                            \"id\": 15442,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"3716:26:41\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"id\": 15438,\n                            \"name\": \"_components\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15244,\n                            \"src\": \"3700:11:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            }\n                          },\n                          \"id\": 15439,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"3712:3:41\",\n                          \"memberName\": \"has\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"referencedDeclaration\": 12581,\n                          \"src\": \"3700:15:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_external_view$_t_uint256_$returns$_t_bool_$\",\n                            \"typeString\": \"function (uint256) view external returns (bool)\"\n                          }\n                        },\n                        \"id\": 15443,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"3700:43:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bool\",\n                          \"typeString\": \"bool\"\n                        }\n                      },\n                      {\n                        \"hexValue\": \"636f6d706f6e656e74206e6f742072656769737465726564\",\n                        \"id\": 15444,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": true,\n                        \"kind\": \"string\",\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"Literal\",\n                        \"src\": \"3745:26:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_stringliteral_5727e039034a4314d3425cca06c2299c4d2b694e041c8512dc0e0f0d86950a39\",\n                          \"typeString\": \"literal_string \\\"component not registered\\\"\"\n                        },\n                        \"value\": \"component not registered\"\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bool\",\n                          \"typeString\": \"bool\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_stringliteral_5727e039034a4314d3425cca06c2299c4d2b694e041c8512dc0e0f0d86950a39\",\n                          \"typeString\": \"literal_string \\\"component not registered\\\"\"\n                        }\n                      ],\n                      \"id\": 15437,\n                      \"name\": \"require\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [\n                        -18,\n                        -18\n                      ],\n                      \"referencedDeclaration\": -18,\n                      \"src\": \"3692:7:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        \"typeString\": \"function (bool,string memory) pure\"\n                      }\n                    },\n                    \"id\": 15445,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3692:80:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15446,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3692:80:41\"\n                },\n                {\n                  \"id\": 15447,\n                  \"nodeType\": \"PlaceholderStatement\",\n                  \"src\": \"3778:1:41\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 15433,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"3556:72:41\",\n              \"text\": \" Reverts if the component is not registered in this World.\"\n            },\n            \"name\": \"requireComponentRegistered\",\n            \"nameLocation\": \"3640:26:41\",\n            \"parameters\": {\n              \"id\": 15436,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15435,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"component\",\n                  \"nameLocation\": \"3675:9:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15449,\n                  \"src\": \"3667:17:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15434,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3667:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3666:19:41\"\n            },\n            \"virtual\": false,\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 15487,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3989:319:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15486,\n              \"nodeType\": \"Block\",\n              \"src\": \"4141:167:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"commonType\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        \"id\": 15466,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"leftExpression\": {\n                          \"expression\": {\n                            \"id\": 15463,\n                            \"name\": \"msg\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -15,\n                            \"src\": \"4155:3:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_magic_message\",\n                              \"typeString\": \"msg\"\n                            }\n                          },\n                          \"id\": 15464,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"4159:6:41\",\n                          \"memberName\": \"sender\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"src\": \"4155:10:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        },\n                        \"nodeType\": \"BinaryOperation\",\n                        \"operator\": \"==\",\n                        \"rightExpression\": {\n                          \"id\": 15465,\n                          \"name\": \"component\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15452,\n                          \"src\": \"4169:9:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        },\n                        \"src\": \"4155:23:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bool\",\n                          \"typeString\": \"bool\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bool\",\n                          \"typeString\": \"bool\"\n                        }\n                      ],\n                      \"id\": 15462,\n                      \"name\": \"require\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [\n                        -18,\n                        -18\n                      ],\n                      \"referencedDeclaration\": -18,\n                      \"src\": \"4147:7:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_require_pure$_t_bool_$returns$__$\",\n                        \"typeString\": \"function (bool) pure\"\n                      }\n                    },\n                    \"id\": 15467,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4147:32:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15468,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"4147:32:41\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 15473,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15454,\n                        \"src\": \"4203:6:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [\n                          {\n                            \"id\": 15470,\n                            \"name\": \"entities\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15241,\n                            \"src\": \"4189:8:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                              \"typeString\": \"contract Set\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                              \"typeString\": \"contract Set\"\n                            }\n                          ],\n                          \"id\": 15469,\n                          \"name\": \"Set\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15152,\n                          \"src\": \"4185:3:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_contract$_Set_$15152_$\",\n                            \"typeString\": \"type(contract Set)\"\n                          }\n                        },\n                        \"id\": 15471,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4185:13:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                          \"typeString\": \"contract Set\"\n                        }\n                      },\n                      \"id\": 15472,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"4199:3:41\",\n                      \"memberName\": \"add\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 15026,\n                      \"src\": \"4185:17:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256) external\"\n                      }\n                    },\n                    \"id\": 15474,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4185:25:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15475,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"4185:25:41\"\n                },\n                {\n                  \"eventCall\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 15478,\n                            \"name\": \"_components\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15244,\n                            \"src\": \"4254:11:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            }\n                          },\n                          {\n                            \"id\": 15479,\n                            \"name\": \"component\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15452,\n                            \"src\": \"4267:9:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          ],\n                          \"id\": 15477,\n                          \"name\": \"getIdByAddress\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 21319,\n                          \"src\": \"4239:14:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IUint256Component_$16077_$_t_address_$returns$_t_uint256_$\",\n                            \"typeString\": \"function (contract IUint256Component,address) view returns (uint256)\"\n                          }\n                        },\n                        \"id\": 15480,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4239:38:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 15481,\n                        \"name\": \"component\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15452,\n                        \"src\": \"4279:9:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      {\n                        \"id\": 15482,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15454,\n                        \"src\": \"4290:6:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 15483,\n                        \"name\": \"data\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15456,\n                        \"src\": \"4298:4:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_calldata_ptr\",\n                          \"typeString\": \"bytes calldata\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_bytes_calldata_ptr\",\n                          \"typeString\": \"bytes calldata\"\n                        }\n                      ],\n                      \"id\": 15476,\n                      \"name\": \"ComponentValueSet\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15260,\n                      \"src\": \"4221:17:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$\",\n                        \"typeString\": \"function (uint256,address,uint256,bytes memory)\"\n                      }\n                    },\n                    \"id\": 15484,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4221:82:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15485,\n                  \"nodeType\": \"EmitStatement\",\n                  \"src\": \"4216:87:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16140\n            ],\n            \"documentation\": {\n              \"id\": 15450,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"3788:198:41\",\n              \"text\": \" Deprecated - use registerComponentValueSet(entity, data) instead\\n Register a component value update.\\n Emits the `ComponentValueSet` event for clients to reconstruct the state.\"\n            },\n            \"functionSelector\": \"af104e40\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [\n              {\n                \"arguments\": [\n                  {\n                    \"id\": 15459,\n                    \"name\": \"component\",\n                    \"nodeType\": \"Identifier\",\n                    \"overloadedDeclarations\": [],\n                    \"referencedDeclaration\": 15452,\n                    \"src\": \"4130:9:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  }\n                ],\n                \"id\": 15460,\n                \"kind\": \"modifierInvocation\",\n                \"modifierName\": {\n                  \"id\": 15458,\n                  \"name\": \"requireComponentRegistered\",\n                  \"nameLocations\": [\n                    \"4103:26:41\"\n                  ],\n                  \"nodeType\": \"IdentifierPath\",\n                  \"referencedDeclaration\": 15449,\n                  \"src\": \"4103:26:41\"\n                },\n                \"nodeType\": \"ModifierInvocation\",\n                \"src\": \"4103:37:41\"\n              }\n            ],\n            \"name\": \"registerComponentValueSet\",\n            \"nameLocation\": \"3998:25:41\",\n            \"parameters\": {\n              \"id\": 15457,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15452,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"component\",\n                  \"nameLocation\": \"4037:9:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15487,\n                  \"src\": \"4029:17:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15451,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4029:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15454,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"4060:6:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15487,\n                  \"src\": \"4052:14:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15453,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4052:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15456,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"data\",\n                  \"nameLocation\": \"4087:4:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15487,\n                  \"src\": \"4072:19:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"calldata\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_calldata_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15455,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4072:5:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4023:72:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15461,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"4141:0:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15519,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"4443:259:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15518,\n              \"nodeType\": \"Block\",\n              \"src\": \"4571:131:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 15503,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15490,\n                        \"src\": \"4595:6:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [\n                          {\n                            \"id\": 15500,\n                            \"name\": \"entities\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15241,\n                            \"src\": \"4581:8:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                              \"typeString\": \"contract Set\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                              \"typeString\": \"contract Set\"\n                            }\n                          ],\n                          \"id\": 15499,\n                          \"name\": \"Set\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15152,\n                          \"src\": \"4577:3:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_contract$_Set_$15152_$\",\n                            \"typeString\": \"type(contract Set)\"\n                          }\n                        },\n                        \"id\": 15501,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4577:13:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                          \"typeString\": \"contract Set\"\n                        }\n                      },\n                      \"id\": 15502,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"4591:3:41\",\n                      \"memberName\": \"add\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 15026,\n                      \"src\": \"4577:17:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256) external\"\n                      }\n                    },\n                    \"id\": 15504,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4577:25:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15505,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"4577:25:41\"\n                },\n                {\n                  \"eventCall\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 15508,\n                            \"name\": \"_components\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15244,\n                            \"src\": \"4646:11:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            }\n                          },\n                          {\n                            \"expression\": {\n                              \"id\": 15509,\n                              \"name\": \"msg\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -15,\n                              \"src\": \"4659:3:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_magic_message\",\n                                \"typeString\": \"msg\"\n                              }\n                            },\n                            \"id\": 15510,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"4663:6:41\",\n                            \"memberName\": \"sender\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"src\": \"4659:10:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          ],\n                          \"id\": 15507,\n                          \"name\": \"getIdByAddress\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 21319,\n                          \"src\": \"4631:14:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IUint256Component_$16077_$_t_address_$returns$_t_uint256_$\",\n                            \"typeString\": \"function (contract IUint256Component,address) view returns (uint256)\"\n                          }\n                        },\n                        \"id\": 15511,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4631:39:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"expression\": {\n                          \"id\": 15512,\n                          \"name\": \"msg\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": -15,\n                          \"src\": \"4672:3:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_magic_message\",\n                            \"typeString\": \"msg\"\n                          }\n                        },\n                        \"id\": 15513,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"memberLocation\": \"4676:6:41\",\n                        \"memberName\": \"sender\",\n                        \"nodeType\": \"MemberAccess\",\n                        \"src\": \"4672:10:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      {\n                        \"id\": 15514,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15490,\n                        \"src\": \"4684:6:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 15515,\n                        \"name\": \"data\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15492,\n                        \"src\": \"4692:4:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_calldata_ptr\",\n                          \"typeString\": \"bytes calldata\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_bytes_calldata_ptr\",\n                          \"typeString\": \"bytes calldata\"\n                        }\n                      ],\n                      \"id\": 15506,\n                      \"name\": \"ComponentValueSet\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15260,\n                      \"src\": \"4613:17:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$\",\n                        \"typeString\": \"function (uint256,address,uint256,bytes memory)\"\n                      }\n                    },\n                    \"id\": 15516,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4613:84:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15517,\n                  \"nodeType\": \"EmitStatement\",\n                  \"src\": \"4608:89:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16147\n            ],\n            \"documentation\": {\n              \"id\": 15488,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"4312:128:41\",\n              \"text\": \" Register a component value update.\\n Emits the `ComponentValueSet` event for clients to reconstruct the state.\"\n            },\n            \"functionSelector\": \"cfd3c57f\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [\n              {\n                \"arguments\": [\n                  {\n                    \"expression\": {\n                      \"id\": 15495,\n                      \"name\": \"msg\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": -15,\n                      \"src\": \"4557:3:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_magic_message\",\n                        \"typeString\": \"msg\"\n                      }\n                    },\n                    \"id\": 15496,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"memberLocation\": \"4561:6:41\",\n                    \"memberName\": \"sender\",\n                    \"nodeType\": \"MemberAccess\",\n                    \"src\": \"4557:10:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  }\n                ],\n                \"id\": 15497,\n                \"kind\": \"modifierInvocation\",\n                \"modifierName\": {\n                  \"id\": 15494,\n                  \"name\": \"requireComponentRegistered\",\n                  \"nameLocations\": [\n                    \"4530:26:41\"\n                  ],\n                  \"nodeType\": \"IdentifierPath\",\n                  \"referencedDeclaration\": 15449,\n                  \"src\": \"4530:26:41\"\n                },\n                \"nodeType\": \"ModifierInvocation\",\n                \"src\": \"4530:38:41\"\n              }\n            ],\n            \"name\": \"registerComponentValueSet\",\n            \"nameLocation\": \"4452:25:41\",\n            \"parameters\": {\n              \"id\": 15493,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15490,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"4486:6:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15519,\n                  \"src\": \"4478:14:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15489,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4478:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15492,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"data\",\n                  \"nameLocation\": \"4509:4:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15519,\n                  \"src\": \"4494:19:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"calldata\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_calldata_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15491,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4494:5:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4477:37:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15498,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"4571:0:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15547,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"4910:263:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15546,\n              \"nodeType\": \"Block\",\n              \"src\": \"5039:134:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"commonType\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        \"id\": 15534,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"leftExpression\": {\n                          \"expression\": {\n                            \"id\": 15531,\n                            \"name\": \"msg\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -15,\n                            \"src\": \"5053:3:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_magic_message\",\n                              \"typeString\": \"msg\"\n                            }\n                          },\n                          \"id\": 15532,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"5057:6:41\",\n                          \"memberName\": \"sender\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"src\": \"5053:10:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        },\n                        \"nodeType\": \"BinaryOperation\",\n                        \"operator\": \"==\",\n                        \"rightExpression\": {\n                          \"id\": 15533,\n                          \"name\": \"component\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15522,\n                          \"src\": \"5067:9:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        },\n                        \"src\": \"5053:23:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bool\",\n                          \"typeString\": \"bool\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bool\",\n                          \"typeString\": \"bool\"\n                        }\n                      ],\n                      \"id\": 15530,\n                      \"name\": \"require\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [\n                        -18,\n                        -18\n                      ],\n                      \"referencedDeclaration\": -18,\n                      \"src\": \"5045:7:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_require_pure$_t_bool_$returns$__$\",\n                        \"typeString\": \"function (bool) pure\"\n                      }\n                    },\n                    \"id\": 15535,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5045:32:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15536,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"5045:32:41\"\n                },\n                {\n                  \"eventCall\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 15539,\n                            \"name\": \"_components\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15244,\n                            \"src\": \"5125:11:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            }\n                          },\n                          {\n                            \"id\": 15540,\n                            \"name\": \"component\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15522,\n                            \"src\": \"5138:9:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          ],\n                          \"id\": 15538,\n                          \"name\": \"getIdByAddress\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 21319,\n                          \"src\": \"5110:14:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IUint256Component_$16077_$_t_address_$returns$_t_uint256_$\",\n                            \"typeString\": \"function (contract IUint256Component,address) view returns (uint256)\"\n                          }\n                        },\n                        \"id\": 15541,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"5110:38:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 15542,\n                        \"name\": \"component\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15522,\n                        \"src\": \"5150:9:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      {\n                        \"id\": 15543,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15524,\n                        \"src\": \"5161:6:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 15537,\n                      \"name\": \"ComponentValueRemoved\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15268,\n                      \"src\": \"5088:21:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256,address,uint256)\"\n                      }\n                    },\n                    \"id\": 15544,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5088:80:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15545,\n                  \"nodeType\": \"EmitStatement\",\n                  \"src\": \"5083:85:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16154\n            ],\n            \"documentation\": {\n              \"id\": 15520,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"4706:201:41\",\n              \"text\": \" Deprecated - use registerComponentValueRemoved(entity) instead\\n Register a component value removal.\\n Emits the `ComponentValueRemoved` event for clients to reconstruct the state.\"\n            },\n            \"functionSelector\": \"d803064a\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [\n              {\n                \"arguments\": [\n                  {\n                    \"id\": 15527,\n                    \"name\": \"component\",\n                    \"nodeType\": \"Identifier\",\n                    \"overloadedDeclarations\": [],\n                    \"referencedDeclaration\": 15522,\n                    \"src\": \"5026:9:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  }\n                ],\n                \"id\": 15528,\n                \"kind\": \"modifierInvocation\",\n                \"modifierName\": {\n                  \"id\": 15526,\n                  \"name\": \"requireComponentRegistered\",\n                  \"nameLocations\": [\n                    \"4999:26:41\"\n                  ],\n                  \"nodeType\": \"IdentifierPath\",\n                  \"referencedDeclaration\": 15449,\n                  \"src\": \"4999:26:41\"\n                },\n                \"nodeType\": \"ModifierInvocation\",\n                \"src\": \"4999:37:41\"\n              }\n            ],\n            \"name\": \"registerComponentValueRemoved\",\n            \"nameLocation\": \"4919:29:41\",\n            \"parameters\": {\n              \"id\": 15525,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15522,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"component\",\n                  \"nameLocation\": \"4957:9:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15547,\n                  \"src\": \"4949:17:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15521,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4949:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 15524,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"4976:6:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15547,\n                  \"src\": \"4968:14:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15523,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4968:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4948:35:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15529,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"5039:0:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15569,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"5313:199:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15568,\n              \"nodeType\": \"Block\",\n              \"src\": \"5414:98:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"eventCall\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 15559,\n                            \"name\": \"_components\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15244,\n                            \"src\": \"5462:11:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            }\n                          },\n                          {\n                            \"expression\": {\n                              \"id\": 15560,\n                              \"name\": \"msg\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": -15,\n                              \"src\": \"5475:3:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_magic_message\",\n                                \"typeString\": \"msg\"\n                              }\n                            },\n                            \"id\": 15561,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"lValueRequested\": false,\n                            \"memberLocation\": \"5479:6:41\",\n                            \"memberName\": \"sender\",\n                            \"nodeType\": \"MemberAccess\",\n                            \"src\": \"5475:10:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                              \"typeString\": \"contract Uint256Component\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          ],\n                          \"id\": 15558,\n                          \"name\": \"getIdByAddress\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 21319,\n                          \"src\": \"5447:14:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IUint256Component_$16077_$_t_address_$returns$_t_uint256_$\",\n                            \"typeString\": \"function (contract IUint256Component,address) view returns (uint256)\"\n                          }\n                        },\n                        \"id\": 15562,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"5447:39:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"expression\": {\n                          \"id\": 15563,\n                          \"name\": \"msg\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": -15,\n                          \"src\": \"5488:3:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_magic_message\",\n                            \"typeString\": \"msg\"\n                          }\n                        },\n                        \"id\": 15564,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"memberLocation\": \"5492:6:41\",\n                        \"memberName\": \"sender\",\n                        \"nodeType\": \"MemberAccess\",\n                        \"src\": \"5488:10:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      {\n                        \"id\": 15565,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15550,\n                        \"src\": \"5500:6:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 15557,\n                      \"name\": \"ComponentValueRemoved\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15268,\n                      \"src\": \"5425:21:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256,address,uint256)\"\n                      }\n                    },\n                    \"id\": 15566,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5425:82:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 15567,\n                  \"nodeType\": \"EmitStatement\",\n                  \"src\": \"5420:87:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16159\n            ],\n            \"documentation\": {\n              \"id\": 15548,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"5177:133:41\",\n              \"text\": \" Register a component value removal.\\n Emits the `ComponentValueRemoved` event for clients to reconstruct the state.\"\n            },\n            \"functionSelector\": \"0de3b7b5\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [\n              {\n                \"arguments\": [\n                  {\n                    \"expression\": {\n                      \"id\": 15553,\n                      \"name\": \"msg\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": -15,\n                      \"src\": \"5402:3:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_magic_message\",\n                        \"typeString\": \"msg\"\n                      }\n                    },\n                    \"id\": 15554,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"memberLocation\": \"5406:6:41\",\n                    \"memberName\": \"sender\",\n                    \"nodeType\": \"MemberAccess\",\n                    \"src\": \"5402:10:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  }\n                ],\n                \"id\": 15555,\n                \"kind\": \"modifierInvocation\",\n                \"modifierName\": {\n                  \"id\": 15552,\n                  \"name\": \"requireComponentRegistered\",\n                  \"nameLocations\": [\n                    \"5375:26:41\"\n                  ],\n                  \"nodeType\": \"IdentifierPath\",\n                  \"referencedDeclaration\": 15449,\n                  \"src\": \"5375:26:41\"\n                },\n                \"nodeType\": \"ModifierInvocation\",\n                \"src\": \"5375:38:41\"\n              }\n            ],\n            \"name\": \"registerComponentValueRemoved\",\n            \"nameLocation\": \"5322:29:41\",\n            \"parameters\": {\n              \"id\": 15551,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15550,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"5360:6:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15569,\n                  \"src\": \"5352:14:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15549,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"5352:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"5351:16:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15556,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"5414:0:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15583,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"5609:115:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15582,\n              \"nodeType\": \"Block\",\n              \"src\": \"5675:49:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 15578,\n                        \"name\": \"_components\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15244,\n                        \"src\": \"5703:11:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        }\n                      },\n                      {\n                        \"id\": 15579,\n                        \"name\": \"id\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15572,\n                        \"src\": \"5716:2:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 15577,\n                      \"name\": \"getAddressById\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 21290,\n                      \"src\": \"5688:14:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IUint256Component_$16077_$_t_uint256_$returns$_t_address_$\",\n                        \"typeString\": \"function (contract IUint256Component,uint256) view returns (address)\"\n                      }\n                    },\n                    \"id\": 15580,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5688:31:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15576,\n                  \"id\": 15581,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"5681:38:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16117\n            ],\n            \"documentation\": {\n              \"id\": 15570,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"5516:90:41\",\n              \"text\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n            },\n            \"functionSelector\": \"4f27da18\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"getComponent\",\n            \"nameLocation\": \"5618:12:41\",\n            \"parameters\": {\n              \"id\": 15573,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15572,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"id\",\n                  \"nameLocation\": \"5639:2:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15583,\n                  \"src\": \"5631:10:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15571,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"5631:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"5630:12:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15576,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15575,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15583,\n                  \"src\": \"5666:7:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15574,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"5666:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"5665:9:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"external\"\n          },\n          {\n            \"id\": 15597,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"5821:150:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15596,\n              \"nodeType\": \"Block\",\n              \"src\": \"5911:60:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 15592,\n                        \"name\": \"_components\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15244,\n                        \"src\": \"5939:11:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        }\n                      },\n                      {\n                        \"id\": 15593,\n                        \"name\": \"componentAddr\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15586,\n                        \"src\": \"5952:13:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"id\": 15591,\n                      \"name\": \"getIdByAddress\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 21319,\n                      \"src\": \"5924:14:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IUint256Component_$16077_$_t_address_$returns$_t_uint256_$\",\n                        \"typeString\": \"function (contract IUint256Component,address) view returns (uint256)\"\n                      }\n                    },\n                    \"id\": 15594,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5924:42:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15590,\n                  \"id\": 15595,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"5917:49:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16124\n            ],\n            \"documentation\": {\n              \"id\": 15584,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"5728:90:41\",\n              \"text\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n            },\n            \"functionSelector\": \"9f54f545\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"getComponentIdFromAddress\",\n            \"nameLocation\": \"5830:25:41\",\n            \"parameters\": {\n              \"id\": 15587,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15586,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"componentAddr\",\n                  \"nameLocation\": \"5864:13:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15597,\n                  \"src\": \"5856:21:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15585,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"5856:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"5855:23:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15590,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15589,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15597,\n                  \"src\": \"5902:7:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15588,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"5902:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"5901:9:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"external\"\n          },\n          {\n            \"id\": 15611,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"6068:128:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15610,\n              \"nodeType\": \"Block\",\n              \"src\": \"6144:52:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 15606,\n                        \"name\": \"_systems\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15247,\n                        \"src\": \"6172:8:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        }\n                      },\n                      {\n                        \"id\": 15607,\n                        \"name\": \"systemId\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15600,\n                        \"src\": \"6182:8:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                          \"typeString\": \"contract Uint256Component\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 15605,\n                      \"name\": \"getAddressById\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 21290,\n                      \"src\": \"6157:14:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IUint256Component_$16077_$_t_uint256_$returns$_t_address_$\",\n                        \"typeString\": \"function (contract IUint256Component,uint256) view returns (address)\"\n                      }\n                    },\n                    \"id\": 15608,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6157:34:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15604,\n                  \"id\": 15609,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"6150:41:41\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 15598,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"5975:90:41\",\n              \"text\": \"Deprecated, but left here for backward compatibility. TODO: refactor all consumers. \"\n            },\n            \"functionSelector\": \"fb3ec48b\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"getSystemAddress\",\n            \"nameLocation\": \"6077:16:41\",\n            \"parameters\": {\n              \"id\": 15601,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15600,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"systemId\",\n                  \"nameLocation\": \"6102:8:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15611,\n                  \"src\": \"6094:16:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15599,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"6094:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"6093:18:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15604,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15603,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15611,\n                  \"src\": \"6135:7:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15602,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"6135:7:41\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"6134:9:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"external\"\n          },\n          {\n            \"id\": 15623,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"6200:94:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15622,\n              \"nodeType\": \"Block\",\n              \"src\": \"6256:38:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [],\n                    \"expression\": {\n                      \"argumentTypes\": [],\n                      \"expression\": {\n                        \"arguments\": [\n                          {\n                            \"id\": 15617,\n                            \"name\": \"entities\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15241,\n                            \"src\": \"6273:8:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                              \"typeString\": \"contract Set\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                              \"typeString\": \"contract Set\"\n                            }\n                          ],\n                          \"id\": 15616,\n                          \"name\": \"Set\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15152,\n                          \"src\": \"6269:3:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_contract$_Set_$15152_$\",\n                            \"typeString\": \"type(contract Set)\"\n                          }\n                        },\n                        \"id\": 15618,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"6269:13:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                          \"typeString\": \"contract Set\"\n                        }\n                      },\n                      \"id\": 15619,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"6283:4:41\",\n                      \"memberName\": \"size\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 15151,\n                      \"src\": \"6269:18:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_view$__$returns$_t_uint256_$\",\n                        \"typeString\": \"function () view external returns (uint256)\"\n                      }\n                    },\n                    \"id\": 15620,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6269:20:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15615,\n                  \"id\": 15621,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"6262:27:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16164\n            ],\n            \"functionSelector\": \"d7ecf62b\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"getNumEntities\",\n            \"nameLocation\": \"6209:14:41\",\n            \"parameters\": {\n              \"id\": 15612,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"6223:2:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15615,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15614,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15623,\n                  \"src\": \"6247:7:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15613,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"6247:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"6246:9:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15687,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"6431:500:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15686,\n              \"nodeType\": \"Block\",\n              \"src\": \"6536:395:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"assignments\": [\n                    15638\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 15638,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"fragments\",\n                      \"nameLocation\": \"6565:9:41\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 15686,\n                      \"src\": \"6542:32:41\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"memory\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_array$_t_struct$_QueryFragment_$16212_memory_ptr_$dyn_memory_ptr\",\n                        \"typeString\": \"struct QueryFragment[]\"\n                      },\n                      \"typeName\": {\n                        \"baseType\": {\n                          \"id\": 15636,\n                          \"nodeType\": \"UserDefinedTypeName\",\n                          \"pathNode\": {\n                            \"id\": 15635,\n                            \"name\": \"QueryFragment\",\n                            \"nameLocations\": [\n                              \"6542:13:41\"\n                            ],\n                            \"nodeType\": \"IdentifierPath\",\n                            \"referencedDeclaration\": 16212,\n                            \"src\": \"6542:13:41\"\n                          },\n                          \"referencedDeclaration\": 16212,\n                          \"src\": \"6542:13:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_struct$_QueryFragment_$16212_storage_ptr\",\n                            \"typeString\": \"struct QueryFragment\"\n                          }\n                        },\n                        \"id\": 15637,\n                        \"nodeType\": \"ArrayTypeName\",\n                        \"src\": \"6542:15:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_array$_t_struct$_QueryFragment_$16212_storage_$dyn_storage_ptr\",\n                          \"typeString\": \"struct QueryFragment[]\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 15646,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"expression\": {\n                          \"id\": 15643,\n                          \"name\": \"worldQueryFragments\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15628,\n                          \"src\": \"6597:19:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_array$_t_struct$_WorldQueryFragment_$16091_calldata_ptr_$dyn_calldata_ptr\",\n                            \"typeString\": \"struct WorldQueryFragment calldata[] calldata\"\n                          }\n                        },\n                        \"id\": 15644,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"memberLocation\": \"6617:6:41\",\n                        \"memberName\": \"length\",\n                        \"nodeType\": \"MemberAccess\",\n                        \"src\": \"6597:26:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 15642,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"NewExpression\",\n                      \"src\": \"6577:19:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_QueryFragment_$16212_memory_ptr_$dyn_memory_ptr_$\",\n                        \"typeString\": \"function (uint256) pure returns (struct QueryFragment memory[] memory)\"\n                      },\n                      \"typeName\": {\n                        \"baseType\": {\n                          \"id\": 15640,\n                          \"nodeType\": \"UserDefinedTypeName\",\n                          \"pathNode\": {\n                            \"id\": 15639,\n                            \"name\": \"QueryFragment\",\n                            \"nameLocations\": [\n                              \"6581:13:41\"\n                            ],\n                            \"nodeType\": \"IdentifierPath\",\n                            \"referencedDeclaration\": 16212,\n                            \"src\": \"6581:13:41\"\n                          },\n                          \"referencedDeclaration\": 16212,\n                          \"src\": \"6581:13:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_struct$_QueryFragment_$16212_storage_ptr\",\n                            \"typeString\": \"struct QueryFragment\"\n                          }\n                        },\n                        \"id\": 15641,\n                        \"nodeType\": \"ArrayTypeName\",\n                        \"src\": \"6581:15:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_array$_t_struct$_QueryFragment_$16212_storage_$dyn_storage_ptr\",\n                          \"typeString\": \"struct QueryFragment[]\"\n                        }\n                      }\n                    },\n                    \"id\": 15645,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6577:47:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_array$_t_struct$_QueryFragment_$16212_memory_ptr_$dyn_memory_ptr\",\n                      \"typeString\": \"struct QueryFragment memory[] memory\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"6542:82:41\"\n                },\n                {\n                  \"body\": {\n                    \"id\": 15679,\n                    \"nodeType\": \"Block\",\n                    \"src\": \"6683:206:41\",\n                    \"statements\": [\n                      {\n                        \"expression\": {\n                          \"id\": 15677,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"leftHandSide\": {\n                            \"baseExpression\": {\n                              \"id\": 15657,\n                              \"name\": \"fragments\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 15638,\n                              \"src\": \"6691:9:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_array$_t_struct$_QueryFragment_$16212_memory_ptr_$dyn_memory_ptr\",\n                                \"typeString\": \"struct QueryFragment memory[] memory\"\n                              }\n                            },\n                            \"id\": 15659,\n                            \"indexExpression\": {\n                              \"id\": 15658,\n                              \"name\": \"i\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 15648,\n                              \"src\": \"6701:1:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_uint256\",\n                                \"typeString\": \"uint256\"\n                              }\n                            },\n                            \"isConstant\": false,\n                            \"isLValue\": true,\n                            \"isPure\": false,\n                            \"lValueRequested\": true,\n                            \"nodeType\": \"IndexAccess\",\n                            \"src\": \"6691:12:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_struct$_QueryFragment_$16212_memory_ptr\",\n                              \"typeString\": \"struct QueryFragment memory\"\n                            }\n                          },\n                          \"nodeType\": \"Assignment\",\n                          \"operator\": \"=\",\n                          \"rightHandSide\": {\n                            \"arguments\": [\n                              {\n                                \"expression\": {\n                                  \"baseExpression\": {\n                                    \"id\": 15661,\n                                    \"name\": \"worldQueryFragments\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": 15628,\n                                    \"src\": \"6729:19:41\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_array$_t_struct$_WorldQueryFragment_$16091_calldata_ptr_$dyn_calldata_ptr\",\n                                      \"typeString\": \"struct WorldQueryFragment calldata[] calldata\"\n                                    }\n                                  },\n                                  \"id\": 15663,\n                                  \"indexExpression\": {\n                                    \"id\": 15662,\n                                    \"name\": \"i\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": 15648,\n                                    \"src\": \"6749:1:41\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_uint256\",\n                                      \"typeString\": \"uint256\"\n                                    }\n                                  },\n                                  \"isConstant\": false,\n                                  \"isLValue\": false,\n                                  \"isPure\": false,\n                                  \"lValueRequested\": false,\n                                  \"nodeType\": \"IndexAccess\",\n                                  \"src\": \"6729:22:41\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_struct$_WorldQueryFragment_$16091_calldata_ptr\",\n                                    \"typeString\": \"struct WorldQueryFragment calldata\"\n                                  }\n                                },\n                                \"id\": 15664,\n                                \"isConstant\": false,\n                                \"isLValue\": false,\n                                \"isPure\": false,\n                                \"lValueRequested\": false,\n                                \"memberLocation\": \"6752:9:41\",\n                                \"memberName\": \"queryType\",\n                                \"nodeType\": \"MemberAccess\",\n                                \"referencedDeclaration\": 16086,\n                                \"src\": \"6729:32:41\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_enum$_QueryType_$16203\",\n                                  \"typeString\": \"enum QueryType\"\n                                }\n                              },\n                              {\n                                \"arguments\": [\n                                  {\n                                    \"id\": 15666,\n                                    \"name\": \"_components\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": 15244,\n                                    \"src\": \"6788:11:41\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                                      \"typeString\": \"contract Uint256Component\"\n                                    }\n                                  },\n                                  {\n                                    \"expression\": {\n                                      \"baseExpression\": {\n                                        \"id\": 15667,\n                                        \"name\": \"worldQueryFragments\",\n                                        \"nodeType\": \"Identifier\",\n                                        \"overloadedDeclarations\": [],\n                                        \"referencedDeclaration\": 15628,\n                                        \"src\": \"6801:19:41\",\n                                        \"typeDescriptions\": {\n                                          \"typeIdentifier\": \"t_array$_t_struct$_WorldQueryFragment_$16091_calldata_ptr_$dyn_calldata_ptr\",\n                                          \"typeString\": \"struct WorldQueryFragment calldata[] calldata\"\n                                        }\n                                      },\n                                      \"id\": 15669,\n                                      \"indexExpression\": {\n                                        \"id\": 15668,\n                                        \"name\": \"i\",\n                                        \"nodeType\": \"Identifier\",\n                                        \"overloadedDeclarations\": [],\n                                        \"referencedDeclaration\": 15648,\n                                        \"src\": \"6821:1:41\",\n                                        \"typeDescriptions\": {\n                                          \"typeIdentifier\": \"t_uint256\",\n                                          \"typeString\": \"uint256\"\n                                        }\n                                      },\n                                      \"isConstant\": false,\n                                      \"isLValue\": false,\n                                      \"isPure\": false,\n                                      \"lValueRequested\": false,\n                                      \"nodeType\": \"IndexAccess\",\n                                      \"src\": \"6801:22:41\",\n                                      \"typeDescriptions\": {\n                                        \"typeIdentifier\": \"t_struct$_WorldQueryFragment_$16091_calldata_ptr\",\n                                        \"typeString\": \"struct WorldQueryFragment calldata\"\n                                      }\n                                    },\n                                    \"id\": 15670,\n                                    \"isConstant\": false,\n                                    \"isLValue\": false,\n                                    \"isPure\": false,\n                                    \"lValueRequested\": false,\n                                    \"memberLocation\": \"6824:11:41\",\n                                    \"memberName\": \"componentId\",\n                                    \"nodeType\": \"MemberAccess\",\n                                    \"referencedDeclaration\": 16088,\n                                    \"src\": \"6801:34:41\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_uint256\",\n                                      \"typeString\": \"uint256\"\n                                    }\n                                  }\n                                ],\n                                \"expression\": {\n                                  \"argumentTypes\": [\n                                    {\n                                      \"typeIdentifier\": \"t_contract$_Uint256Component_$15864\",\n                                      \"typeString\": \"contract Uint256Component\"\n                                    },\n                                    {\n                                      \"typeIdentifier\": \"t_uint256\",\n                                      \"typeString\": \"uint256\"\n                                    }\n                                  ],\n                                  \"id\": 15665,\n                                  \"name\": \"getComponentById\",\n                                  \"nodeType\": \"Identifier\",\n                                  \"overloadedDeclarations\": [],\n                                  \"referencedDeclaration\": 21339,\n                                  \"src\": \"6771:16:41\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IUint256Component_$16077_$_t_uint256_$returns$_t_contract$_IComponent_$15952_$\",\n                                    \"typeString\": \"function (contract IUint256Component,uint256) view returns (contract IComponent)\"\n                                  }\n                                },\n                                \"id\": 15671,\n                                \"isConstant\": false,\n                                \"isLValue\": false,\n                                \"isPure\": false,\n                                \"kind\": \"functionCall\",\n                                \"lValueRequested\": false,\n                                \"nameLocations\": [],\n                                \"names\": [],\n                                \"nodeType\": \"FunctionCall\",\n                                \"src\": \"6771:65:41\",\n                                \"tryCall\": false,\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_contract$_IComponent_$15952\",\n                                  \"typeString\": \"contract IComponent\"\n                                }\n                              },\n                              {\n                                \"expression\": {\n                                  \"baseExpression\": {\n                                    \"id\": 15672,\n                                    \"name\": \"worldQueryFragments\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": 15628,\n                                    \"src\": \"6846:19:41\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_array$_t_struct$_WorldQueryFragment_$16091_calldata_ptr_$dyn_calldata_ptr\",\n                                      \"typeString\": \"struct WorldQueryFragment calldata[] calldata\"\n                                    }\n                                  },\n                                  \"id\": 15674,\n                                  \"indexExpression\": {\n                                    \"id\": 15673,\n                                    \"name\": \"i\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": 15648,\n                                    \"src\": \"6866:1:41\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_uint256\",\n                                      \"typeString\": \"uint256\"\n                                    }\n                                  },\n                                  \"isConstant\": false,\n                                  \"isLValue\": false,\n                                  \"isPure\": false,\n                                  \"lValueRequested\": false,\n                                  \"nodeType\": \"IndexAccess\",\n                                  \"src\": \"6846:22:41\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_struct$_WorldQueryFragment_$16091_calldata_ptr\",\n                                    \"typeString\": \"struct WorldQueryFragment calldata\"\n                                  }\n                                },\n                                \"id\": 15675,\n                                \"isConstant\": false,\n                                \"isLValue\": false,\n                                \"isPure\": false,\n                                \"lValueRequested\": false,\n                                \"memberLocation\": \"6869:5:41\",\n                                \"memberName\": \"value\",\n                                \"nodeType\": \"MemberAccess\",\n                                \"referencedDeclaration\": 16090,\n                                \"src\": \"6846:28:41\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_bytes_calldata_ptr\",\n                                  \"typeString\": \"bytes calldata\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_enum$_QueryType_$16203\",\n                                  \"typeString\": \"enum QueryType\"\n                                },\n                                {\n                                  \"typeIdentifier\": \"t_contract$_IComponent_$15952\",\n                                  \"typeString\": \"contract IComponent\"\n                                },\n                                {\n                                  \"typeIdentifier\": \"t_bytes_calldata_ptr\",\n                                  \"typeString\": \"bytes calldata\"\n                                }\n                              ],\n                              \"id\": 15660,\n                              \"name\": \"QueryFragment\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 16212,\n                              \"src\": \"6706:13:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_type$_t_struct$_QueryFragment_$16212_storage_ptr_$\",\n                                \"typeString\": \"type(struct QueryFragment storage pointer)\"\n                              }\n                            },\n                            \"id\": 15676,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"structConstructorCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"6706:176:41\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_struct$_QueryFragment_$16212_memory_ptr\",\n                              \"typeString\": \"struct QueryFragment memory\"\n                            }\n                          },\n                          \"src\": \"6691:191:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_struct$_QueryFragment_$16212_memory_ptr\",\n                            \"typeString\": \"struct QueryFragment memory\"\n                          }\n                        },\n                        \"id\": 15678,\n                        \"nodeType\": \"ExpressionStatement\",\n                        \"src\": \"6691:191:41\"\n                      }\n                    ]\n                  },\n                  \"condition\": {\n                    \"commonType\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    },\n                    \"id\": 15653,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftExpression\": {\n                      \"id\": 15650,\n                      \"name\": \"i\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15648,\n                      \"src\": \"6646:1:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"nodeType\": \"BinaryOperation\",\n                    \"operator\": \"<\",\n                    \"rightExpression\": {\n                      \"expression\": {\n                        \"id\": 15651,\n                        \"name\": \"worldQueryFragments\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15628,\n                        \"src\": \"6650:19:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_array$_t_struct$_WorldQueryFragment_$16091_calldata_ptr_$dyn_calldata_ptr\",\n                          \"typeString\": \"struct WorldQueryFragment calldata[] calldata\"\n                        }\n                      },\n                      \"id\": 15652,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"6670:6:41\",\n                      \"memberName\": \"length\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"src\": \"6650:26:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"src\": \"6646:30:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"id\": 15680,\n                  \"initializationExpression\": {\n                    \"assignments\": [\n                      15648\n                    ],\n                    \"declarations\": [\n                      {\n                        \"constant\": false,\n                        \"id\": 15648,\n                        \"mutability\": \"mutable\",\n                        \"name\": \"i\",\n                        \"nameLocation\": \"6643:1:41\",\n                        \"nodeType\": \"VariableDeclaration\",\n                        \"scope\": 15680,\n                        \"src\": \"6635:9:41\",\n                        \"stateVariable\": false,\n                        \"storageLocation\": \"default\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        \"typeName\": {\n                          \"id\": 15647,\n                          \"name\": \"uint256\",\n                          \"nodeType\": \"ElementaryTypeName\",\n                          \"src\": \"6635:7:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        },\n                        \"visibility\": \"internal\"\n                      }\n                    ],\n                    \"id\": 15649,\n                    \"nodeType\": \"VariableDeclarationStatement\",\n                    \"src\": \"6635:9:41\"\n                  },\n                  \"loopExpression\": {\n                    \"expression\": {\n                      \"id\": 15655,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"UnaryOperation\",\n                      \"operator\": \"++\",\n                      \"prefix\": false,\n                      \"src\": \"6678:3:41\",\n                      \"subExpression\": {\n                        \"id\": 15654,\n                        \"name\": \"i\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15648,\n                        \"src\": \"6678:1:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"id\": 15656,\n                    \"nodeType\": \"ExpressionStatement\",\n                    \"src\": \"6678:3:41\"\n                  },\n                  \"nodeType\": \"ForStatement\",\n                  \"src\": \"6630:259:41\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 15683,\n                        \"name\": \"fragments\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15638,\n                        \"src\": \"6916:9:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_array$_t_struct$_QueryFragment_$16212_memory_ptr_$dyn_memory_ptr\",\n                          \"typeString\": \"struct QueryFragment memory[] memory\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_array$_t_struct$_QueryFragment_$16212_memory_ptr_$dyn_memory_ptr\",\n                          \"typeString\": \"struct QueryFragment memory[] memory\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 15681,\n                        \"name\": \"LibQuery\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 14570,\n                        \"src\": \"6901:8:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_type$_t_contract$_LibQuery_$14570_$\",\n                          \"typeString\": \"type(library LibQuery)\"\n                        }\n                      },\n                      \"id\": 15682,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"6910:5:41\",\n                      \"memberName\": \"query\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 14002,\n                      \"src\": \"6901:14:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_array$_t_struct$_QueryFragment_$16212_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$\",\n                        \"typeString\": \"function (struct QueryFragment memory[] memory) view returns (uint256[] memory)\"\n                      }\n                    },\n                    \"id\": 15684,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6901:25:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_array$_t_uint256_$dyn_memory_ptr\",\n                      \"typeString\": \"uint256[] memory\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15633,\n                  \"id\": 15685,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"6894:32:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16186\n            ],\n            \"documentation\": {\n              \"id\": 15624,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"6298:130:41\",\n              \"text\": \" Helper function to execute a query with query fragments referring to a component ID instead of a component address.\"\n            },\n            \"functionSelector\": \"687485a6\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"query\",\n            \"nameLocation\": \"6440:5:41\",\n            \"parameters\": {\n              \"id\": 15629,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15628,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"worldQueryFragments\",\n                  \"nameLocation\": \"6476:19:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15687,\n                  \"src\": \"6446:49:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"calldata\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_array$_t_struct$_WorldQueryFragment_$16091_calldata_ptr_$dyn_calldata_ptr\",\n                    \"typeString\": \"struct WorldQueryFragment[]\"\n                  },\n                  \"typeName\": {\n                    \"baseType\": {\n                      \"id\": 15626,\n                      \"nodeType\": \"UserDefinedTypeName\",\n                      \"pathNode\": {\n                        \"id\": 15625,\n                        \"name\": \"WorldQueryFragment\",\n                        \"nameLocations\": [\n                          \"6446:18:41\"\n                        ],\n                        \"nodeType\": \"IdentifierPath\",\n                        \"referencedDeclaration\": 16091,\n                        \"src\": \"6446:18:41\"\n                      },\n                      \"referencedDeclaration\": 16091,\n                      \"src\": \"6446:18:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_struct$_WorldQueryFragment_$16091_storage_ptr\",\n                        \"typeString\": \"struct WorldQueryFragment\"\n                      }\n                    },\n                    \"id\": 15627,\n                    \"nodeType\": \"ArrayTypeName\",\n                    \"src\": \"6446:20:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_array$_t_struct$_WorldQueryFragment_$16091_storage_$dyn_storage_ptr\",\n                      \"typeString\": \"struct WorldQueryFragment[]\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"6445:51:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15633,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15632,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15687,\n                  \"src\": \"6518:16:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_array$_t_uint256_$dyn_memory_ptr\",\n                    \"typeString\": \"uint256[]\"\n                  },\n                  \"typeName\": {\n                    \"baseType\": {\n                      \"id\": 15630,\n                      \"name\": \"uint256\",\n                      \"nodeType\": \"ElementaryTypeName\",\n                      \"src\": \"6518:7:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"id\": 15631,\n                    \"nodeType\": \"ArrayTypeName\",\n                    \"src\": \"6518:9:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_array$_t_uint256_$dyn_storage_ptr\",\n                      \"typeString\": \"uint256[]\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"6517:18:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15703,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"6998:105:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15702,\n              \"nodeType\": \"Block\",\n              \"src\": \"7060:43:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 15699,\n                        \"name\": \"entity\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15690,\n                        \"src\": \"7091:6:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [\n                          {\n                            \"id\": 15696,\n                            \"name\": \"entities\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15241,\n                            \"src\": \"7077:8:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                              \"typeString\": \"contract Set\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                              \"typeString\": \"contract Set\"\n                            }\n                          ],\n                          \"id\": 15695,\n                          \"name\": \"Set\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 15152,\n                          \"src\": \"7073:3:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_contract$_Set_$15152_$\",\n                            \"typeString\": \"type(contract Set)\"\n                          }\n                        },\n                        \"id\": 15697,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"7073:13:41\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Set_$15152\",\n                          \"typeString\": \"contract Set\"\n                        }\n                      },\n                      \"id\": 15698,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"7087:3:41\",\n                      \"memberName\": \"has\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 15133,\n                      \"src\": \"7073:17:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_view$_t_uint256_$returns$_t_bool_$\",\n                        \"typeString\": \"function (uint256) view external returns (bool)\"\n                      }\n                    },\n                    \"id\": 15700,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"7073:25:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15694,\n                  \"id\": 15701,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"7066:32:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16171\n            ],\n            \"documentation\": {\n              \"id\": 15688,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"6935:60:41\",\n              \"text\": \" Check whether an entity exists in this world.\"\n            },\n            \"functionSelector\": \"e3d12875\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"hasEntity\",\n            \"nameLocation\": \"7007:9:41\",\n            \"parameters\": {\n              \"id\": 15691,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15690,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"entity\",\n                  \"nameLocation\": \"7025:6:41\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15703,\n                  \"src\": \"7017:14:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15689,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"7017:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"7016:16:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15694,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15693,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15703,\n                  \"src\": \"7054:4:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bool\",\n                    \"typeString\": \"bool\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15692,\n                    \"name\": \"bool\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"7054:4:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"7053:6:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 15740,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"7152:255:41\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 15739,\n              \"nodeType\": \"Block\",\n              \"src\": \"7211:196:41\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"assignments\": [\n                    15710\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 15710,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"entityNum\",\n                      \"nameLocation\": \"7225:9:41\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 15739,\n                      \"src\": \"7217:17:41\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      },\n                      \"typeName\": {\n                        \"id\": 15709,\n                        \"name\": \"uint256\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"7217:7:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 15713,\n                  \"initialValue\": {\n                    \"arguments\": [],\n                    \"expression\": {\n                      \"argumentTypes\": [],\n                      \"id\": 15711,\n                      \"name\": \"getNumEntities\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15623,\n                      \"src\": \"7237:14:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$__$returns$_t_uint256_$\",\n                        \"typeString\": \"function () view returns (uint256)\"\n                      }\n                    },\n                    \"id\": 15712,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"7237:16:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"7217:36:41\"\n                },\n                {\n                  \"assignments\": [\n                    15715\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 15715,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"id\",\n                      \"nameLocation\": \"7267:2:41\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 15739,\n                      \"src\": \"7259:10:41\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      },\n                      \"typeName\": {\n                        \"id\": 15714,\n                        \"name\": \"uint256\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"7259:7:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 15716,\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"7259:10:41\"\n                },\n                {\n                  \"body\": {\n                    \"id\": 15732,\n                    \"nodeType\": \"Block\",\n                    \"src\": \"7278:86:41\",\n                    \"statements\": [\n                      {\n                        \"expression\": {\n                          \"id\": 15718,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"UnaryOperation\",\n                          \"operator\": \"++\",\n                          \"prefix\": false,\n                          \"src\": \"7286:11:41\",\n                          \"subExpression\": {\n                            \"id\": 15717,\n                            \"name\": \"entityNum\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15710,\n                            \"src\": \"7286:9:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          },\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        },\n                        \"id\": 15719,\n                        \"nodeType\": \"ExpressionStatement\",\n                        \"src\": \"7286:11:41\"\n                      },\n                      {\n                        \"expression\": {\n                          \"id\": 15730,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"leftHandSide\": {\n                            \"id\": 15720,\n                            \"name\": \"id\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 15715,\n                            \"src\": \"7305:2:41\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          },\n                          \"nodeType\": \"Assignment\",\n                          \"operator\": \"=\",\n                          \"rightHandSide\": {\n                            \"arguments\": [\n                              {\n                                \"arguments\": [\n                                  {\n                                    \"arguments\": [\n                                      {\n                                        \"id\": 15726,\n                                        \"name\": \"entityNum\",\n                                        \"nodeType\": \"Identifier\",\n                                        \"overloadedDeclarations\": [],\n                                        \"referencedDeclaration\": 15710,\n                                        \"src\": \"7345:9:41\",\n                                        \"typeDescriptions\": {\n                                          \"typeIdentifier\": \"t_uint256\",\n                                          \"typeString\": \"uint256\"\n                                        }\n                                      }\n                                    ],\n                                    \"expression\": {\n                                      \"argumentTypes\": [\n                                        {\n                                          \"typeIdentifier\": \"t_uint256\",\n                                          \"typeString\": \"uint256\"\n                                        }\n                                      ],\n                                      \"expression\": {\n                                        \"id\": 15724,\n                                        \"name\": \"abi\",\n                                        \"nodeType\": \"Identifier\",\n                                        \"overloadedDeclarations\": [],\n                                        \"referencedDeclaration\": -1,\n                                        \"src\": \"7328:3:41\",\n                                        \"typeDescriptions\": {\n                                          \"typeIdentifier\": \"t_magic_abi\",\n                                          \"typeString\": \"abi\"\n                                        }\n                                      },\n                                      \"id\": 15725,\n                                      \"isConstant\": false,\n                                      \"isLValue\": false,\n                                      \"isPure\": true,\n                                      \"lValueRequested\": false,\n                                      \"memberLocation\": \"7332:12:41\",\n                                      \"memberName\": \"encodePacked\",\n                                      \"nodeType\": \"MemberAccess\",\n                                      \"src\": \"7328:16:41\",\n                                      \"typeDescriptions\": {\n                                        \"typeIdentifier\": \"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$\",\n                                        \"typeString\": \"function () pure returns (bytes memory)\"\n                                      }\n                                    },\n                                    \"id\": 15727,\n                                    \"isConstant\": false,\n                                    \"isLValue\": false,\n                                    \"isPure\": false,\n                                    \"kind\": \"functionCall\",\n                                    \"lValueRequested\": false,\n                                    \"nameLocations\": [],\n                                    \"names\": [],\n                                    \"nodeType\": \"FunctionCall\",\n                                    \"src\": \"7328:27:41\",\n                                    \"tryCall\": false,\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                                      \"typeString\": \"bytes memory\"\n                                    }\n                                  }\n                                ],\n                                \"expression\": {\n                                  \"argumentTypes\": [\n                                    {\n                                      \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                                      \"typeString\": \"bytes memory\"\n                                    }\n                                  ],\n                                  \"id\": 15723,\n                                  \"name\": \"keccak256\",\n                                  \"nodeType\": \"Identifier\",\n                                  \"overloadedDeclarations\": [],\n                                  \"referencedDeclaration\": -8,\n                                  \"src\": \"7318:9:41\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                                    \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                                  }\n                                },\n                                \"id\": 15728,\n                                \"isConstant\": false,\n                                \"isLValue\": false,\n                                \"isPure\": false,\n                                \"kind\": \"functionCall\",\n                                \"lValueRequested\": false,\n                                \"nameLocations\": [],\n                                \"names\": [],\n                                \"nodeType\": \"FunctionCall\",\n                                \"src\": \"7318:38:41\",\n                                \"tryCall\": false,\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_bytes32\",\n                                  \"typeString\": \"bytes32\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_bytes32\",\n                                  \"typeString\": \"bytes32\"\n                                }\n                              ],\n                              \"id\": 15722,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": true,\n                              \"lValueRequested\": false,\n                              \"nodeType\": \"ElementaryTypeNameExpression\",\n                              \"src\": \"7310:7:41\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_type$_t_uint256_$\",\n                                \"typeString\": \"type(uint256)\"\n                              },\n                              \"typeName\": {\n                                \"id\": 15721,\n                                \"name\": \"uint256\",\n                                \"nodeType\": \"ElementaryTypeName\",\n                                \"src\": \"7310:7:41\",\n                                \"typeDescriptions\": {}\n                              }\n                            },\n                            \"id\": 15729,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"typeConversion\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"7310:47:41\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_uint256\",\n                              \"typeString\": \"uint256\"\n                            }\n                          },\n                          \"src\": \"7305:52:41\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        },\n                        \"id\": 15731,\n                        \"nodeType\": \"ExpressionStatement\",\n                        \"src\": \"7305:52:41\"\n                      }\n                    ]\n                  },\n                  \"condition\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 15734,\n                        \"name\": \"id\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 15715,\n                        \"src\": \"7382:2:41\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 15733,\n                      \"name\": \"hasEntity\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 15703,\n                      \"src\": \"7372:9:41\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_uint256_$returns$_t_bool_$\",\n                        \"typeString\": \"function (uint256) view returns (bool)\"\n                      }\n                    },\n                    \"id\": 15735,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"7372:13:41\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"id\": 15736,\n                  \"nodeType\": \"DoWhileStatement\",\n                  \"src\": \"7275:112:41\"\n                },\n                {\n                  \"expression\": {\n                    \"id\": 15737,\n                    \"name\": \"id\",\n                    \"nodeType\": \"Identifier\",\n                    \"overloadedDeclarations\": [],\n                    \"referencedDeclaration\": 15715,\n                    \"src\": \"7400:2:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"functionReturnParameters\": 15708,\n                  \"id\": 15738,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"7393:9:41\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              16176\n            ],\n            \"documentation\": {\n              \"id\": 15704,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"7107:42:41\",\n              \"text\": \" Get a new unique entity ID.\"\n            },\n            \"functionSelector\": \"614bfa6e\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"getUniqueEntityId\",\n            \"nameLocation\": \"7161:17:41\",\n            \"parameters\": {\n              \"id\": 15705,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"7178:2:41\"\n            },\n            \"returnParameters\": {\n              \"id\": 15708,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 15707,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 15740,\n                  \"src\": \"7202:7:41\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 15706,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"7202:7:41\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"7201:9:41\"\n            },\n            \"scope\": 15741,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          }\n        ],\n        \"abstract\": false,\n        \"baseContracts\": [\n          {\n            \"baseName\": {\n              \"id\": 15233,\n              \"name\": \"IWorld\",\n              \"nameLocations\": [\n                \"1615:6:41\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 16190,\n              \"src\": \"1615:6:41\"\n            },\n            \"id\": 15234,\n            \"nodeType\": \"InheritanceSpecifier\",\n            \"src\": \"1615:6:41\"\n          }\n        ],\n        \"canonicalName\": \"World\",\n        \"contractDependencies\": [\n          15152,\n          15864,\n          16449\n        ],\n        \"contractKind\": \"contract\",\n        \"documentation\": {\n          \"id\": 15232,\n          \"nodeType\": \"StructuredDocumentation\",\n          \"src\": \"695:901:41\",\n          \"text\": \" The `World` contract is at the core of every on-chain world.\\n Entities, components and systems are registered in the `World`.\\n Components register updates to their state via the `registerComponentValueSet`\\n and `registerComponentValueRemoved` methods, which emit the `ComponentValueSet` and `ComponentValueRemoved` events respectively.\\n Clients can reconstruct the entire state (of all components) by listening to\\n these two events, instead of having to add a separate getter or event listener\\n for every type of data. (Have a look at the MUD network package for a TypeScript\\n implementation of contract/client state sync.)\\n The `World` is an ownerless and permissionless contract.\\n Anyone can register new components and systems in the world (via the `registerComponent` and `registerSystem` methods).\\n Clients decide which components and systems they care about.\"\n        },\n        \"fullyImplemented\": true,\n        \"linearizedBaseContracts\": [\n          15741,\n          16190\n        ],\n        \"name\": \"World\",\n        \"nameLocation\": \"1606:5:41\",\n        \"scope\": 15742,\n        \"usedErrors\": []\n      }\n    ],\n    \"license\": \"MIT\"\n  },\n  \"id\": 41\n}","/* eslint-disable */\nimport Long from \"long\";\nimport { CallContext, CallOptions } from \"nice-grpc-common\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"ecsstream\";\n\nexport interface TxMetadata {\n  to: string;\n  data: Uint8Array;\n  value: number;\n}\n\nexport interface ECSEvent {\n  eventType: string;\n  componentId: string;\n  entityId: string;\n  value: Uint8Array;\n  txHash: string;\n  txMetadata: TxMetadata | undefined;\n}\n\n/**\n * Request to subscribe to an ECSStream. The required parameter is 'worldAddress', while others\n * are opt-in based on which data the client is interested in receiving.\n */\nexport interface ECSStreamBlockBundleRequest {\n  worldAddress: string;\n  blockNumber: boolean;\n  blockHash: boolean;\n  blockTimestamp: boolean;\n  transactionsConfirmed: boolean;\n  ecsEvents: boolean;\n  ecsEventsIncludeTxMetadata: boolean;\n}\n\n/**\n * ECSStream response. The fields are populated based on the request which must have been sent when\n * starting the subscription.\n */\nexport interface ECSStreamBlockBundleReply {\n  blockNumber: number;\n  blockHash: string;\n  blockTimestamp: number;\n  transactionsConfirmed: string[];\n  ecsEvents: ECSEvent[];\n}\n\nfunction createBaseTxMetadata(): TxMetadata {\n  return { to: \"\", data: new Uint8Array(), value: 0 };\n}\n\nexport const TxMetadata = {\n  encode(message: TxMetadata, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.to !== \"\") {\n      writer.uint32(18).string(message.to);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(26).bytes(message.data);\n    }\n    if (message.value !== 0) {\n      writer.uint32(32).uint64(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): TxMetadata {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseTxMetadata();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.to = reader.string();\n          break;\n        case 3:\n          message.data = reader.bytes();\n          break;\n        case 4:\n          message.value = longToNumber(reader.uint64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<TxMetadata>): TxMetadata {\n    const message = createBaseTxMetadata();\n    message.to = object.to ?? \"\";\n    message.data = object.data ?? new Uint8Array();\n    message.value = object.value ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseECSEvent(): ECSEvent {\n  return { eventType: \"\", componentId: \"\", entityId: \"\", value: new Uint8Array(), txHash: \"\", txMetadata: undefined };\n}\n\nexport const ECSEvent = {\n  encode(message: ECSEvent, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.eventType !== \"\") {\n      writer.uint32(10).string(message.eventType);\n    }\n    if (message.componentId !== \"\") {\n      writer.uint32(18).string(message.componentId);\n    }\n    if (message.entityId !== \"\") {\n      writer.uint32(26).string(message.entityId);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(34).bytes(message.value);\n    }\n    if (message.txHash !== \"\") {\n      writer.uint32(42).string(message.txHash);\n    }\n    if (message.txMetadata !== undefined) {\n      TxMetadata.encode(message.txMetadata, writer.uint32(50).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSEvent {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSEvent();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.eventType = reader.string();\n          break;\n        case 2:\n          message.componentId = reader.string();\n          break;\n        case 3:\n          message.entityId = reader.string();\n          break;\n        case 4:\n          message.value = reader.bytes();\n          break;\n        case 5:\n          message.txHash = reader.string();\n          break;\n        case 6:\n          message.txMetadata = TxMetadata.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSEvent>): ECSEvent {\n    const message = createBaseECSEvent();\n    message.eventType = object.eventType ?? \"\";\n    message.componentId = object.componentId ?? \"\";\n    message.entityId = object.entityId ?? \"\";\n    message.value = object.value ?? new Uint8Array();\n    message.txHash = object.txHash ?? \"\";\n    message.txMetadata =\n      object.txMetadata !== undefined && object.txMetadata !== null\n        ? TxMetadata.fromPartial(object.txMetadata)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseECSStreamBlockBundleRequest(): ECSStreamBlockBundleRequest {\n  return {\n    worldAddress: \"\",\n    blockNumber: false,\n    blockHash: false,\n    blockTimestamp: false,\n    transactionsConfirmed: false,\n    ecsEvents: false,\n    ecsEventsIncludeTxMetadata: false,\n  };\n}\n\nexport const ECSStreamBlockBundleRequest = {\n  encode(message: ECSStreamBlockBundleRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.worldAddress !== \"\") {\n      writer.uint32(10).string(message.worldAddress);\n    }\n    if (message.blockNumber === true) {\n      writer.uint32(16).bool(message.blockNumber);\n    }\n    if (message.blockHash === true) {\n      writer.uint32(24).bool(message.blockHash);\n    }\n    if (message.blockTimestamp === true) {\n      writer.uint32(32).bool(message.blockTimestamp);\n    }\n    if (message.transactionsConfirmed === true) {\n      writer.uint32(40).bool(message.transactionsConfirmed);\n    }\n    if (message.ecsEvents === true) {\n      writer.uint32(48).bool(message.ecsEvents);\n    }\n    if (message.ecsEventsIncludeTxMetadata === true) {\n      writer.uint32(56).bool(message.ecsEventsIncludeTxMetadata);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStreamBlockBundleRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStreamBlockBundleRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.worldAddress = reader.string();\n          break;\n        case 2:\n          message.blockNumber = reader.bool();\n          break;\n        case 3:\n          message.blockHash = reader.bool();\n          break;\n        case 4:\n          message.blockTimestamp = reader.bool();\n          break;\n        case 5:\n          message.transactionsConfirmed = reader.bool();\n          break;\n        case 6:\n          message.ecsEvents = reader.bool();\n          break;\n        case 7:\n          message.ecsEventsIncludeTxMetadata = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStreamBlockBundleRequest>): ECSStreamBlockBundleRequest {\n    const message = createBaseECSStreamBlockBundleRequest();\n    message.worldAddress = object.worldAddress ?? \"\";\n    message.blockNumber = object.blockNumber ?? false;\n    message.blockHash = object.blockHash ?? false;\n    message.blockTimestamp = object.blockTimestamp ?? false;\n    message.transactionsConfirmed = object.transactionsConfirmed ?? false;\n    message.ecsEvents = object.ecsEvents ?? false;\n    message.ecsEventsIncludeTxMetadata = object.ecsEventsIncludeTxMetadata ?? false;\n    return message;\n  },\n};\n\nfunction createBaseECSStreamBlockBundleReply(): ECSStreamBlockBundleReply {\n  return { blockNumber: 0, blockHash: \"\", blockTimestamp: 0, transactionsConfirmed: [], ecsEvents: [] };\n}\n\nexport const ECSStreamBlockBundleReply = {\n  encode(message: ECSStreamBlockBundleReply, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.blockNumber !== 0) {\n      writer.uint32(8).uint32(message.blockNumber);\n    }\n    if (message.blockHash !== \"\") {\n      writer.uint32(18).string(message.blockHash);\n    }\n    if (message.blockTimestamp !== 0) {\n      writer.uint32(24).uint32(message.blockTimestamp);\n    }\n    for (const v of message.transactionsConfirmed) {\n      writer.uint32(34).string(v!);\n    }\n    for (const v of message.ecsEvents) {\n      ECSEvent.encode(v!, writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ECSStreamBlockBundleReply {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseECSStreamBlockBundleReply();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockNumber = reader.uint32();\n          break;\n        case 2:\n          message.blockHash = reader.string();\n          break;\n        case 3:\n          message.blockTimestamp = reader.uint32();\n          break;\n        case 4:\n          message.transactionsConfirmed.push(reader.string());\n          break;\n        case 5:\n          message.ecsEvents.push(ECSEvent.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ECSStreamBlockBundleReply>): ECSStreamBlockBundleReply {\n    const message = createBaseECSStreamBlockBundleReply();\n    message.blockNumber = object.blockNumber ?? 0;\n    message.blockHash = object.blockHash ?? \"\";\n    message.blockTimestamp = object.blockTimestamp ?? 0;\n    message.transactionsConfirmed = object.transactionsConfirmed?.map((e) => e) || [];\n    message.ecsEvents = object.ecsEvents?.map((e) => ECSEvent.fromPartial(e)) || [];\n    return message;\n  },\n};\n\n/** The Stream Service definition. */\nexport type ECSStreamServiceDefinition = typeof ECSStreamServiceDefinition;\nexport const ECSStreamServiceDefinition = {\n  name: \"ECSStreamService\",\n  fullName: \"ecsstream.ECSStreamService\",\n  methods: {\n    /** Opens a cursor to receive the latest ECS events and additional data specified via request. */\n    subscribeToStreamLatest: {\n      name: \"SubscribeToStreamLatest\",\n      requestType: ECSStreamBlockBundleRequest,\n      requestStream: false,\n      responseType: ECSStreamBlockBundleReply,\n      responseStream: true,\n      options: {},\n    },\n  },\n} as const;\n\nexport interface ECSStreamServiceServiceImplementation<CallContextExt = {}> {\n  /** Opens a cursor to receive the latest ECS events and additional data specified via request. */\n  subscribeToStreamLatest(\n    request: ECSStreamBlockBundleRequest,\n    context: CallContext & CallContextExt\n  ): ServerStreamingMethodResult<DeepPartial<ECSStreamBlockBundleReply>>;\n}\n\nexport interface ECSStreamServiceClient<CallOptionsExt = {}> {\n  /** Opens a cursor to receive the latest ECS events and additional data specified via request. */\n  subscribeToStreamLatest(\n    request: DeepPartial<ECSStreamBlockBundleRequest>,\n    options?: CallOptions & CallOptionsExt\n  ): AsyncIterable<ECSStreamBlockBundleReply>;\n}\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nexport type ServerStreamingMethodResult<Response> = { [Symbol.asyncIterator](): AsyncIterator<Response, void> };\n","export {\n  CallOptions,\n  ClientError,\n  ClientMiddleware,\n  ClientMiddlewareCall,\n  ClientMiddlewareCallRequest,\n  ClientMiddlewareCallResponse,\n  composeClientMiddleware,\n  Metadata,\n  MetadataConstructor,\n  MetadataInit,\n  MetadataValue,\n  MethodDescriptor,\n  Status,\n} from 'nice-grpc-common';\n\nexport * from './service-definitions';\n\nexport * from './client/channel';\nexport * from './client/ClientFactory';\nexport * from './client/Client';\n","import { Result } from \"@ethersproject/abi\";\nimport { Components, ComponentValue, EntityID, SchemaOf } from \"@latticexyz/recs\";\nimport { TxMetadata } from \"@latticexyz/services/protobuf/ts/ecs-stream/ecs-stream\";\nimport { Cached } from \"@latticexyz/utils\";\nimport { BaseContract, BigNumber, ContractInterface } from \"ethers\";\nimport { Observable } from \"rxjs\";\nimport { SyncState } from \"./workers\";\n\nexport interface NetworkConfig {\n  chainId: number;\n  privateKey?: string;\n  clock: ClockConfig;\n  provider: ProviderConfig;\n  snapshotServiceUrl?: string;\n  streamServiceUrl?: string;\n  initialBlockNumber?: number;\n  blockExplorer?: string;\n  cacheAgeThreshold?: number;\n  cacheInterval?: number;\n  encoders?: boolean;\n  pruneOptions?: { playerAddress: string; hashedComponentId: string };\n}\n\nexport interface ClockConfig {\n  period: number;\n  initialTime: number;\n  syncInterval: number;\n}\n\nexport type Clock = {\n  time$: Observable<number>;\n  currentTime: number;\n  lastUpdateTime: number;\n  update: (time: number, maintainStale?: boolean) => void;\n  dispose: () => void;\n};\n\nexport interface ProviderConfig {\n  chainId: number;\n  jsonRpcUrl: string;\n  wsRpcUrl?: string;\n  options?: { batch?: boolean; pollingInterval?: number; skipNetworkCheck?: boolean };\n}\n\nexport type Contracts = {\n  [key: string]: BaseContract;\n};\n\nexport type ContractConfig = {\n  address: string;\n  abi: ContractInterface;\n};\n\nexport type ContractsConfig<C extends Contracts> = {\n  [key in keyof C]: ContractConfig;\n};\n\nexport type TxQueue<C extends Contracts> = Cached<C>;\n\nexport type ContractTopics = {\n  key: string;\n  topics: string[][];\n};\n\nexport type ContractEvent<C extends Contracts> = {\n  contractKey: keyof C;\n  eventKey: string;\n  args: Result;\n  txHash: string;\n  lastEventInTx: boolean;\n};\n\n// Mapping from hashed contract component id to client component key\nexport type Mappings<C extends Components> = {\n  [hashedContractId: string]: keyof C;\n};\n\nexport type NetworkComponentUpdate<C extends Components = Components> = {\n  [key in keyof C]: {\n    type: NetworkEvents.NetworkComponentUpdate;\n    component: key & string;\n    value: ComponentValue<SchemaOf<C[key]>> | undefined;\n  };\n}[keyof C] & {\n  entity: EntityID;\n  lastEventInTx: boolean;\n  txHash: string;\n  txMetadata?: TxMetadata;\n  blockNumber: number;\n};\n\nexport type SystemCallTransaction = {\n  hash: string;\n  to: string;\n  data: string;\n  value: BigNumber;\n};\n\nexport type SystemCall<C extends Components = Components> = {\n  type: NetworkEvents.SystemCall;\n  tx: SystemCallTransaction;\n  updates: NetworkComponentUpdate<C>[];\n};\n\nexport enum NetworkEvents {\n  SystemCall = \"SystemCall\",\n  NetworkComponentUpdate = \"NetworkComponentUpdate\",\n}\n\nexport type NetworkEvent<C extends Components = Components> = NetworkComponentUpdate<C> | SystemCall<C>;\n\nexport function isSystemCallEvent<C extends Components>(e: NetworkEvent<C>): e is SystemCall<C> {\n  return e.type === NetworkEvents.SystemCall;\n}\n\nexport function isNetworkComponentUpdateEvent<C extends Components>(\n  e: NetworkEvent<C>\n): e is NetworkComponentUpdate<C> {\n  return e.type === NetworkEvents.NetworkComponentUpdate;\n}\n\nexport type SyncWorkerConfig = {\n  provider: ProviderConfig;\n  initialBlockNumber: number;\n  worldContract: ContractConfig;\n  disableCache?: boolean;\n  chainId: number;\n  snapshotServiceUrl?: string;\n  streamServiceUrl?: string;\n  fetchSystemCalls?: boolean;\n  cacheInterval?: number;\n  cacheAgeThreshold?: number;\n  snapshotNumChunks?: number;\n  pruneOptions?: { playerAddress: string; hashedComponentId: string };\n};\n\nexport enum ContractSchemaValue {\n  BOOL,\n  INT8,\n  INT16,\n  INT32,\n  INT64,\n  INT128,\n  INT256,\n  INT,\n  UINT8,\n  UINT16,\n  UINT32,\n  UINT64,\n  UINT128,\n  UINT256,\n  BYTES,\n  STRING,\n  ADDRESS,\n  BYTES4,\n  BOOL_ARRAY,\n  INT8_ARRAY,\n  INT16_ARRAY,\n  INT32_ARRAY,\n  INT64_ARRAY,\n  INT128_ARRAY,\n  INT256_ARRAY,\n  INT_ARRAY,\n  UINT8_ARRAY,\n  UINT16_ARRAY,\n  UINT32_ARRAY,\n  UINT64_ARRAY,\n  UINT128_ARRAY,\n  UINT256_ARRAY,\n  BYTES_ARRAY,\n  STRING_ARRAY,\n}\n\nexport const ContractSchemaValueId: { [key in ContractSchemaValue]: string } = {\n  [ContractSchemaValue.BOOL]: \"bool\",\n  [ContractSchemaValue.INT8]: \"int8\",\n  [ContractSchemaValue.INT16]: \"int16\",\n  [ContractSchemaValue.INT32]: \"int32\",\n  [ContractSchemaValue.INT64]: \"int64\",\n  [ContractSchemaValue.INT128]: \"int128\",\n  [ContractSchemaValue.INT256]: \"int256\",\n  [ContractSchemaValue.INT]: \"int\",\n  [ContractSchemaValue.UINT8]: \"uint8\",\n  [ContractSchemaValue.UINT16]: \"uint16\",\n  [ContractSchemaValue.UINT32]: \"uint32\",\n  [ContractSchemaValue.UINT64]: \"uint64\",\n  [ContractSchemaValue.UINT128]: \"uint128\",\n  [ContractSchemaValue.UINT256]: \"uint256\",\n  [ContractSchemaValue.BYTES]: \"bytes\",\n  [ContractSchemaValue.STRING]: \"string\",\n  [ContractSchemaValue.ADDRESS]: \"address\",\n  [ContractSchemaValue.BYTES4]: \"bytes4\",\n  [ContractSchemaValue.BOOL_ARRAY]: \"bool[]\",\n  [ContractSchemaValue.INT8_ARRAY]: \"int8[]\",\n  [ContractSchemaValue.INT16_ARRAY]: \"int16[]\",\n  [ContractSchemaValue.INT32_ARRAY]: \"int32[]\",\n  [ContractSchemaValue.INT64_ARRAY]: \"int64[]\",\n  [ContractSchemaValue.INT128_ARRAY]: \"int128[]\",\n  [ContractSchemaValue.INT256_ARRAY]: \"int256[]\",\n  [ContractSchemaValue.INT_ARRAY]: \"int[]\",\n  [ContractSchemaValue.UINT8_ARRAY]: \"uint8[]\",\n  [ContractSchemaValue.UINT16_ARRAY]: \"uint16[]\",\n  [ContractSchemaValue.UINT32_ARRAY]: \"uint32[]\",\n  [ContractSchemaValue.UINT64_ARRAY]: \"uint64[]\",\n  [ContractSchemaValue.UINT128_ARRAY]: \"uint128[]\",\n  [ContractSchemaValue.UINT256_ARRAY]: \"uint256[]\",\n  [ContractSchemaValue.BYTES_ARRAY]: \"bytes[]\",\n  [ContractSchemaValue.STRING_ARRAY]: \"string[]\",\n};\n\nexport const ContractSchemaValueArrayToElement = {\n  [ContractSchemaValue.BOOL_ARRAY]: ContractSchemaValue.BOOL,\n  [ContractSchemaValue.INT8_ARRAY]: ContractSchemaValue.INT8,\n  [ContractSchemaValue.INT16_ARRAY]: ContractSchemaValue.INT16,\n  [ContractSchemaValue.INT32_ARRAY]: ContractSchemaValue.INT32,\n  [ContractSchemaValue.INT64_ARRAY]: ContractSchemaValue.INT64,\n  [ContractSchemaValue.INT128_ARRAY]: ContractSchemaValue.INT128,\n  [ContractSchemaValue.INT256_ARRAY]: ContractSchemaValue.INT256,\n  [ContractSchemaValue.INT_ARRAY]: ContractSchemaValue.INT,\n  [ContractSchemaValue.UINT8_ARRAY]: ContractSchemaValue.UINT8,\n  [ContractSchemaValue.UINT16_ARRAY]: ContractSchemaValue.UINT16,\n  [ContractSchemaValue.UINT32_ARRAY]: ContractSchemaValue.UINT32,\n  [ContractSchemaValue.UINT64_ARRAY]: ContractSchemaValue.UINT64,\n  [ContractSchemaValue.UINT128_ARRAY]: ContractSchemaValue.UINT128,\n  [ContractSchemaValue.UINT256_ARRAY]: ContractSchemaValue.INT256,\n  [ContractSchemaValue.BYTES_ARRAY]: ContractSchemaValue.BYTES,\n  [ContractSchemaValue.STRING_ARRAY]: ContractSchemaValue.STRING,\n} as { [key in ContractSchemaValue]: ContractSchemaValue };\n\nexport type ContractSchemaValueTypes = {\n  [ContractSchemaValue.BOOL]: boolean;\n  [ContractSchemaValue.INT8]: number;\n  [ContractSchemaValue.INT16]: number;\n  [ContractSchemaValue.INT32]: number;\n  [ContractSchemaValue.INT64]: string;\n  [ContractSchemaValue.INT128]: string;\n  [ContractSchemaValue.INT256]: string;\n  [ContractSchemaValue.INT]: string;\n  [ContractSchemaValue.UINT8]: number;\n  [ContractSchemaValue.UINT16]: number;\n  [ContractSchemaValue.UINT32]: number;\n  [ContractSchemaValue.UINT64]: string;\n  [ContractSchemaValue.UINT128]: string;\n  [ContractSchemaValue.UINT256]: string;\n  [ContractSchemaValue.BYTES]: string;\n  [ContractSchemaValue.STRING]: string;\n  [ContractSchemaValue.ADDRESS]: string;\n  [ContractSchemaValue.BYTES4]: string;\n  [ContractSchemaValue.BOOL_ARRAY]: boolean[];\n  [ContractSchemaValue.INT8_ARRAY]: number[];\n  [ContractSchemaValue.INT16_ARRAY]: number[];\n  [ContractSchemaValue.INT32_ARRAY]: number[];\n  [ContractSchemaValue.INT64_ARRAY]: string[];\n  [ContractSchemaValue.INT128_ARRAY]: string[];\n  [ContractSchemaValue.INT256_ARRAY]: string[];\n  [ContractSchemaValue.INT_ARRAY]: string[];\n  [ContractSchemaValue.UINT8_ARRAY]: number[];\n  [ContractSchemaValue.UINT16_ARRAY]: number[];\n  [ContractSchemaValue.UINT32_ARRAY]: number[];\n  [ContractSchemaValue.UINT64_ARRAY]: string[];\n  [ContractSchemaValue.UINT128_ARRAY]: string[];\n  [ContractSchemaValue.UINT256_ARRAY]: string[];\n  [ContractSchemaValue.BYTES_ARRAY]: string[];\n  [ContractSchemaValue.STRING_ARRAY]: string[];\n};\n\nexport type SyncStateStruct = {\n  state: SyncState;\n  msg: string;\n  percentage: number;\n};\n","import { arrayToIterator, deferred, mergeIterators, transformIterator } from \"@latticexyz/utils\";\n\nconst indexedDB = self.indexedDB;\nconst VERSION = 2;\n\n/**\n * Initialize an indexedDB store.\n *\n * @param db IDBDatabase\n * @param storeId Id of the store to initialize\n */\nfunction initStore(db: IDBDatabase, storeId: string) {\n  if (!db.objectStoreNames.contains(storeId)) {\n    db.createObjectStore(storeId);\n  }\n}\n\n/**\n * Initialize an indexedDB database.\n *\n * @param dbId Id of the database to initialize.\n * @param stores Keys of the stores to initialize.\n * @param version Optional: version of the database to initialize.\n * @param idb Optional: custom indexedDB factory\n * @returns Promise resolving with IDBDatabase object\n */\nfunction initDb(dbId: string, stores: string[], version = VERSION, idb: IDBFactory = indexedDB) {\n  const [resolve, reject, promise] = deferred<IDBDatabase>();\n\n  const request = idb.open(dbId, version);\n\n  // Create store and index\n  request.onupgradeneeded = () => {\n    const db = request.result;\n    for (const store of stores) {\n      initStore(db, store);\n    }\n  };\n\n  request.onsuccess = () => {\n    const db = request.result;\n    resolve(db);\n  };\n\n  request.onerror = (error) => {\n    reject(new Error(JSON.stringify(error)));\n  };\n\n  return promise;\n}\n\ntype Stores = { [key: string]: unknown };\ntype StoreKey<S extends Stores> = keyof S & string;\n\n/**\n * Initialize an abstracted Cache object to simplify interaction with the indexedDB database.\n *\n * @param id Id of the database to initialize.\n * @param stores Keys of the stores to initialize.\n * @param version Optional: version of the database to initialize.\n * @param idb Optional: custom indexedDB factory\n * @returns Promise resolving with Cache object\n */\nexport async function initCache<S extends Stores>(\n  id: string,\n  stores: StoreKey<S>[],\n  version?: number,\n  idb?: IDBFactory\n) {\n  const db = await initDb(id, stores, version, idb);\n\n  function openStore(store: StoreKey<S>): IDBObjectStore {\n    const tx = db.transaction(store, \"readwrite\");\n    const objectStore = tx.objectStore(store);\n    return objectStore;\n  }\n\n  function set<Store extends StoreKey<S>>(store: Store, key: string, value: S[Store], ignoreResult = false) {\n    const objectStore = openStore(store);\n    const request = objectStore.put(value, key);\n\n    if (ignoreResult) return;\n\n    const [resolve, reject, promise] = deferred<void>();\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      resolve();\n    };\n\n    return promise;\n  }\n\n  function get<Store extends StoreKey<S>>(store: Store, key: string): Promise<S[Store] | undefined> {\n    const [resolve, reject, promise] = deferred<S[Store] | undefined>();\n\n    const objectStore = openStore(store);\n    const request = objectStore.get(key);\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      const item = request.result;\n      resolve(item);\n    };\n\n    return promise;\n  }\n\n  function remove(store: StoreKey<S>, key: string): Promise<void> {\n    const [resolve, reject, promise] = deferred<void>();\n\n    const objectStore = openStore(store);\n    const request = objectStore.delete(key);\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      resolve();\n    };\n\n    return promise;\n  }\n\n  function keys(store: StoreKey<S>): Promise<IterableIterator<string>> {\n    const [resolve, reject, promise] = deferred<IterableIterator<string>>();\n\n    const objectStore = openStore(store);\n    const request = objectStore.getAllKeys();\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      const rawKeys = arrayToIterator(request.result);\n      const stringKeys = transformIterator(rawKeys, (k) => k.toString());\n      resolve(stringKeys);\n    };\n\n    return promise;\n  }\n\n  function values<Store extends StoreKey<S>>(store: Store): Promise<IterableIterator<S[Store]>> {\n    const [resolve, reject, promise] = deferred<IterableIterator<S[Store]>>();\n\n    const objectStore = openStore(store);\n    const request = objectStore.getAll();\n\n    request.onerror = (error) => {\n      reject(new Error(JSON.stringify(error)));\n    };\n\n    request.onsuccess = () => {\n      resolve(arrayToIterator(request.result));\n    };\n\n    return promise;\n  }\n\n  async function entries<Store extends StoreKey<S>>(store: Store): Promise<IterableIterator<[string, S[Store]]>> {\n    const [keyIterator, valueIterator] = await Promise.all([keys(store), values(store)]);\n    return mergeIterators(keyIterator, valueIterator);\n  }\n\n  return { set, get, remove, keys, values, entries, db };\n}\n","import { EntityID } from \"@latticexyz/recs\";\nimport { Message } from \"@latticexyz/services/protobuf/ts/ecs-relay/ecs-relay\";\nimport { BigNumber } from \"ethers\";\nimport { keccak256 } from \"ethers/lib/utils\";\n\n// Message payload to sign and use to recover signer\nexport function messagePayload(msg: Message) {\n  return `(${msg.version},${msg.id},${keccak256(msg.data)},${msg.timestamp})`;\n}\n\n// Remove zero padding from all entity ids\nexport function formatEntityID(entityID: string | EntityID | BigNumber): EntityID {\n  if (BigNumber.isBigNumber(entityID) || entityID.substring(0, 2) === \"0x\") {\n    return BigNumber.from(entityID).toHexString() as EntityID;\n  }\n  return entityID as EntityID;\n}\n\n// Remove zero padding from all component ids\nexport function formatComponentID(componentID: string | BigNumber): string {\n  return BigNumber.from(componentID).toHexString();\n}\n","import createDebug from \"debug\";\n\nexport const debug = createDebug(\"mud:network\");\n","import { debug as parentDebug } from \"../debug\";\n\nexport const debug = parentDebug.extend(\"workers\");\n","import { Components, ComponentValue, EntityID, SchemaOf } from \"@latticexyz/recs\";\nimport { packTuple, transformIterator, unpackTuple } from \"@latticexyz/utils\";\nimport { initCache } from \"../initCache\";\nimport { ECSStateReply } from \"@latticexyz/services/protobuf/ts/ecs-snapshot/ecs-snapshot\";\nimport { NetworkComponentUpdate, NetworkEvents } from \"../types\";\nimport { formatEntityID } from \"../utils\";\nimport { debug as parentDebug } from \"./debug\";\n\nconst debug = parentDebug.extend(\"CacheStore\");\n\nexport type State = Map<number, ComponentValue>;\nexport type CacheStore = ReturnType<typeof createCacheStore>;\nexport type ECSCache = Awaited<ReturnType<typeof getIndexDbECSCache>>;\n\nexport function getCacheId(namespace: string, chainId: number, worldAddress: string) {\n  return `${namespace}-${chainId}-${worldAddress}`;\n}\n\nexport function createCacheStore() {\n  const components: string[] = [];\n  const componentToIndex = new Map<string, number>();\n  const entities: string[] = [];\n  const entityToIndex = new Map<string, number>();\n  const blockNumber = 0;\n  const state: State = new Map<number, ComponentValue>();\n\n  return { components, componentToIndex, entities, entityToIndex, blockNumber, state };\n}\n\nexport function storeEvent<Cm extends Components>(\n  cacheStore: CacheStore,\n  { component, entity, value, blockNumber }: Omit<NetworkComponentUpdate<Cm>, \"lastEventInTx\" | \"txHash\">\n) {\n  // Remove the 0 padding from all entityes\n  const normalizedEntity = formatEntityID(entity);\n\n  const { components, entities, componentToIndex, entityToIndex, state } = cacheStore;\n\n  // Get component index\n  let componentIndex = componentToIndex.get(component);\n  if (componentIndex == null) {\n    componentIndex = components.push(component) - 1;\n    componentToIndex.set(component as string, componentIndex);\n  }\n\n  // Get entity index\n  let entityIndex = entityToIndex.get(normalizedEntity);\n  if (entityIndex == null) {\n    entityIndex = entities.push(normalizedEntity) - 1;\n    entityToIndex.set(normalizedEntity, entityIndex);\n  }\n\n  // Entity index gets the right 24 bits, component index the left 8 bits\n  const key = packTuple([componentIndex, entityIndex]);\n  if (value == null) state.delete(key);\n  else state.set(key, value);\n\n  // Set block number to one less than the last received event's block number\n  // (Events are expected to be ordered, so once a new block number appears,\n  // the previous block number is done processing)\n  cacheStore.blockNumber = blockNumber - 1;\n}\n\nexport function storeEvents<Cm extends Components>(\n  cacheStore: CacheStore,\n  events: Omit<NetworkComponentUpdate<Cm>, \"lastEventInTx\" | \"txHash\">[]\n) {\n  for (const event of events) {\n    storeEvent(cacheStore, event);\n  }\n}\n\nexport function getCacheStoreEntries<Cm extends Components>({\n  blockNumber,\n  state,\n  components,\n  entities,\n}: CacheStore): IterableIterator<NetworkComponentUpdate<Cm>> {\n  return transformIterator(state.entries(), ([key, value]) => {\n    const [componentIndex, entityIndex] = unpackTuple(key);\n    const component = components[componentIndex];\n    const entity = entities[entityIndex];\n\n    if (component == null || entity == null) {\n      throw new Error(`Unknown component / entity: ${component}, ${entity}`);\n    }\n\n    const ecsEvent: NetworkComponentUpdate<Cm> = {\n      type: NetworkEvents.NetworkComponentUpdate,\n      component,\n      entity: entity as EntityID,\n      value: value as ComponentValue<SchemaOf<Cm[keyof Cm]>>,\n      lastEventInTx: false,\n      txHash: \"cache\",\n      blockNumber: blockNumber,\n    };\n\n    return ecsEvent;\n  });\n}\n\nexport function mergeCacheStores(stores: CacheStore[]): CacheStore {\n  const result = createCacheStore();\n\n  // Sort by block number (increasing)\n  const sortedStores = [...stores].sort((a, b) => a.blockNumber - b.blockNumber);\n\n  // Insert the cached events into the result store (from stores with low block number to high number)\n  for (const store of sortedStores) {\n    for (const updateEvent of getCacheStoreEntries(store)) {\n      storeEvent(result, updateEvent);\n    }\n  }\n\n  result.blockNumber = sortedStores[sortedStores.length - 1].blockNumber;\n\n  return result;\n}\n\nexport async function saveCacheStoreToIndexDb(cache: ECSCache, store: CacheStore) {\n  debug(\"store cache with size\", store.state.size, \"at block\", store.blockNumber);\n  await cache.set(\"ComponentValues\", \"current\", store.state);\n  await cache.set(\"Mappings\", \"components\", store.components);\n  await cache.set(\"Mappings\", \"entities\", store.entities);\n  await cache.set(\"BlockNumber\", \"current\", store.blockNumber);\n}\n\nexport async function loadIndexDbCacheStore(cache: ECSCache): Promise<CacheStore> {\n  const state = (await cache.get(\"ComponentValues\", \"current\")) ?? new Map<number, ComponentValue>();\n  const blockNumber = (await cache.get(\"BlockNumber\", \"current\")) ?? 0;\n  const components = (await cache.get(\"Mappings\", \"components\")) ?? [];\n  const entities = (await cache.get(\"Mappings\", \"entities\")) ?? [];\n  const componentToIndex = new Map<string, number>();\n  const entityToIndex = new Map<string, number>();\n\n  // Init componentToIndex map\n  for (let i = 0; i < components.length; i++) {\n    componentToIndex.set(components[i], i);\n  }\n\n  // Init entityToIndex map\n  for (let i = 0; i < entities.length; i++) {\n    entityToIndex.set(entities[i], i);\n  }\n\n  return { state, blockNumber, components, entities, componentToIndex, entityToIndex };\n}\n\nexport async function getIndexDBCacheStoreBlockNumber(cache: ECSCache): Promise<number> {\n  return (await cache.get(\"BlockNumber\", \"current\")) ?? 0;\n}\n\nexport function getIndexDbECSCache(chainId: number, worldAddress: string, version?: number, idb?: IDBFactory) {\n  return initCache<{\n    ComponentValues: State;\n    BlockNumber: number;\n    Mappings: string[];\n    Snapshot: ECSStateReply;\n  }>(\n    getCacheId(\"ECSCache\", chainId, worldAddress), // Store a separate cache for each World contract address\n    [\"ComponentValues\", \"BlockNumber\", \"Mappings\", \"Snapshot\"],\n    version,\n    idb\n  );\n}\n","import {\n  JsonRpcProvider,\n  WebSocketProvider,\n  Block,\n  Log,\n  Formatter,\n  BaseProvider,\n  TransactionRequest,\n} from \"@ethersproject/providers\";\nimport { callWithRetry, extractEncodedArguments, range, sleep } from \"@latticexyz/utils\";\nimport { BigNumber, Contract } from \"ethers\";\nimport { resolveProperties, defaultAbiCoder as abi } from \"ethers/lib/utils\";\nimport { Contracts, ContractTopics, ContractEvent, ContractsConfig } from \"./types\";\n\n/**\n * Await network to be reachable.\n *\n * @param provider ethers JsonRpcProvider\n * @param wssProvider ethers WebSocketProvider\n * @returns Promise resolving once the network is reachable\n */\nexport async function ensureNetworkIsUp(provider: JsonRpcProvider, wssProvider?: WebSocketProvider): Promise<void> {\n  const networkInfoPromise = () => {\n    return Promise.all([provider.getBlockNumber(), wssProvider ? wssProvider.getBlockNumber() : Promise.resolve()]);\n  };\n  await callWithRetry(networkInfoPromise, [], 10, 1000);\n  return;\n}\n\n/**\n * Fetch the latest Ethereum block\n *\n * @param provider ethers JsonRpcProvider\n * @param requireMinimumBlockNumber Minimal required block number.\n * If the latest block number is below this number, the method waits for 1300ms and tries again, for at most 10 times.\n * @returns Promise resolving with the latest Ethereum block\n */\nexport async function fetchBlock(provider: JsonRpcProvider, requireMinimumBlockNumber?: number): Promise<Block> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const _ of range(10)) {\n    const blockPromise = async () => {\n      const rawBlock = await provider.perform(\"getBlock\", {\n        includeTransactions: false,\n        blockTag: provider.formatter.blockTag(await provider._getBlockTag(\"latest\")),\n      });\n      return provider.formatter.block(rawBlock);\n    };\n    const block = await callWithRetry<Block>(blockPromise, [], 10, 1000);\n    if (requireMinimumBlockNumber && block.number < requireMinimumBlockNumber) {\n      await sleep(300);\n      continue;\n    } else {\n      return block;\n    }\n  }\n  throw new Error(\"Could not fetch a block with blockNumber \" + requireMinimumBlockNumber);\n}\n\n/**\n * Fetch logs with the given topics from a given block range.\n *\n * @param provider ethers JsonRpcProvider\n * @param topics Topics to fetch logs for\n * @param startBlockNumber Start of block range to fetch logs from (inclusive)\n * @param endBlockNumber End of block range to fetch logs from (inclusive)\n * @param contracts Contracts to fetch logs from\n * @param requireMinimumBlockNumber Minimal block number required to fetch blocks\n * @returns Promise resolving with an array of logs from the specified block range and topics\n */\nexport async function fetchLogs<C extends Contracts>(\n  provider: JsonRpcProvider,\n  topics: ContractTopics[],\n  startBlockNumber: number,\n  endBlockNumber: number,\n  contracts: ContractsConfig<C>,\n  requireMinimumBlockNumber?: number\n): Promise<Array<Log>> {\n  const getLogPromise = async (contractAddress: string, topics: string[][]): Promise<Array<Log>> => {\n    const params = await resolveProperties({\n      filter: provider._getFilter({\n        fromBlock: startBlockNumber, // inclusive\n        toBlock: endBlockNumber, // inclusive\n        address: contractAddress,\n        topics: topics,\n      }),\n    });\n    const logs: Array<Log> = await provider.perform(\"getLogs\", params);\n    logs.forEach((log) => {\n      if (log.removed == null) {\n        log.removed = false;\n      }\n    });\n    return Formatter.arrayOf(provider.formatter.filterLog.bind(provider.formatter))(logs);\n  };\n\n  const blockPromise = async () => {\n    const _blockNumber = await provider.perform(\"getBlockNumber\", {});\n    const blockNumber = BigNumber.from(_blockNumber).toNumber();\n    return blockNumber;\n  };\n\n  const getLogPromises = () => {\n    const logPromises: Array<Promise<Array<Log>>> = [];\n    for (const [k, c] of Object.entries(contracts)) {\n      const topicsForContract = topics.find((t) => t.key === k)?.topics;\n      if (topicsForContract) {\n        logPromises.push(getLogPromise(c.address, topicsForContract));\n      }\n    }\n    return logPromises;\n  };\n\n  if (requireMinimumBlockNumber) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (const _ in range(10)) {\n      const call = () => Promise.all([blockPromise(), ...getLogPromises()]);\n      const [blockNumber, logs] = await callWithRetry<[number, ...Array<Array<Log>>]>(call, [], 10, 1000);\n      if (blockNumber < requireMinimumBlockNumber) {\n        await sleep(500);\n      } else {\n        return logs.flat();\n      }\n    }\n    throw new Error(\"Could not fetch logs with a required minimum block number\");\n  } else {\n    const call = () => Promise.all([...getLogPromises()]);\n    const logs = await callWithRetry<Array<Array<Log>>>(call, [], 10, 1000);\n    return logs.flat();\n  }\n}\n\n/**\n * Fetch events from block range, ordered by block, transaction index and log index\n *\n * @param provider ethers JsonRpcProvider\n * @param topics Topics to fetch events for\n * @param startBlockNumber Start of block range to fetch events from (inclusive)\n * @param endBlockNumber End of block range to fetch events from (inclusive)\n * @param contracts Contracts to fetch events from\n * @param supportsBatchQueries Set to true if the provider supports batch queries (recommended)\n * @returns Promise resolving with an array of ContractEvents\n */\nexport async function fetchEventsInBlockRange<C extends Contracts>(\n  provider: JsonRpcProvider,\n  topics: ContractTopics[],\n  startBlockNumber: number,\n  endBlockNumber: number,\n  contracts: ContractsConfig<C>,\n  supportsBatchQueries?: boolean\n): Promise<Array<ContractEvent<C>>> {\n  const logs: Array<Log> = await fetchLogs(\n    provider,\n    topics,\n    startBlockNumber,\n    endBlockNumber,\n    contracts,\n    supportsBatchQueries ? endBlockNumber : undefined\n  );\n  // console.log(`[Network] fetched ${logs.length} events from ${startBlockNumber} -> ${endBlockNumber}`);\n  // console.log(`got ${logs.length} logs from range ${startBlockNumber} -> ${endBlockNumber}`);\n  // we need to sort per block, transaction index, and log index\n  logs.sort((a: Log, b: Log) => {\n    if (a.blockNumber < b.blockNumber) {\n      return -1;\n    } else if (a.blockNumber > b.blockNumber) {\n      return 1;\n    } else {\n      if (a.transactionIndex < b.transactionIndex) {\n        return -1;\n      } else if (a.transactionIndex > b.transactionIndex) {\n        return 1;\n      } else {\n        return a.logIndex < b.logIndex ? -1 : 1;\n      }\n    }\n  });\n\n  // construct an object: address => keyof C\n  const addressToContractKey: { [key in string]: keyof C } = {};\n  for (const contractKey of Object.keys(contracts)) {\n    addressToContractKey[contracts[contractKey].address.toLowerCase()] = contractKey;\n  }\n\n  // parse the logs to get the logs description, then turn them into contract events\n  const contractEvents: Array<ContractEvent<C>> = [];\n\n  for (let i = 0; i < logs.length; i++) {\n    const log = logs[i];\n    const contractKey = addressToContractKey[log.address.toLowerCase()];\n    if (!contractKey) {\n      throw new Error(\n        \"This should not happen. An event's address is not part of the contracts dictionnary: \" + log.address\n      );\n    }\n\n    const { address, abi } = contracts[contractKey];\n    const contract = new Contract(address, abi);\n    try {\n      const logDescription = contract.interface.parseLog(log);\n\n      // Set a flag if this is the last event in this transaction\n      const lastEventInTx = logs[i + 1]?.transactionHash !== log.transactionHash;\n\n      contractEvents.push({\n        contractKey,\n        eventKey: logDescription.name,\n        args: logDescription.args,\n        txHash: log.transactionHash,\n        lastEventInTx,\n      });\n    } catch (e) {\n      console.warn(\"Error\", e);\n      console.warn(\"A log couldn't be parsed with the corresponding contract interface!\");\n    }\n  }\n\n  return contractEvents;\n}\n\n/**\n * Get the revert reason from a given transaction hash\n *\n * @param txHash Transaction hash to get the revert reason from\n * @param provider ethers Provider\n * @returns Promise resolving with revert reason string\n */\nexport async function getRevertReason(txHash: string, provider: BaseProvider): Promise<string> {\n  // Decoding the revert reason: https://docs.soliditylang.org/en/latest/control-structures.html#revert\n  const tx = await provider.getTransaction(txHash);\n  tx.gasPrice = undefined; // tx object contains both gasPrice and maxFeePerGas\n  const encodedRevertReason = await provider.call(tx as TransactionRequest);\n  const decodedRevertReason = abi.decode([\"string\"], extractEncodedArguments(encodedRevertReason));\n  return decodedRevertReason[0];\n}\n","import { JsonRpcBatchProvider, JsonRpcProvider, Network, Networkish } from \"@ethersproject/providers\";\nimport { ConnectionInfo } from \"ethers/lib/utils\";\n\nexport class MUDJsonRpcProvider extends JsonRpcProvider {\n  constructor(url: string | ConnectionInfo | undefined, network: Networkish) {\n    super(url, network);\n  }\n  async detectNetwork(): Promise<Network> {\n    const network = this.network;\n    if (network == null) {\n      throw new Error(\"No network\");\n    }\n    return network;\n  }\n}\n\nexport class MUDJsonRpcBatchProvider extends JsonRpcBatchProvider {\n  constructor(url?: string | ConnectionInfo | undefined, network?: Networkish | undefined) {\n    super(url, network);\n  }\n  async detectNetwork(): Promise<Network> {\n    const network = this.network;\n    if (network == null) {\n      throw new Error(\"No network\");\n    }\n    return network;\n  }\n}\n","import { Networkish, WebSocketProvider } from \"@ethersproject/providers\";\nimport { callWithRetry, observableToComputed, timeoutAfter } from \"@latticexyz/utils\";\nimport { IComputedValue, IObservableValue, observable, reaction, runInAction } from \"mobx\";\nimport { ensureNetworkIsUp } from \"./networkUtils\";\nimport { MUDJsonRpcBatchProvider, MUDJsonRpcProvider } from \"./provider\";\nimport { ProviderConfig } from \"./types\";\n\nexport type Providers = ReturnType<typeof createProvider>;\n\n/**\n * Create a JsonRpcProvider and WebsocketProvider pair\n *\n * @param config Config for the provider pair (see {@link ProviderConfig}).\n * @returns Provider pair: {\n *   json: JsonRpcProvider,\n *   ws: WebSocketProvider\n * }\n */\nexport function createProvider({ chainId, jsonRpcUrl, wsRpcUrl, options }: ProviderConfig) {\n  const network: Networkish = {\n    chainId,\n    name: \"mudChain\",\n  };\n  const providers = {\n    json: options?.batch\n      ? new MUDJsonRpcBatchProvider(jsonRpcUrl, network)\n      : new MUDJsonRpcProvider(jsonRpcUrl, network),\n    ws: wsRpcUrl ? new WebSocketProvider(wsRpcUrl, network) : undefined,\n  };\n\n  if (options?.pollingInterval) {\n    providers.json.pollingInterval = options.pollingInterval;\n  }\n\n  return providers;\n}\n\nexport enum ConnectionState {\n  DISCONNECTED,\n  CONNECTING,\n  CONNECTED,\n}\n\n/**\n * Creates a {@link createProvider provider pair} that automatically updates if the config changes\n * and automatically reconnects if the connection is lost.\n *\n * @param config Mobx computed provider config object (see {@link ProviderConfig}).\n * Automatically updates the returned provider pair if the config changes.\n * @returns Automatically reconnecting {@link createProvider provider pair} that updates if the config changes.\n */\nexport async function createReconnectingProvider(config: IComputedValue<ProviderConfig>) {\n  const connected = observable.box<ConnectionState>(ConnectionState.DISCONNECTED);\n  const providers = observable.box<Providers>() as IObservableValue<Providers>;\n  const disposers: (() => void)[] = [];\n\n  async function initProviders() {\n    // Abort if connection is currently being established\n    if (connected.get() === ConnectionState.CONNECTING) return;\n\n    // Invalidate current providers\n    runInAction(() => connected.set(ConnectionState.CONNECTING));\n\n    // Remove listeners from stale providers and close open connections\n    const prevProviders = providers.get();\n    prevProviders?.json.removeAllListeners();\n    prevProviders?.ws?.removeAllListeners();\n    try {\n      prevProviders?.ws?._websocket?.close();\n    } catch {\n      // Ignore errors when closing websocket that was not in an open state\n    }\n\n    const conf = config.get();\n\n    // Create new providers\n    await callWithRetry(async () => {\n      const newProviders = createProvider(conf);\n      // If the connection is not successful, this will throw an error, triggering a retry\n      !conf?.options?.skipNetworkCheck && (await ensureNetworkIsUp(newProviders.json, newProviders.ws));\n      runInAction(() => {\n        providers.set(newProviders);\n        connected.set(ConnectionState.CONNECTED);\n      });\n    });\n  }\n\n  // Create new providers if config changes\n  disposers.push(\n    reaction(\n      () => config.get(),\n      () => initProviders()\n    )\n  );\n\n  // Reconnect providers in case of error\n  disposers.push(\n    reaction(\n      () => providers.get(),\n      (currentProviders) => {\n        if (currentProviders?.ws?._websocket) {\n          currentProviders.ws._websocket.onerror = initProviders;\n          currentProviders.ws._websocket.onclose = () => {\n            // Only reconnect if closed unexpectedly\n            if (connected.get() === ConnectionState.CONNECTED) {\n              initProviders();\n            }\n          };\n        }\n      }\n    )\n  );\n\n  // Keep websocket connection alive\n  const keepAliveInterval = setInterval(async () => {\n    if (connected.get() !== ConnectionState.CONNECTED) return;\n    const currentProviders = providers.get();\n    if (!currentProviders?.ws) return;\n    try {\n      await timeoutAfter(currentProviders.ws.getBlockNumber(), 10000, \"Network Request Timed out\");\n    } catch {\n      initProviders();\n    }\n  }, 10000);\n  disposers.push(() => clearInterval(keepAliveInterval));\n\n  await initProviders();\n\n  return {\n    connected: observableToComputed(connected),\n    providers: observableToComputed(providers),\n    dispose: () => {\n      for (const disposer of disposers) disposer();\n      try {\n        providers.get()?.ws?._websocket?.close();\n      } catch {\n        // Ignore error if websocket is not on OPEN state\n      }\n    },\n  };\n}\n","import { BigNumber } from \"ethers\";\nimport { BytesLike, defaultAbiCoder as abi } from \"ethers/lib/utils\";\nimport {\n  ContractSchemaValue,\n  ContractSchemaValueArrayToElement,\n  ContractSchemaValueId,\n  ContractSchemaValueTypes,\n} from \"./types\";\n\nexport function flattenValue<V extends ContractSchemaValue>(\n  value: BigNumber | BigNumber[] | number | number[] | boolean | boolean[] | string | string[],\n  valueType: V\n): ContractSchemaValueTypes[V] {\n  // If value is array, recursively flatten elements\n  if (Array.isArray(value))\n    return value.map((v) =>\n      flattenValue(v, ContractSchemaValueArrayToElement[valueType])\n    ) as unknown as ContractSchemaValueTypes[V]; // Typescript things it is possible we return a nested array, but it is not\n\n  // Value is already flat\n  if (typeof value === \"number\" || typeof value === \"string\" || typeof value === \"boolean\")\n    return value as ContractSchemaValueTypes[V];\n\n  // The value returned by abi.decode is Hexable but not a ethers.BigNumber\n  value = BigNumber.from(value);\n\n  // Value is a representable number\n  if (\n    [\n      ContractSchemaValue.INT8,\n      ContractSchemaValue.INT16,\n      ContractSchemaValue.INT32,\n      ContractSchemaValue.UINT8,\n      ContractSchemaValue.UINT16,\n      ContractSchemaValue.UINT32,\n    ].includes(valueType)\n  ) {\n    return value.toNumber() as ContractSchemaValueTypes[V];\n  }\n\n  // Value should be represented as a hex string\n  if (\n    [\n      ContractSchemaValue.INT64,\n      ContractSchemaValue.INT128,\n      ContractSchemaValue.INT256,\n      ContractSchemaValue.UINT64,\n      ContractSchemaValue.UINT128,\n      ContractSchemaValue.UINT256,\n      ContractSchemaValue.BYTES,\n      ContractSchemaValue.ADDRESS,\n      ContractSchemaValue.BYTES4,\n    ].includes(valueType)\n  ) {\n    return value.toHexString() as ContractSchemaValueTypes[V];\n  }\n\n  // Value should be represented a plain string\n  if ([ContractSchemaValue.STRING].includes(valueType)) {\n    return value.toString() as ContractSchemaValueTypes[V];\n  }\n\n  throw new Error(\"Unknown value type\");\n}\n\n/**\n * Construct a decoder function from given keys and valueTypes.\n * The consumer is responsible for providing a type D matching the keys and valueTypes.\n *\n * @param keys Keys of the component value schema.\n * @param valueTypes Value types if the component value schema.\n * @returns Function to decode encoded hex value to component value.\n */\nexport function createDecoder<D extends { [key: string]: unknown }>(\n  keys: (keyof D)[],\n  valueTypes: ContractSchemaValue[]\n): (data: BytesLike) => D {\n  return (data: BytesLike) => {\n    // Decode data with the schema values provided by the component\n    const decoded = abi.decode(\n      valueTypes.map((valueType) => ContractSchemaValueId[valueType]),\n      data\n    );\n\n    // Now keys and valueTypes lengths must match\n    if (keys.length !== valueTypes.length) {\n      throw new Error(\"Component schema keys and values length does not match\");\n    }\n\n    // Construct the client component value\n    const result: Partial<{ [key in keyof D]: unknown }> = {};\n    for (let i = 0; i < keys.length; i++) {\n      result[keys[i]] = flattenValue(decoded[i], valueTypes[i]);\n    }\n\n    return result as D;\n  };\n}\n","import { ethers, VoidSigner } from \"ethers\";\nimport { ContractTopics } from \"./types\";\nimport { Contracts } from \"./types\";\n\nexport type TopicsConfig<C extends Contracts> = {\n  [ContractType in keyof C]: {\n    abi: ethers.ContractInterface;\n    topics: (keyof C[ContractType][\"filters\"])[];\n  };\n};\n\nexport function createTopics<C extends Contracts>(config: TopicsConfig<C>): ContractTopics[] {\n  const contractTopics: ContractTopics[] = [];\n  for (const key of Object.keys(config)) {\n    const { abi, topics } = config[key];\n    const dummyContract = new ethers.Contract(\n      ethers.constants.AddressZero,\n      abi,\n      new VoidSigner(ethers.constants.AddressZero)\n    ) as C[typeof key];\n    const contractTopic = [\n      topics\n        .map((t) => dummyContract.filters[t as string]().topics)\n        .map((topicsOrUndefined) => (topicsOrUndefined || [])[0]),\n    ] as Array<Array<string>>;\n    contractTopics.push({\n      key,\n      topics: contractTopic,\n    });\n  }\n  return contractTopics;\n}\n","import { JsonRpcProvider, Network } from \"@ethersproject/providers\";\nimport { EntityID, ComponentValue, Components } from \"@latticexyz/recs\";\nimport { to256BitString, awaitPromise, range, Uint8ArrayToHexString } from \"@latticexyz/utils\";\nimport { BytesLike, Contract, BigNumber } from \"ethers\";\nimport { Observable, map, concatMap, of, from } from \"rxjs\";\nimport { createDecoder } from \"../createDecoder\";\nimport { createTopics } from \"../createTopics\";\nimport { fetchEventsInBlockRange } from \"../networkUtils\";\nimport {\n  ECSStateReply,\n  ECSStateReplyV2,\n  ECSStateSnapshotServiceClient,\n  ECSStateSnapshotServiceDefinition,\n} from \"@latticexyz/services/protobuf/ts/ecs-snapshot/ecs-snapshot\";\nimport {\n  NetworkComponentUpdate,\n  ContractConfig,\n  SystemCallTransaction,\n  NetworkEvents,\n  SystemCall,\n  NetworkEvent,\n} from \"../types\";\nimport { CacheStore, createCacheStore, storeEvent, storeEvents } from \"./CacheStore\";\nimport { abi as ComponentAbi } from \"@latticexyz/solecs/abi/Component.json\";\nimport { abi as WorldAbi } from \"@latticexyz/solecs/abi/World.json\";\nimport { Component, World } from \"@latticexyz/solecs/types/ethers-contracts\";\nimport {\n  ECSStreamBlockBundleReply,\n  ECSStreamServiceClient,\n  ECSStreamServiceDefinition,\n} from \"@latticexyz/services/protobuf/ts/ecs-stream/ecs-stream\";\nimport { createChannel, createClient } from \"nice-grpc-web\";\nimport { formatComponentID, formatEntityID } from \"../utils\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport { debug as parentDebug } from \"./debug\";\n\nconst debug = parentDebug.extend(\"syncUtils\");\n\n/**\n * Create a ECSStateSnapshotServiceClient\n * @param url ECSStateSnapshotService URL\n * @returns ECSStateSnapshotServiceClient\n */\nexport function createSnapshotClient(url: string): ECSStateSnapshotServiceClient {\n  return createClient(ECSStateSnapshotServiceDefinition, createChannel(url));\n}\n\n/**\n * Create a ECSStreamServiceClient\n * @param url ECSStreamService URL\n * @returns ECSStreamServiceClient\n */\nexport function createStreamClient(url: string): ECSStreamServiceClient {\n  return createClient(ECSStreamServiceDefinition, createChannel(url, grpc.WebsocketTransport()));\n}\n\n/**\n * Return the snapshot block number.\n *\n * @param snapshotClient ECSStateSnapshotServiceClient\n * @param worldAddress Address of the World contract to get the snapshot for.\n * @returns Snapsot block number\n */\nexport async function getSnapshotBlockNumber(\n  snapshotClient: ECSStateSnapshotServiceClient | undefined,\n  worldAddress: string\n): Promise<number> {\n  let blockNumber = -1;\n  if (!snapshotClient) return blockNumber;\n  try {\n    const response = await snapshotClient.getStateBlockLatest({ worldAddress });\n    blockNumber = response.blockNumber;\n  } catch (e) {\n    console.error(e);\n  }\n  return blockNumber;\n}\n\n/**\n * Load from the remote snapshot service.\n *\n * @param snapshotClient ECSStateSnapshotServiceClient\n * @param worldAddress Address of the World contract to get the snapshot for.\n * @param decode Function to decode raw component values ({@link createDecode}).\n * @returns Promise resolving with {@link CacheStore} containing the snapshot state.\n * @deprecated this util will be removed in a future version, use fetchSnapshotChunked instead\n */\nexport async function fetchSnapshot(\n  snapshotClient: ECSStateSnapshotServiceClient,\n  worldAddress: string,\n  decode: ReturnType<typeof createDecode>\n): Promise<CacheStore> {\n  const cacheStore = createCacheStore();\n\n  try {\n    const response = await snapshotClient.getStateLatest({ worldAddress });\n    await reduceFetchedState(response, cacheStore, decode);\n  } catch (e) {\n    console.error(e);\n  }\n\n  return cacheStore;\n}\n\n/**\n * Load from the remote snapshot service in chunks via a stream.\n *\n * @param snapshotClient ECSStateSnapshotServiceClient\n * @param worldAddress Address of the World contract to get the snapshot for.\n * @param decode Function to decode raw component values ({@link createDecode}).\n * @returns Promise resolving with {@link CacheStore} containing the snapshot state.\n */\nexport async function fetchSnapshotChunked(\n  snapshotClient: ECSStateSnapshotServiceClient,\n  worldAddress: string,\n  decode: ReturnType<typeof createDecode>,\n  numChunks = 10,\n  setPercentage?: (percentage: number) => void,\n  pruneOptions?: { playerAddress: string; hashedComponentId: string }\n): Promise<CacheStore> {\n  const cacheStore = createCacheStore();\n  const chunkPercentage = Math.ceil(100 / numChunks);\n\n  try {\n    const response = pruneOptions\n      ? snapshotClient.getStateLatestStreamPrunedV2({\n          worldAddress,\n          chunkPercentage,\n          pruneAddress: pruneOptions?.playerAddress,\n          pruneComponentId: pruneOptions?.hashedComponentId,\n        })\n      : snapshotClient.getStateLatestStreamV2({\n          worldAddress,\n          chunkPercentage,\n        });\n\n    let i = 0;\n    for await (const responseChunk of response) {\n      await reduceFetchedStateV2(responseChunk, cacheStore, decode);\n      setPercentage && setPercentage((i++ / numChunks) * 100);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  return cacheStore;\n}\n\n/**\n * Reduces a snapshot response by storing corresponding ECS events into the cache store.\n *\n * @param response ECSStateReply\n * @param cacheStore {@link CacheStore} to store snapshot state into.\n * @param decode Function to decode raw component values ({@link createDecode}).\n * @returns Promise resolving once state is reduced into {@link CacheStore}.\n * @deprecated this util will be removed in a future version, use reduceFetchedStateV2 instead\n */\nexport async function reduceFetchedState(\n  response: ECSStateReply,\n  cacheStore: CacheStore,\n  decode: ReturnType<typeof createDecode>\n): Promise<void> {\n  const { state, blockNumber, stateComponents, stateEntities } = response;\n\n  for (const { componentIdIdx, entityIdIdx, value: rawValue } of state) {\n    const component = to256BitString(stateComponents[componentIdIdx]);\n    const entity = stateEntities[entityIdIdx] as EntityID;\n    const value = await decode(component, rawValue);\n    storeEvent(cacheStore, { type: NetworkEvents.NetworkComponentUpdate, component, entity, value, blockNumber });\n  }\n}\n\n/**\n * Reduces a snapshot response by storing corresponding ECS events into the cache store.\n *\n * @param response ECSStateReplyV2\n * @param cacheStore {@link CacheStore} to store snapshot state into.\n * @param decode Function to decode raw component values ({@link createDecode}).\n * @returns Promise resolving once state is reduced into {@link CacheStore}.\n */\nexport async function reduceFetchedStateV2(\n  response: ECSStateReplyV2,\n  cacheStore: CacheStore,\n  decode: ReturnType<typeof createDecode>\n): Promise<void> {\n  const { state, blockNumber, stateComponents, stateEntities } = response;\n  const stateEntitiesHex = stateEntities.map((e) => Uint8ArrayToHexString(e) as EntityID);\n  const stateComponentsHex = stateComponents.map((e) => to256BitString(e));\n\n  for (const { componentIdIdx, entityIdIdx, value: rawValue } of state) {\n    const component = stateComponentsHex[componentIdIdx];\n    const entity = stateEntitiesHex[entityIdIdx];\n    if (entity == undefined) debug(\"invalid entity index\", stateEntities.length, entityIdIdx);\n    const value = await decode(component, rawValue);\n    storeEvent(cacheStore, { type: NetworkEvents.NetworkComponentUpdate, component, entity, value, blockNumber });\n  }\n}\n\n/**\n * Create a RxJS stream of {@link NetworkComponentUpdate}s by subscribing to a\n * gRPC streaming service.\n *\n * @param streamServiceUrl URL of the gPRC stream service to subscribe to.\n * @param worldAddress Contract address of the World contract to subscribe to.\n * @param transformWorldEvents Function to transform World events from a stream service ({@link createTransformWorldEventsFromStream}).\n * @returns Stream of {@link NetworkComponentUpdate}s.\n */\nexport function createLatestEventStreamService(\n  streamServiceUrl: string,\n  worldAddress: string,\n  transformWorldEvents: ReturnType<typeof createTransformWorldEventsFromStream>,\n  includeSystemCalls: boolean\n): Observable<NetworkEvent> {\n  const streamServiceClient = createStreamClient(streamServiceUrl);\n  const response = streamServiceClient.subscribeToStreamLatest({\n    worldAddress,\n    blockNumber: true,\n    blockHash: true,\n    blockTimestamp: true,\n    transactionsConfirmed: false, // do not need txs since each ECSEvent contains the hash\n    ecsEvents: true,\n    ecsEventsIncludeTxMetadata: includeSystemCalls,\n  });\n\n  // Turn stream responses into rxjs NetworkEvent\n  return from(response).pipe(\n    map(async (responseChunk) => {\n      const events = await transformWorldEvents(responseChunk);\n      debug(`got ${events.length} events from block ${responseChunk.blockNumber}`);\n\n      if (includeSystemCalls && events.length > 0) {\n        const systemCalls = parseSystemCallsFromStreamEvents(events);\n        return [...events, ...systemCalls];\n      }\n\n      return events;\n    }),\n    awaitPromise(),\n    concatMap((v) => of(...v))\n  );\n}\n\n/**\n * Create a RxJS stream of {@link NetworkComponentUpdate}s by listening to new\n * blocks from the blockNumber$ stream and fetching the corresponding block\n * from the connected RPC.\n *\n * @dev Only use if {@link createLatestEventStreamService} is not available.\n *\n * @param blockNumber$ Block number stream\n * @param fetchWorldEvents Function to fetch World events in a block range ({@link createFetchWorldEventsInBlockRange}).\n * @returns Stream of {@link NetworkComponentUpdate}s.\n */\nexport function createLatestEventStreamRPC(\n  blockNumber$: Observable<number>,\n  fetchWorldEvents: ReturnType<typeof createFetchWorldEventsInBlockRange>,\n  fetchSystemCallsFromEvents?: ReturnType<typeof createFetchSystemCallsFromEvents>\n): Observable<NetworkEvent> {\n  let lastSyncedBlockNumber: number | undefined;\n\n  return blockNumber$.pipe(\n    map(async (blockNumber) => {\n      const from =\n        lastSyncedBlockNumber == null || lastSyncedBlockNumber >= blockNumber ? blockNumber : lastSyncedBlockNumber + 1;\n      const to = blockNumber;\n      lastSyncedBlockNumber = to;\n      const events = await fetchWorldEvents(from, to);\n      debug(`fetched ${events.length} events from block range ${from} -> ${to}`);\n\n      if (fetchSystemCallsFromEvents && events.length > 0) {\n        const systemCalls = await fetchSystemCallsFromEvents(events, blockNumber);\n        return [...events, ...systemCalls];\n      }\n\n      return events;\n    }),\n    awaitPromise(),\n    concatMap((v) => of(...v))\n  );\n}\n\n/**\n * Fetch ECS events from contracts in the given block range.\n *\n * @param fetchWorldEvents Function to fetch World events in a block range ({@link createFetchWorldEventsInBlockRange}).\n * @param fromBlockNumber Start of block range (inclusive).\n * @param toBlockNumber End of block range (inclusive).\n * @param interval Chunk fetching the blocks in intervals to avoid overwhelming the client.\n * @returns Promise resolving with array containing the contract ECS events in the given block range.\n */\nexport async function fetchEventsInBlockRangeChunked(\n  fetchWorldEvents: ReturnType<typeof createFetchWorldEventsInBlockRange>,\n  fromBlockNumber: number,\n  toBlockNumber: number,\n  interval = 50,\n  setPercentage?: (percentage: number) => void\n): Promise<NetworkComponentUpdate<Components>[]> {\n  const events: NetworkComponentUpdate<Components>[] = [];\n  const delta = toBlockNumber - fromBlockNumber;\n  const numSteps = Math.ceil(delta / interval);\n  const steps = [...range(numSteps, interval, fromBlockNumber)];\n\n  for (let i = 0; i < steps.length; i++) {\n    const from = steps[i];\n    const to = i === steps.length - 1 ? toBlockNumber : steps[i + 1] - 1;\n    const chunkEvents = await fetchWorldEvents(from, to);\n\n    if (setPercentage) setPercentage(((i * interval) / delta) * 100);\n    debug(`initial sync fetched ${events.length} events from block range ${from} -> ${to}`);\n\n    events.push(...chunkEvents);\n  }\n\n  return events;\n}\n\n/**\n * Fetch ECS state from contracts in the given block range.\n *\n * @param fetchWorldEvents Function to fetch World events in a block range ({@link createFetchWorldEventsInBlockRange}).\n * @param fromBlockNumber Start of block range (inclusive).\n * @param toBlockNumber End of block range (inclusive).\n * @param interval Chunk fetching the blocks in intervals to avoid overwhelming the client.\n * @returns Promise resolving with {@link CacheStore} containing the contract ECS state in the given block range.\n */\nexport async function fetchStateInBlockRange(\n  fetchWorldEvents: ReturnType<typeof createFetchWorldEventsInBlockRange>,\n  fromBlockNumber: number,\n  toBlockNumber: number,\n  interval = 50,\n  setPercentage?: (percentage: number) => void\n): Promise<CacheStore> {\n  const cacheStore = createCacheStore();\n\n  const events = await fetchEventsInBlockRangeChunked(\n    fetchWorldEvents,\n    fromBlockNumber,\n    toBlockNumber,\n    interval,\n    setPercentage\n  );\n\n  storeEvents(cacheStore, events);\n\n  return cacheStore;\n}\n\n// Creates a function to decode raw component values\n/**\n * Create a function to decode raw component values.\n * Fetches component schemas from the contracts and caches them.\n *\n * @param worldConfig Contract address and interface of the World contract\n * @param provider ethers JsonRpcProvider\n * @returns Function to decode raw component values using their contract component id\n */\nexport function createDecode(worldConfig: ContractConfig, provider: JsonRpcProvider) {\n  const decoders: { [key: string]: (data: BytesLike) => ComponentValue } = {};\n  const world = new Contract(worldConfig.address, worldConfig.abi, provider) as World;\n\n  async function decode(componentId: string, data: BytesLike, componentAddress?: string): Promise<ComponentValue> {\n    // Create the decoder if it doesn't exist yet\n    if (!decoders[componentId]) {\n      const address = componentAddress || (await world.getComponent(componentId));\n      debug(\"Creating decoder for\", address);\n      const component = new Contract(address, ComponentAbi, provider) as Component;\n      const [keys, values] = await component.getSchema();\n      decoders[componentId] = createDecoder(keys, values);\n    }\n\n    // Decode the raw value\n    return decoders[componentId](data);\n  }\n\n  return decode;\n}\n\n/**\n * Create World contract topics for the `ComponentValueSet` and `ComponentValueRemoved` events.\n * @returns World contract topics for the `ComponentValueSet` and `ComponentValueRemoved` events.\n */\nexport function createWorldTopics() {\n  return createTopics<{ World: World }>({\n    World: { abi: WorldAbi, topics: [\"ComponentValueSet\", \"ComponentValueRemoved\"] },\n  });\n}\n\n/**\n * Create a function to fetch World contract events in a given block range.\n * @param provider ethers JsonRpcProvider\n * @param worldConfig Contract address and interface of the World contract.\n * @param batch Set to true if the provider supports batch queries (recommended).\n * @param decode Function to decode raw component values ({@link createDecode})\n * @returns Function to fetch World contract events in a given block range.\n */\nexport function createFetchWorldEventsInBlockRange<C extends Components>(\n  provider: JsonRpcProvider,\n  worldConfig: ContractConfig,\n  batch: boolean | undefined,\n  decode: ReturnType<typeof createDecode>\n) {\n  const topics = createWorldTopics();\n\n  // Fetches World events in the provided block range (including from and to)\n  return async (from: number, to: number) => {\n    const contractsEvents = await fetchEventsInBlockRange(provider, topics, from, to, { World: worldConfig }, batch);\n    const ecsEvents: NetworkComponentUpdate<C>[] = [];\n\n    for (const event of contractsEvents) {\n      const { lastEventInTx, txHash, args } = event;\n      const {\n        component: address,\n        entity: entityId,\n        data,\n        componentId: rawComponentId,\n      } = args as unknown as {\n        component: string;\n        entity: BigNumber;\n        data: string;\n        componentId: BigNumber;\n      };\n\n      const component = formatComponentID(rawComponentId);\n      const entity = formatEntityID(entityId);\n      const blockNumber = to;\n\n      const ecsEvent = {\n        type: NetworkEvents.NetworkComponentUpdate,\n        component,\n        entity,\n        value: undefined,\n        blockNumber,\n        lastEventInTx,\n        txHash,\n      } as NetworkComponentUpdate<C>;\n\n      if (event.eventKey === \"ComponentValueRemoved\") {\n        ecsEvents.push(ecsEvent);\n      }\n\n      if (event.eventKey === \"ComponentValueSet\") {\n        const value = await decode(component, data, address);\n        ecsEvents.push({ ...ecsEvent, value });\n      }\n    }\n\n    return ecsEvents;\n  };\n}\n\n/**\n * Create a function to transform World contract events from a stream service response chunk.\n * @param decode Function to decode raw component values ({@link createDecode})\n * @returns Function to transform World contract events from a stream service.\n */\nexport function createTransformWorldEventsFromStream(decode: ReturnType<typeof createDecode>) {\n  return async (message: ECSStreamBlockBundleReply) => {\n    const { blockNumber, ecsEvents } = message;\n\n    const convertedEcsEvents: NetworkComponentUpdate[] = [];\n\n    for (let i = 0; i < ecsEvents.length; i++) {\n      const ecsEvent = ecsEvents[i];\n\n      const rawComponentId = ecsEvent.componentId;\n      const entityId = ecsEvent.entityId;\n      const txHash = ecsEvent.txHash;\n\n      const component = formatComponentID(rawComponentId);\n      const entity = formatEntityID(entityId);\n\n      const value = ecsEvent.eventType === \"ComponentValueSet\" ? await decode(component, ecsEvent.value) : undefined;\n\n      // Since ECS events are coming in ordered over the wire, we check if the following event has a\n      // different transaction then the current, which would mean an event associated with another\n      // tx\n      const lastEventInTx = ecsEvents[i + 1]?.txHash !== ecsEvent.txHash;\n\n      convertedEcsEvents.push({\n        type: NetworkEvents.NetworkComponentUpdate,\n        component,\n        entity,\n        value,\n        blockNumber,\n        lastEventInTx,\n        txHash,\n        txMetadata: ecsEvent.txMetadata,\n      });\n    }\n\n    return convertedEcsEvents;\n  };\n}\n\nfunction groupByTxHash(events: NetworkComponentUpdate[]) {\n  return events.reduce((acc, event) => {\n    if ([\"worker\", \"cache\"].includes(event.txHash)) return acc;\n\n    if (!acc[event.txHash]) acc[event.txHash] = [];\n\n    acc[event.txHash].push(event);\n\n    return acc;\n  }, {} as { [key: string]: NetworkComponentUpdate[] });\n}\n\nfunction parseSystemCallTransactionFromStreamNetworkComponentUpdate(event: NetworkComponentUpdate) {\n  if (!event.txMetadata) return null;\n\n  const { to, data, value } = event.txMetadata;\n\n  return {\n    to,\n    data: BigNumber.from(data).toHexString(),\n    value: BigNumber.from(value),\n    hash: event.txHash,\n  } as SystemCallTransaction;\n}\n\nexport function parseSystemCallsFromStreamEvents(events: NetworkComponentUpdate[]) {\n  const systemCalls: SystemCall[] = [];\n  const transactionHashToEvents = groupByTxHash(events);\n\n  for (const txHash of Object.keys(transactionHashToEvents)) {\n    // All ECS events include the information needed to parse the SysytemCallTransasction out, so it doesn't\n    // matter which one we take here.\n    const tx = parseSystemCallTransactionFromStreamNetworkComponentUpdate(transactionHashToEvents[txHash][0]);\n    if (!tx) continue;\n\n    systemCalls.push({\n      type: NetworkEvents.SystemCall,\n      tx,\n      updates: transactionHashToEvents[tx.hash],\n    });\n  }\n\n  return systemCalls;\n}\n\nexport function createFetchSystemCallsFromEvents(provider: JsonRpcProvider) {\n  const { fetchBlock, clearBlock } = createBlockCache(provider);\n  const fetchSystemCallData = createFetchSystemCallData(fetchBlock);\n\n  return async (events: NetworkComponentUpdate[], blockNumber: number) => {\n    const systemCalls: SystemCall[] = [];\n    const transactionHashToEvents = groupByTxHash(events);\n\n    const txData = await Promise.all(\n      Object.keys(transactionHashToEvents).map((hash) => fetchSystemCallData(hash, blockNumber))\n    );\n    clearBlock(blockNumber);\n\n    for (const tx of txData) {\n      if (!tx) continue;\n\n      systemCalls.push({\n        type: NetworkEvents.SystemCall,\n        tx,\n        updates: transactionHashToEvents[tx.hash],\n      });\n    }\n\n    return systemCalls;\n  };\n}\n\nfunction createFetchSystemCallData(fetchBlock: ReturnType<typeof createBlockCache>[\"fetchBlock\"]) {\n  return async (txHash: string, blockNumber: number) => {\n    const block = await fetchBlock(blockNumber);\n    const tx = block.transactions.find((tx) => tx.hash === txHash);\n\n    if (!tx) return;\n\n    return {\n      to: tx.to,\n      data: tx.data,\n      value: tx.value,\n      hash: tx.hash,\n    } as SystemCallTransaction;\n  };\n}\n\nfunction createBlockCache(provider: JsonRpcProvider) {\n  const blocks: Record<number, Awaited<ReturnType<typeof provider.getBlockWithTransactions>>> = {};\n\n  return {\n    fetchBlock: async (blockNumber: number) => {\n      if (blocks[blockNumber]) return blocks[blockNumber];\n\n      const block = await provider.getBlockWithTransactions(blockNumber);\n      blocks[blockNumber] = block;\n\n      return block;\n    },\n    clearBlock: (blockNumber: number) => delete blocks[blockNumber],\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { stretch } from \"@latticexyz/utils\";\nimport { IComputedValue, reaction } from \"mobx\";\nimport { concat, concatMap, EMPTY, endWith, filter, map, range, ReplaySubject, take } from \"rxjs\";\nimport { Providers } from \"./createProvider\";\n\n/**\n * Creates a stream of block numbers based on the `block` event of the currently connected provider.\n * In case `initialSync` is provided, this stream will also output a stream of past block numbers to drive replaying events.\n *\n * @param providers Mobx computed providers object (created by {@link createReconnectingProvider}).\n * @param options\n * @returns Stream of block numbers based on connected provider's `block` event.\n */\nexport function createBlockNumberStream(\n  providers: IComputedValue<Providers | undefined>,\n  options?: {\n    initialSync?: {\n      initialBlockNumber: number;\n      interval: number;\n    };\n  }\n) {\n  const blockNumberEvent$ = new ReplaySubject<number>(1);\n\n  const initialSync$ = options?.initialSync\n    ? blockNumberEvent$.pipe(\n        take(1), // Take the first block number\n        filter((blockNr) => blockNr > (options.initialSync!.initialBlockNumber || 0)), // Only do inital sync if the first block number we receive is larger than the block number to start from\n        concatMap((blockNr) => {\n          // Create a stepped range that ends with the current number\n          const blocksToSync = blockNr - options.initialSync!.initialBlockNumber;\n          return range(0, Math.ceil(blocksToSync / options.initialSync!.interval)).pipe(\n            map((i) => options.initialSync!.initialBlockNumber + i * options.initialSync!.interval),\n            endWith(blockNr)\n          );\n        }),\n        stretch(50) // Stretch processing of block number to one every 32 milliseconds (during initial sync)\n      )\n    : EMPTY;\n\n  const dispose = reaction(\n    () => providers.get(),\n    (currProviders) => {\n      const provider = currProviders?.ws || currProviders?.json;\n      provider?.on(\"block\", (blockNumber: number) => blockNumberEvent$.next(blockNumber));\n    },\n    { fireImmediately: true }\n  );\n\n  const blockNumber$ = concat(initialSync$, blockNumberEvent$);\n\n  return { blockNumber$, dispose };\n}\n","import { EntityID } from \"@latticexyz/recs\";\n\nexport enum SyncState {\n  CONNECTING,\n  INITIAL,\n  LIVE,\n}\n\nexport const GodID = \"0x060d\" as EntityID;\n","import { awaitStreamValue, DoWork, filterNullish, keccak256, streamToDefinedComputed } from \"@latticexyz/utils\";\nimport {\n  bufferTime,\n  catchError,\n  concat,\n  concatMap,\n  filter,\n  ignoreElements,\n  map,\n  Observable,\n  of,\n  Subject,\n  take,\n} from \"rxjs\";\nimport {\n  isNetworkComponentUpdateEvent,\n  NetworkComponentUpdate,\n  NetworkEvent,\n  NetworkEvents,\n  SyncStateStruct,\n  SyncWorkerConfig,\n} from \"../types\";\nimport { Components, ComponentValue, SchemaOf } from \"@latticexyz/recs\";\nimport {\n  createCacheStore,\n  getCacheStoreEntries,\n  getIndexDBCacheStoreBlockNumber,\n  getIndexDbECSCache,\n  loadIndexDbCacheStore,\n  saveCacheStoreToIndexDb,\n  storeEvent,\n  storeEvents,\n} from \"./CacheStore\";\nimport { createReconnectingProvider } from \"../createProvider\";\nimport { computed } from \"mobx\";\nimport {\n  createSnapshotClient,\n  createDecode,\n  createFetchWorldEventsInBlockRange,\n  getSnapshotBlockNumber,\n  fetchSnapshotChunked,\n  createLatestEventStreamRPC,\n  createLatestEventStreamService,\n  createTransformWorldEventsFromStream,\n  createFetchSystemCallsFromEvents,\n  fetchEventsInBlockRangeChunked,\n} from \"./syncUtils\";\nimport { createBlockNumberStream } from \"../createBlockNumberStream\";\nimport { GodID, SyncState } from \"./constants\";\nimport { debug as parentDebug } from \"./debug\";\n\nconst debug = parentDebug.extend(\"SyncWorker\");\n\nexport enum InputType {\n  Ack,\n  Config,\n}\nexport type Config = { type: InputType.Config; data: SyncWorkerConfig };\nexport type Ack = { type: InputType.Ack };\nexport const ack = { type: InputType.Ack as const };\nexport type Input = Config | Ack;\n\nexport class SyncWorker<C extends Components> implements DoWork<Input, NetworkEvent<C>[]> {\n  private input$ = new Subject<Input>();\n  private output$ = new Subject<NetworkEvent<C>>();\n  private syncState: SyncStateStruct = { state: SyncState.CONNECTING, msg: \"\", percentage: 0 };\n\n  constructor() {\n    debug(\"creating SyncWorker\");\n    this.init();\n  }\n\n  /**\n   * Pass a loading state component update to the main thread.\n   * Can be used to indicate the initial loading state on a loading screen.\n   * @param loadingState {\n   *  state: {@link SyncState},\n   *  msg: Message to describe the current loading step.\n   *  percentage: Number between 0 and 100 to describe the loading progress.\n   * }\n   * @param blockNumber Optional: block number to pass in the component update.\n   */\n  private setLoadingState(\n    loadingState: Partial<{ state: SyncState; msg: string; percentage: number }>,\n    blockNumber = 0\n  ) {\n    const newLoadingState = { ...this.syncState, ...loadingState };\n    this.syncState = newLoadingState;\n    const update: NetworkComponentUpdate<C> = {\n      type: NetworkEvents.NetworkComponentUpdate,\n      component: keccak256(\"component.LoadingState\"),\n      value: newLoadingState as unknown as ComponentValue<SchemaOf<C[keyof C]>>,\n      entity: GodID,\n      txHash: \"worker\",\n      lastEventInTx: false,\n      blockNumber,\n    };\n\n    this.output$.next(update);\n  }\n\n  /**\n   * Start the sync process.\n   *\n   * 1. Get config\n   * 2. Load initial state\n   *   2.1 Get cache block number\n   *   2.2 Get snapshot block number\n   *   2.3 Load from more recent source\n   * 3. Cach up to current block number by requesting events from RPC ( -> TODO: Replace with own service)\n   * 4. Keep in sync\n   *  4.1 If available keep in sync with streaming service\n   *  4.2 Else keep in sync with RPC\n   */\n  private async init() {\n    this.setLoadingState({ state: SyncState.CONNECTING, msg: \"Connecting...\", percentage: 0 });\n\n    // Turn config into variable accessible outside the stream\n    const computedConfig = await streamToDefinedComputed(\n      this.input$.pipe(\n        map((e) => (e.type === InputType.Config ? e.data : undefined)),\n        filterNullish()\n      )\n    );\n    const config = computedConfig.get();\n    const {\n      snapshotServiceUrl,\n      streamServiceUrl,\n      chainId,\n      worldContract,\n      provider: { options: providerOptions },\n      initialBlockNumber,\n      fetchSystemCalls,\n      disableCache,\n    } = config;\n\n    // Set default values for cacheAgeThreshold and cacheInterval\n    const cacheAgeThreshold = config.cacheAgeThreshold || 100;\n    const cacheInterval = config.cacheInterval || 1;\n\n    // Set up\n    const { providers } = await createReconnectingProvider(computed(() => computedConfig.get().provider));\n    const provider = providers.get().json;\n    const snapshotClient = snapshotServiceUrl ? createSnapshotClient(snapshotServiceUrl) : undefined;\n    const indexDbCache = await getIndexDbECSCache(chainId, worldContract.address);\n    const decode = createDecode(worldContract, provider);\n    const fetchWorldEvents = createFetchWorldEventsInBlockRange(\n      provider,\n      worldContract,\n      providerOptions?.batch,\n      decode\n    );\n    const transformWorldEvents = createTransformWorldEventsFromStream(decode);\n\n    // Start syncing current events, but only start streaming to output once gap between initial state and current block is closed\n\n    debug(\"start initial sync\");\n    this.setLoadingState({ state: SyncState.INITIAL, msg: \"Starting initial sync\", percentage: 0 });\n    let passLiveEventsToOutput = false;\n    const cacheStore = { current: createCacheStore() };\n    const { blockNumber$ } = createBlockNumberStream(providers);\n    // The RPC is only queried if this stream is subscribed to\n    const latestEventRPC$ = createLatestEventStreamRPC(\n      blockNumber$,\n      fetchWorldEvents,\n      fetchSystemCalls ? createFetchSystemCallsFromEvents(provider) : undefined\n    );\n    const latestEvent$ = streamServiceUrl\n      ? createLatestEventStreamService(\n          streamServiceUrl,\n          worldContract.address,\n          transformWorldEvents,\n          Boolean(fetchSystemCalls)\n        ).pipe(\n          catchError((err) => {\n            console.error(\"SyncWorker stream service error, falling back to RPC\", err);\n            return latestEventRPC$;\n          })\n        )\n      : latestEventRPC$;\n\n    const initialLiveEvents: NetworkComponentUpdate<Components>[] = [];\n    latestEvent$.subscribe((event) => {\n      // If initial sync is in progress, temporary store the events to apply later\n      // Ignore system calls during initial sync\n      if (!passLiveEventsToOutput) {\n        if (isNetworkComponentUpdateEvent(event)) initialLiveEvents.push(event);\n        return;\n      }\n\n      if (isNetworkComponentUpdateEvent(event)) {\n        // Store cache to indexdb every block\n        if (event.blockNumber > cacheStore.current.blockNumber + 1 && event.blockNumber % cacheInterval === 0)\n          saveCacheStoreToIndexDb(indexDbCache, cacheStore.current);\n\n        storeEvent(cacheStore.current, event);\n      }\n\n      this.output$.next(event as NetworkEvent<C>);\n    });\n    const streamStartBlockNumberPromise = awaitStreamValue(blockNumber$);\n\n    // Load initial state from cache or snapshot service\n    this.setLoadingState({ state: SyncState.INITIAL, msg: \"Fetching cache block number\", percentage: 0 });\n    const cacheBlockNumber = !disableCache ? await getIndexDBCacheStoreBlockNumber(indexDbCache) : -1;\n    this.setLoadingState({ percentage: 50 });\n    const snapshotBlockNumber = await getSnapshotBlockNumber(snapshotClient, worldContract.address);\n    this.setLoadingState({ percentage: 100 });\n    debug(\n      `cache block: ${cacheBlockNumber}, snapshot block: ${\n        snapshotBlockNumber > 0 ? snapshotBlockNumber : \"Unavailable\"\n      }, start sync at ${initialBlockNumber}`\n    );\n\n    let initialState = createCacheStore();\n    if (initialBlockNumber > Math.max(cacheBlockNumber, snapshotBlockNumber)) {\n      initialState.blockNumber = initialBlockNumber;\n    } else {\n      // Load from cache if the snapshot is less than <cacheAgeThreshold> blocks newer than the cache\n      const syncFromSnapshot = snapshotClient && snapshotBlockNumber > cacheBlockNumber + cacheAgeThreshold;\n\n      if (syncFromSnapshot) {\n        this.setLoadingState({ state: SyncState.INITIAL, msg: \"Fetching initial state from snapshot\", percentage: 0 });\n        initialState = await fetchSnapshotChunked(\n          snapshotClient,\n          worldContract.address,\n          decode,\n          config.snapshotNumChunks,\n          (percentage: number) => this.setLoadingState({ percentage }),\n          config.pruneOptions\n        );\n      } else {\n        this.setLoadingState({ state: SyncState.INITIAL, msg: \"Fetching initial state from cache\", percentage: 0 });\n        initialState = await loadIndexDbCacheStore(indexDbCache);\n        this.setLoadingState({ percentage: 100 });\n      }\n\n      debug(`got ${initialState.state.size} items from ${syncFromSnapshot ? \"snapshot\" : \"cache\"}`);\n    }\n\n    // Load events from gap between initial state and current block number from RPC\n    const streamStartBlockNumber = await streamStartBlockNumberPromise;\n    this.setLoadingState({\n      state: SyncState.INITIAL,\n      msg: `Fetching state from block ${initialState.blockNumber} to ${streamStartBlockNumber}`,\n      percentage: 0,\n    });\n\n    const gapStateEvents = await fetchEventsInBlockRangeChunked(\n      fetchWorldEvents,\n      initialState.blockNumber,\n      streamStartBlockNumber,\n      50,\n      (percentage: number) => this.setLoadingState({ percentage })\n    );\n\n    debug(\n      `got ${gapStateEvents.length} items from block range ${initialState.blockNumber} -> ${streamStartBlockNumber}`\n    );\n\n    // Merge initial state, gap state and live events since initial sync started\n    storeEvents(initialState, [...gapStateEvents, ...initialLiveEvents]);\n    cacheStore.current = initialState;\n    debug(`initial sync state size: ${cacheStore.current.state.size}`);\n\n    this.setLoadingState({\n      state: SyncState.INITIAL,\n      msg: `Initializing with ${cacheStore.current.state.size} state entries`,\n      percentage: 0,\n    });\n\n    // Pass current cacheStore to output and start passing live events\n    let i = 0;\n    for (const update of getCacheStoreEntries(cacheStore.current)) {\n      i++;\n      this.output$.next(update as NetworkEvent<C>);\n      if (i % 5000 === 0) {\n        const percentage = Math.floor((i / cacheStore.current.state.size) * 100);\n        this.setLoadingState({ percentage });\n      }\n    }\n\n    // Save initial state to cache\n    saveCacheStoreToIndexDb(indexDbCache, cacheStore.current);\n\n    // Let the client know loading is complete\n    this.setLoadingState(\n      { state: SyncState.LIVE, msg: `Streaming live events`, percentage: 100 },\n      cacheStore.current.blockNumber\n    );\n    passLiveEventsToOutput = true;\n  }\n\n  public work(input$: Observable<Input>): Observable<NetworkEvent<C>[]> {\n    input$.subscribe(this.input$);\n    const throttledOutput$ = new Subject<NetworkEvent<C>[]>();\n\n    this.output$\n      .pipe(\n        bufferTime(16, null, 50),\n        filter((updates) => updates.length > 0),\n        concatMap((updates) =>\n          concat(\n            of(updates),\n            input$.pipe(\n              filter((e) => e.type === InputType.Ack),\n              take(1),\n              ignoreElements()\n            )\n          )\n        )\n      )\n      .subscribe(throttledOutput$);\n\n    return throttledOutput$;\n  }\n}\n","import { runWorker } from \"@latticexyz/utils\";\nimport { SyncWorker } from \"./SyncWorker\";\n\nrunWorker(new SyncWorker());\n"],"names":["module","exports","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","args","enabled","self","curr","Number","Date","ms","diff","prev","coerce","unshift","index","replace","match","format","formatter","formatters","val","call","splice","formatArgs","log","apply","useColors","color","selectColor","extend","destroy","Object","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","this","toNamespace","regexp","toString","substring","length","default","Error","stack","message","disable","names","map","skips","join","enable","i","save","split","len","push","RegExp","slice","name","test","humanize","parcelRequire","console","warn","keys","forEach","key","hash","charCodeAt","colors","Math","abs","load","$05c7fd50a780867e$var$s","$05c7fd50a780867e$var$m","$05c7fd50a780867e$var$h","$05c7fd50a780867e$var$d","$05c7fd50a780867e$var$w","$05c7fd50a780867e$var$y","$05c7fd50a780867e$var$plural","msAbs","n","isPlural","round","options","type","str","String","exec","parseFloat","toLowerCase","$05c7fd50a780867e$var$parse","isFinite","long","$05c7fd50a780867e$var$fmtShort","JSON","stringify","$551f0fb5537781bb$var$protobuf","$551f0fb5537781bb$var$configure","util","_configure","Writer","BufferWriter","Reader","BufferReader","build","rpc","roots","configure","$652c48f4a3d318e5$var$Writer","$652c48f4a3d318e5$var$BufferWriter","$652c48f4a3d318e5$var$LongBits","$3xEiL","LongBits","$652c48f4a3d318e5$var$base64","base64","$652c48f4a3d318e5$var$utf8","utf8","$652c48f4a3d318e5$var$Op","fn","next","undefined","$652c48f4a3d318e5$var$noop","$652c48f4a3d318e5$var$State","writer","head","tail","states","$652c48f4a3d318e5$var$create","Buffer","create","$652c48f4a3d318e5$var$writeByte","buf","pos","$652c48f4a3d318e5$var$VarintOp","$652c48f4a3d318e5$var$writeVarint64","hi","lo","$652c48f4a3d318e5$var$writeFixed32","alloc","size","Array","pool","prototype","subarray","_push","uint32","value","int32","fromNumber","sint32","uint64","bits","from","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","float","writeFloatLE","double","writeDoubleLE","$652c48f4a3d318e5$var$writeBytes","bytes","isString","decode","string","write","fork","reset","ldelim","finish","constructor","BufferWriter_","$2943b7409a7e172e$var$util","$2943b7409a7e172e$var$merge","dst","src","ifNotSet","$2943b7409a7e172e$var$newError","CustomError","properties","captureStackTrace","asPromise","EventEmitter","inquire","isNode","Boolean","$parcel$global","process","versions","node","global","window","emptyArray","freeze","emptyObject","isInteger","floor","isObject","isset","isSet","obj","prop","hasOwnProperty","isArray","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","toHash","zeroHash","longFromHash","unsigned","fromHash","fromBits","toNumber","merge","lcFirst","charAt","newError","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","encoding","allocUnsafe","ctx","params","arguments","offset","pending","Promise","resolve","reject","err","$eb999a728d79e086$var$base64","p","ceil","$eb999a728d79e086$var$b64","$eb999a728d79e086$var$i","$eb999a728d79e086$var$s64","encode","buffer","start","end","t","chunk","j","b","parts","fromCharCode","c","$eb999a728d79e086$var$invalidEncoding","$a8c55008f90a9a32$var$EventEmitter","_listeners","on","evt","$a70031ddad40096b$var$factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","$a70031ddad40096b$var$writeUintLE","$a70031ddad40096b$var$writeUintBE","$a70031ddad40096b$var$readUintLE","$a70031ddad40096b$var$readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","moduleName","$9a4e160a149f7a33$var$utf8","read","c1","c2","$162d5d1a302dad83$var$LongBits","$162d5d1a302dad83$var$zero","zero","zzDecode","$162d5d1a302dad83$var$zeroHash","parseInt","fromString","low","high","toLong","$162d5d1a302dad83$var$charCodeAt","mask","part0","part1","part2","$7431f704f2348dc8$var$BufferWriter","$8Gxzi","$7431f704f2348dc8$var$writeStringBuffer","writeBytesBuffer","copy","byteLength","$be6bfaa35eb00c3b$var$Reader","$be6bfaa35eb00c3b$var$BufferReader","$be6bfaa35eb00c3b$var$LongBits","$be6bfaa35eb00c3b$var$utf8","$be6bfaa35eb00c3b$var$indexOutOfRange","reader","writeLength","RangeError","$be6bfaa35eb00c3b$var$create_array","$be6bfaa35eb00c3b$var$create","isBuffer","$be6bfaa35eb00c3b$var$readLongVarint","$be6bfaa35eb00c3b$var$readFixed32_end","$be6bfaa35eb00c3b$var$readFixed64","_slice","readDoubleLE","skip","skipType","wireType","BufferReader_","$6629769f5d40b58f$var$BufferReader","$glBRF","utf8Slice","min","Service","$f3c4ca5427a39b3f$var$Service","rpcImpl","requestDelimited","responseDelimited","TypeError","rpcCall","method","requestCtor","responseCtor","request","callback","response","emit","err1","setTimeout","endedByRPC","off","$075bd49d25e527ab$var$normalizeKey","$075bd49d25e527ab$var$validate","endsWith","Metadata","data","Map","metadata","delete","item","append","values","_a","getAll","has","Symbol","iterator","entries","Status","composeClientMiddleware","middleware1","middleware2","assign","options2","$9c52131c6f81fb6d$var$ClientError","$luMgg","ExtendableError","path","code","details","super","$4BTqE","static","hasInstance","instance","isPrototypeOf","ClientError","$fa61d605f0a3a175$export$af7e1a58631a7dcb","$fa61d605f0a3a175$var$setPrototypeOf","$eQZlC","setPrototypeOf","$fa61d605f0a3a175$var$getPrototypeOf","getPrototypeOf","$fa61d605f0a3a175$var$defineProperty","$fa61d605f0a3a175$var$objectCreate","objectCreate","$fa61d605f0a3a175$var$uglyErrorPrinting","$fa61d605f0a3a175$var$extendableErrorName","$fa61d605f0a3a175$var$ExtendableError","constructorNameMatch","originalConstructor","constructorName","constructorNameIsError","writable","$ad05826a0a555609$export$1cb0d91350beb6cc","$ad05826a0a555609$export$dd5385caa81b6660","$ad05826a0a555609$export$fdab3c20aae16ddf","$ad05826a0a555609$export$33cf662715266719","$ad05826a0a555609$var$objectSetPrototypeOfIsDefined","$ad05826a0a555609$var$objectGetPrototypeOfIsDefined","$ad05826a0a555609$var$objectDefinePropertyIsDefined","$ad05826a0a555609$var$objectCreateIsDefined","$ad05826a0a555609$var$objectHasOwnPropertyIsDefined","target","__proto__","$ad05826a0a555609$var$ie8ObjectDefinePropertyBug","propertyDescriptor","$ad05826a0a555609$var$hasOwnProperty","propertyDescriptors","F","result","composeServerMiddleware","context","context1","$b152aa947e005668$var$ServerError","ServerError","normalizeServiceDefinition","definition","$4lDos","isGrpcWebServiceDefinition","fromGrpcWebServiceDefinition","$ksWpn","isTsProtoServiceDefinition","fromTsProtoServiceDefinition","toGrpcWebMethodDefinition","serviceName","methodName","service","requestStream","responseStream","requestType","requestDeserialize","responseType","responseDeserialize","$32a7ae4d4330b003$var$uncapitalize","deserializeBinary","requestSerialize","serializeBinary","responseSerialize","methods","requestEncode","requestFromPartial","fromPartial","responseEncode","responseFromPartial","fullName","createChannel","address","transport","$10b637a08494c637$var$createClientFactory","$10b637a08494c637$var$createClientFactoryWithMiddleware","middleware","use","newMiddleware","$bgbrK","channel","defaultCallOptions","client","methodEntries","$gVfc2","methodDefinition","defaultOptions","$kKinb","createBidiStreamingMethod","$iMylO","createClientStreamingMethod","$25a4i","createServerStreamingMethod","$hlUmZ","createUnaryMethod","createClientFactory","createClient","$832a115bc779eb14$var$__exportStar","grpcMethodDefinition","methodDescriptor","async","bidiStreamingMethod","$6L7FB","isAsyncIterable","signal","AbortController","onHeader","onTrailer","pipeAbortController","sink","$iHPaU","AsyncSink","$3FzVW","grpc","host","pipeError","onHeaders","headers","$lJqpF","convertMetadataFromGrpcWeb","onMessage","onEnd","trailers","Code","OK","error","convertMetadataToGrpcWeb","$5eNxM","throwIfAborted","send","$f1a65afcd0cd7f62$var$pipeRequest","then","finishSend","isAbortError","close","abortListener","AbortError","abort","addEventListener","removeEventListener","asyncIterator","done","throw","return","r","o","l","m","d","__esModule","s","splitValues","headersMap","Headers","getHeaderKeys","getHeaderValues","splitHeaderValue","appendFromString","getOwnPropertyNames","indexOf","trim","normalizeName","normalizeValue","concat","toHeaders","BrowserHeaders","iterateHeaders","iterateHeadersKeys","ChunkParser","ChunkType","encodeASCII","decodeASCII","a","getUint8","u","getUint32","MESSAGE","TRAILERS","position","parse","h","f","g","DataView","byteOffset","y","chunkType","httpStatusToCode","Canceled","Unknown","InvalidArgument","DeadlineExceeded","NotFound","AlreadyExists","PermissionDenied","ResourceExhausted","FailedPrecondition","Aborted","OutOfRange","Unimplemented","Internal","Unavailable","DataLoss","Unauthenticated","started","sentFirstMessage","completed","closed","finishedSending","onHeadersCallbacks","onMessageCallbacks","onEndCallbacks","parser","props","createTransport","url","onTransportHeaders","onChunk","onTransportChunk","onTransportEnd","makeDefaultTransport","responseHeaders","rawOnHeaders","decodeGRPCStatus","rawOnError","e1","rawOnMessage","responseTrailers","rawOnEnd","decodeURIComponent","toObject","frameRequest","sendMessage","cancel","setDefaultTransport","setDefaultTransportFactory","CrossBrowserHttpTransport","FetchReadableStreamTransport","XhrTransport","WebsocketTransport","invoke","unary","withCredentials","__assign","detectFetchSupport","cancelled","controller","pump","catch","fetch","body","status","getReader","Response","credentials","__extends","stringToArrayBuffer","MozChunkedArrayBufferXHR","XHR","detectMozXHRSupport","detectXHROverrideMimeTypeSupport","onProgressEvent","xhr","substr","onLoadEvent","onStateChange","readyState","XMLHttpRequest","HEADERS_RECEIVED","getAllResponseHeaders","open","configureXhr","setRequestHeader","overrideMimeType","codePointAt","xhrSupportsResponseType","FINISH_SEND","Int8Array","CONNECTING","WebSocket","binaryType","onopen","onclose","onerror","onmessage","statusMessage","ArrayBuffer","setUint32","$3d04b0eee7059fe4$export$18b052ffd8c84d7","$3d04b0eee7059fe4$export$d2c30ea522b3259e","$3d04b0eee7059fe4$export$5ede777d8386dec4","aborted","$d9e3f07136815727$var$ARRAY_ERROR","$d9e3f07136815727$var$AsyncSink","_ended","_values","_resolvers","shift","grpcMetadata","$88niT","Base64","fromUint8Array","toUint8Array","$66ae93fce7adfea0$export$83d89fbfd8236492","$66ae93fce7adfea0$var$_hasatob","atob","$66ae93fce7adfea0$var$_hasbtoa","btoa","$66ae93fce7adfea0$var$_hasBuffer","$66ae93fce7adfea0$require$Buffer","$66ae93fce7adfea0$var$_TD","TextDecoder","$66ae93fce7adfea0$var$_TE","TextEncoder","$66ae93fce7adfea0$var$b64chs","$66ae93fce7adfea0$var$b64tab","tab","$66ae93fce7adfea0$var$b64re","$66ae93fce7adfea0$var$_fromCC","$66ae93fce7adfea0$var$_U8Afrom","it","x","$66ae93fce7adfea0$var$_mkUriSafe","m0","$66ae93fce7adfea0$var$_tidyB64","$66ae93fce7adfea0$export$ec0fb543302ee251","bin","u32","c0","asc","pad","$66ae93fce7adfea0$export$a32219e24f8d1e2","$66ae93fce7adfea0$var$_fromUint8Array","u8a","strs","$66ae93fce7adfea0$export$27bbb4e040978768","urlsafe","$66ae93fce7adfea0$var$cb_utob","cc","$66ae93fce7adfea0$var$re_utob","$66ae93fce7adfea0$export$10d4b9bd20a66b0","$66ae93fce7adfea0$var$_encode","$66ae93fce7adfea0$export$37cc283d8fbd3462","$66ae93fce7adfea0$export$90c31d5baa78df44","$66ae93fce7adfea0$var$re_btou","$66ae93fce7adfea0$var$cb_btou","cccc","$66ae93fce7adfea0$export$67e9defdeac3dd95","$66ae93fce7adfea0$export$7f16d8e674ddec24","u24","r1","r2","$66ae93fce7adfea0$export$1406ac7a6dfd7b7a","$66ae93fce7adfea0$var$_toUint8Array","$66ae93fce7adfea0$export$73470fd2221e6aef","$66ae93fce7adfea0$var$_unURI","$66ae93fce7adfea0$var$_decode","$66ae93fce7adfea0$export$c537b38001c583b7","$66ae93fce7adfea0$var$_noEnum","$66ae93fce7adfea0$export$4678ebf2295c49b","_add","$66ae93fce7adfea0$export$a105d6a15258bd2","$66ae93fce7adfea0$export$f436b0c2107cbd35","version","VERSION","atobPolyfill","btoaPolyfill","fromBase64","toBase64","encodeURI","encodeURL","utob","btou","isValid","extendString","extendUint8Array","extendBuiltins","$ba20c2348caf5a1a$export$a143d493d941bafc","$ba20c2348caf5a1a$export$f99ded8fe4b79145","$ba20c2348caf5a1a$var$customInspectSymbol","$ba20c2348caf5a1a$var$Buffer","$ba20c2348caf5a1a$var$K_MAX_LENGTH","$ba20c2348caf5a1a$var$createBuffer","arg","encodingOrOffset","$ba20c2348caf5a1a$var$allocUnsafe","$ba20c2348caf5a1a$var$from","isEncoding","$ba20c2348caf5a1a$var$byteLength","actual","$ba20c2348caf5a1a$var$fromString","isView","arrayView","$ba20c2348caf5a1a$var$isInstance","$ba20c2348caf5a1a$var$fromArrayBuffer","$ba20c2348caf5a1a$var$fromArrayLike","$ba20c2348caf5a1a$var$fromArrayView","SharedArrayBuffer","valueOf","$ba20c2348caf5a1a$var$checked","$ba20c2348caf5a1a$var$numberIsNaN","$ba20c2348caf5a1a$var$fromObject","toPrimitive","$ba20c2348caf5a1a$var$assertSize","array","mustMatch","loweredCase","$ba20c2348caf5a1a$var$utf8ToBytes","$ba20c2348caf5a1a$var$base64ToBytes","$ba20c2348caf5a1a$var$slowToString","$ba20c2348caf5a1a$var$hexSlice","$ba20c2348caf5a1a$var$utf8Slice","$ba20c2348caf5a1a$var$asciiSlice","$ba20c2348caf5a1a$var$latin1Slice","$ba20c2348caf5a1a$var$base64Slice","$ba20c2348caf5a1a$var$utf16leSlice","$ba20c2348caf5a1a$var$swap","$ba20c2348caf5a1a$var$bidirectionalIndexOf","dir","$ba20c2348caf5a1a$var$arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","$ba20c2348caf5a1a$var$hexWrite","remaining","strLen","parsed","$ba20c2348caf5a1a$var$utf8Write","$ba20c2348caf5a1a$var$blitBuffer","$ba20c2348caf5a1a$var$asciiWrite","byteArray","$ba20c2348caf5a1a$var$asciiToBytes","$ba20c2348caf5a1a$var$base64Write","$ba20c2348caf5a1a$var$ucs2Write","units","$ba20c2348caf5a1a$var$utf16leToBytes","$jgAek","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$ba20c2348caf5a1a$var$MAX_ARGUMENTS_LENGTH","$ba20c2348caf5a1a$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$ba20c2348caf5a1a$var$typedArraySupport","poolSize","fill","$ba20c2348caf5a1a$var$alloc","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","ret","out","$ba20c2348caf5a1a$var$hexSliceLookupTable","$ba20c2348caf5a1a$var$checkOffset","ext","$ba20c2348caf5a1a$var$checkInt","$ba20c2348caf5a1a$var$checkIEEE754","$ba20c2348caf5a1a$var$writeFloat","littleEndian","noAssert","$d8tht","$ba20c2348caf5a1a$var$writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","targetStart","copyWithin","$ba20c2348caf5a1a$var$INVALID_BASE64_RE","leadSurrogate","toByteArray","$ba20c2348caf5a1a$var$base64clean","alphabet","table","i16","$e06b9d7af8966f28$export$d622b2ad8d90c771","$e06b9d7af8966f28$export$6100ba28696e12de","b64","tmp","lens","$e06b9d7af8966f28$var$getLens","validLen","placeHoldersLen","$e06b9d7af8966f28$var$Arr","$e06b9d7af8966f28$var$_byteLength","curByte","$e06b9d7af8966f28$var$revLookup","uint8","extraBytes","maxChunkLength","len2","$e06b9d7af8966f28$var$encodeChunk","$e06b9d7af8966f28$var$lookup","$e06b9d7af8966f28$var$code","$e06b9d7af8966f28$var$i","$e06b9d7af8966f28$var$len","num","output","$9902bc465919923d$export$aafa59e2e03f2942","$9902bc465919923d$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","clientStreamingMethod","$99olq","execute","$dac75b07d9b4a913$var$pipeRequest","$6a97d6ab8a9e8555$export$51396ec711da548b","executor","removeAbortListener","finished","reason","listener","callbackResult","serverStreamingMethod","unaryMethod","niceErrors","annotationType","dataStructure","other","thing","property","derivation","errors","die","mockGlobal","$628d86a631dac044$var$errors","$628d86a631dac044$var$die","objectPrototype","EMPTY_ARRAY","globalThis","EMPTY_OBJECT","hasProxy","$628d86a631dac044$var$assign","assertProxies","$628d86a631dac044$var$getDescriptor","$628d86a631dac044$var$defineProperty","$628d86a631dac044$var$objectPrototype","warnAboutProxyRequirement","$628d86a631dac044$var$EMPTY_ARRAY","getNextId","globalState","$628d86a631dac044$var$EMPTY_OBJECT","$628d86a631dac044$var$hasProxy","Proxy","$628d86a631dac044$var$plainObjectString","$628d86a631dac044$var$assertProxies","invoked","$628d86a631dac044$var$warnAboutProxyRequirement","msg","$628d86a631dac044$var$getNextId","noop","isStringish","func","$628d86a631dac044$var$noop","$628d86a631dac044$var$isFunction","$628d86a631dac044$var$isStringish","isPlainObject","protoConstructor","isGenerator","$628d86a631dac044$var$isPlainObject","addHiddenProp","object","propName","$628d86a631dac044$var$isGenerator","addHiddenFinalProp","displayName","createInstanceofPredicate","$628d86a631dac044$var$addHiddenFinalProp","isES6Map","$628d86a631dac044$var$createInstanceofPredicate","theClass","hasGetOwnPropertySymbols","$628d86a631dac044$var$isES6Map","filter","$628d86a631dac044$var$isES6Set","Set","$628d86a631dac044$var$hasGetOwnPropertySymbols","getOwnPropertySymbols","$628d86a631dac044$var$getPlainObjectKeys","symbols","propertyIsEnumerable","getOwnPropertyDescriptors","Reflect","ownKeys","getDescriptor","storedAnnotationsSymbol","decorator","storeAnnotation","hasProp","fieldName","assertNotDecorated","isOverride","$628d86a631dac044$var$storedAnnotationsSymbol","annotation","$mobx","Atom","isBeingObserved_","observers_","IDerivationState_","onBOL","$628d86a631dac044$var$assertNotDecorated","name_","$628d86a631dac044$var$collectStoredAnnotations","$628d86a631dac044$var$hasProp","$628d86a631dac044$var$addHiddenProp","$628d86a631dac044$var$_extends","reportChanged","startBatch","propagateChanged","endBatch","lastAccessedBy_","lowestObserverState_","$628d86a631dac044$var$IDerivationState_","NOT_TRACKING_","onBUOL","isAtom","onBecomeObservedHandler","onBecomeUnobservedHandler","atom","_proto","onBUO","identityComparer","deepEqual","$628d86a631dac044$var$reportObserved","comparer","identity","structural","shallow","shallowComparer","deepEnhancer","$628d86a631dac044$var$isAtom","$628d86a631dac044$var$Atom","observable","$628d86a631dac044$export$f8586f6f22b9cba9","$628d86a631dac044$var$identityComparer","isES6Set","$628d86a631dac044$var$structuralComparer","$628d86a631dac044$var$deepEqual","isAction","autoAction","$628d86a631dac044$var$defaultComparer","shallowEnhancer","$628d86a631dac044$export$d9328cbeeb64e882","deep","$628d86a631dac044$export$5ab46cbf6120b33a","referenceEnhancer","newValue","oldValue","override","$628d86a631dac044$export$b8aa795084cbf86b","make_","extend_","$628d86a631dac044$export$31960fb081a18155","$628d86a631dac044$export$f5afceff386badf9","$628d86a631dac044$export$27a7faddcfd44960","$628d86a631dac044$export$da6b063694cb52c1","createActionAnnotation","options_","descriptor","$628d86a631dac044$var$refStructEnhancer","source","$628d86a631dac044$var$OVERRIDE","$628d86a631dac044$export$a46fbcd73382caa5","annotationType_","actionDescriptor","adm","createActionDescriptor","$628d86a631dac044$var$make_","assertActionDescriptor","safeDescriptors","$628d86a631dac044$var$make_$1","$628d86a631dac044$var$extend_$1","_this$options_","bound","target_","$628d86a631dac044$export$b956e38827fca970","$628d86a631dac044$var$createActionDescriptor","createFlowAnnotation","$628d86a631dac044$var$assertActionDescriptor","_ref","_ref2","_annotation$options_$","_annotation$options_$2","_annotation$options_4","_adm$proxy_2","$628d86a631dac044$var$globalState","_adm$proxy_","_annotation$options_","isFlow","flowDescriptor","createFlowDescriptor","_annotation$options_2","_annotation$options_3","proxy_","isPlainObject_","assertFlowDescriptor","$628d86a631dac044$var$make_$2","isMobXFlow","$628d86a631dac044$var$createFlowDescriptor","$628d86a631dac044$var$extend_$2","proxyTrap","createComputedAnnotation","_this$options_2","$628d86a631dac044$var$assertFlowDescriptor","assertComputedDescriptor","$628d86a631dac044$var$createComputedAnnotation","assertObservableDescriptor","defineObservableProperty_","autoAnnotation","createAutoAnnotation","$628d86a631dac044$var$assertComputedDescriptor","defineComputedProperty_","$628d86a631dac044$var$createObservableAnnotation","$628d86a631dac044$var$make_$4","_this$options_$enhanc","enhancer","$628d86a631dac044$var$deepEnhancer","$628d86a631dac044$var$assertObservableDescriptor","$628d86a631dac044$var$createAutoAnnotation","$628d86a631dac044$var$AUTO","actionAnnotation","$628d86a631dac044$var$extend_$5","observableAnnotation","_this$options_3","createAction","autoBind","OBSERVABLE","OBSERVABLE_REF","defaultCreateObservableOptions","ref","_this$options_4","defaultDecorator","asCreateObservableOptions","_this$options_5","observableDecoratorAnnotation","createObservableAnnotation","defineProperty_","observableShallowAnnotation","getEnhancerFromOptions","_this$options_6","getAnnotationFromOptions","$628d86a631dac044$var$OBSERVABLE","$628d86a631dac044$var$OBSERVABLE_REF","$628d86a631dac044$var$OBSERVABLE_SHALLOW","getEnhancerFromAnnotation","$628d86a631dac044$var$defaultCreateObservableOptions","isObservable","$628d86a631dac044$var$observableAnnotation","$628d86a631dac044$var$observableRefAnnotation","arg2","$628d86a631dac044$var$referenceEnhancer","$628d86a631dac044$var$observableShallowAnnotation","$628d86a631dac044$var$observableStructAnnotation","$628d86a631dac044$var$observableDecoratorAnnotation","$628d86a631dac044$var$createDecoratorAnnotation","observableFactories","$628d86a631dac044$var$getEnhancerFromAnnotation","$628d86a631dac044$var$getAnnotationFromOptions","_options$defaultDecor","$628d86a631dac044$var$createObservable","ObservableSet","$628d86a631dac044$export$5cd057a6046189f9","createDecoratorAnnotation","struct","observableStructAnnotation","createObservable","COMPUTED_STRUCT","computedStructAnnotation","box","$628d86a631dac044$var$storeAnnotation","$628d86a631dac044$var$observableFactories","$628d86a631dac044$var$ObservableValue","$628d86a631dac044$var$getEnhancerFromOptions","opts","arg1","$628d86a631dac044$var$asCreateObservableOptions","ComputedValue","computed","currentActionId","nextActionId","isFunctionNameConfigurable","initialValues","tmpNameDescriptor","decorators","useProxies","proxy","$628d86a631dac044$var$asObservableObject","$628d86a631dac044$var$asDynamicObservableObject","actionName","$628d86a631dac044$var$COMPUTED","$628d86a631dac044$var$computedAnnotation","runInfo","_startAction","canRunAsDerivation","_endAction","$628d86a631dac044$var$ComputedValue","flattenedArgs","notifySpy_","$628d86a631dac044$var$computedStructAnnotation","$628d86a631dac044$var$currentActionId","$628d86a631dac044$var$isFunctionNameConfigurable","$628d86a631dac044$var$_getDescriptor","$628d86a631dac044$var$_getDescriptor$config","$628d86a631dac044$var$tmpNameDescriptor","untrackedStart","prevAllowStateChanges_","prevAllowStateReads_","$628d86a631dac044$var$_Symbol$toPrimitive","runAsAction_","runAsAction","prevDerivation_","startTime_","actionId_","parentActionId_","scope","error_","allowStateChangesEnd","allowStateReadsEnd","suppressReactionErrors","allowStateChangesStart","allowStateChanges","$628d86a631dac044$var$startBatch","CREATE","ObservableValue","$628d86a631dac044$var$nextActionId","notifySpy","hasUnreportedChange_","interceptors_","changeListeners_","dehancer","$628d86a631dac044$export$e510c5d1ea4358b1","value_","$628d86a631dac044$var$allowStateChangesEnd","$628d86a631dac044$var$allowStateChangesStart","isSpyEnabled","$628d86a631dac044$var$CREATE","checkIfStateModificationsAreAllowed","_Atom","_Symbol$toPrimitive2","change","_this","setNewValue_","hasListeners","UPDATE","interceptChange","reportObserved","intercept_","registerInterceptor","prepareNewValue_","fireImmediately","observableKind","$628d86a631dac044$var$interceptChange","registerListener","$628d86a631dac044$var$UPDATE","UNCHANGED","$628d86a631dac044$var$hasListeners","$628d86a631dac044$var$notifyListeners","isObservableValue","handler","$628d86a631dac044$var$registerInterceptor","observe_","dependenciesState_","observing_","newObserving_","isPendingUnobservation_","diffValue_","unboundDepsCount_","isComputing_","isRunningSetter_","setter_","isTracing_","TraceMode","equals_","requiresReaction_","$628d86a631dac044$var$_Symbol$toPrimitive$1","isCaughtException","runId_","UP_TO_DATE_","$628d86a631dac044$var$CaughtException","triggeredBy_","trackAndCompute","$628d86a631dac044$var$TraceMode","NONE","wasSuspended","changed","computeValue_","track","trackDerivedFunction","scope_","keepAlive","CaughtException","keepAlive_","clearObserving","prevValue","autorun","inBatch","prevTrackingContext","trackingContext","untrackedEnd","prevU","$628d86a631dac044$var$propagateChangeConfirmed","firstTime","$628d86a631dac044$var$shouldCompute","warnAboutUntrackedRead_","cause","isComputedValue","$628d86a631dac044$var$trackDerivedFunction","disableErrorBoundaries","suspend_","STALE_","prevAllowStateReads","prevUntracked","obs","changeDependenciesStateTo0","$628d86a631dac044$var$isComputedValue","isComputingDerivation","trackingDerivation","bindDependencies","lowestNewObservingDerivationState","i0","dep","POSSIBLY_STALE_","$628d86a631dac044$var$untrackedStart","$628d86a631dac044$var$untrackedEnd","prevObserving","observing","$628d86a631dac044$var$changeDependenciesStateTo0","onBecomeStale_","$628d86a631dac044$var$checkIfStateReadsAreAllowed","runId","prevTracking","allowStateReadsStart","allowStateReads","$628d86a631dac044$var$bindDependencies","$628d86a631dac044$var$warnAboutDerivationWithoutDependencies","$628d86a631dac044$export$c7b7fb1b2b410642","MobXGlobals","pendingReactions","isRunningReactions","globalReactionErrorHandlers","computedRequiresReaction","reactionRequiresObservable","$628d86a631dac044$var$removeObserver","_dep","observableRequiresReaction","verifyProxies","_dep2","canMergeGlobalState","isolateCalled","__mobxGlobals","__mobxInstanceCount","$628d86a631dac044$export$8c437e4d572e2f99","action","isolateGlobalState","getGlobal","getGlobalState","$628d86a631dac044$export$84c93b6404d77e6f","hasObservers","$628d86a631dac044$var$persistentKeys","$628d86a631dac044$var$MobXGlobals","removeObserver","mobxGuid","queueForUnobservation","enforceActions","$628d86a631dac044$var$canMergeGlobalState","runReactions","pendingUnobservations","global1","$628d86a631dac044$export$c78907783e606401","$628d86a631dac044$export$5c18e491c80b9ab4","defaultGlobals","$628d86a631dac044$var$hasObservers","$628d86a631dac044$var$getObservers","add","logTraceInfo","$628d86a631dac044$var$queueForUnobservation","printDepTree","tree","lines","Reaction","$628d86a631dac044$var$endBatch","errorHandler_","requiresObservable_","onInvalidate_","isDisposed_","isTrackPending_","isScheduled_","isScheduled","onBO","runReaction_","$628d86a631dac044$var$propagateChanged","isRunning_","reportExceptionInDerivation_","$628d86a631dac044$var$propagateMaybeChanged","dispose","BREAK","$628d86a631dac044$export$23fbf90e5d80a5ee","Function","$628d86a631dac044$var$printDepTree","depth","repeat","dependencies","child","trace","enterBreakPoint","$628d86a631dac044$export$d2ae4167a30cf6bb","onReactionError","idx","reactionScheduler","runReactionsHelper","allReactions","iterations","schedule_","remainingReactions","$628d86a631dac044$var$runReactions","isReaction","setReactionScheduler","baseScheduler","spyReport","listeners","spyReportStart","END_EVENT","spyReportEnd","$628d86a631dac044$var$isSpyEnabled","ACTION","prevReaction","ACTION_BOUND","AUTOACTION","AUTOACTION_BOUND","DEFAULT_ACTION_NAME","actionBoundAnnotation","autoActionAnnotation","createActionFactory","isFunction","$628d86a631dac044$var$clearObserving","runInAction","executeAction","$628d86a631dac044$export$357889f174732d38","reaction","runSync","requiresObservable","$628d86a631dac044$var$runReactionsHelper","run","createSchedulerFromOptions","expression","effectAction","$628d86a631dac044$var$reactionScheduler","delay","scheduler","event","nextValue","$628d86a631dac044$var$ACTION","$628d86a631dac044$var$AUTOACTION","$628d86a631dac044$var$AUTOACTION_BOUND","$628d86a631dac044$var$DEFAULT_ACTION_NAME","errorHandler","$628d86a631dac044$var$actionAnnotation","$628d86a631dac044$var$createActionAnnotation","$628d86a631dac044$var$ACTION_BOUND","$628d86a631dac044$var$autoActionBoundAnnotation","ON_BECOME_OBSERVED","ON_BECOME_UNOBSERVED","$628d86a631dac044$var$createActionFactory","interceptHook","arg3","hook","cb","$628d86a631dac044$var$autoActionAnnotation","listenersKey","$628d86a631dac044$export$31eb53bd5b582a97","ALWAYS","OBSERVED","$628d86a631dac044$export$4abd31caebb0bb24","view","_opts$name","_opts","onError","extendObservable","annotations","descriptors","asObservableObject","reactionRunner","getDependencyTree","nodeToDependencyTree","$628d86a631dac044$var$actionBoundAnnotation","$628d86a631dac044$var$run","$628d86a631dac044$var$createSchedulerFromOptions","$628d86a631dac044$export$7203b476385689ae","nodeToObserverTree","getAtom","_opts$name2","compareStructural","generatorId","FlowCancellationError","flowBoundAnnotation","flowAnnotation","flow","generator","pendingPromise","baseFn","$628d86a631dac044$var$ON_BECOME_OBSERVED","$628d86a631dac044$var$ON_BECOME_UNOBSERVED","cancelPromise","$628d86a631dac044$var$isolateGlobalState","gen","yieldedPromise","$628d86a631dac044$var$ALWAYS","$628d86a631dac044$var$NEVER","$628d86a631dac044$var$OBSERVED","ea","$628d86a631dac044$var$setReactionScheduler","$628d86a631dac044$export$59d8134e963031bd","$628d86a631dac044$var$getOwnPropertyDescriptors","$628d86a631dac044$export$f246528900dd4467","interceptReads","propOrHandler","isObservableMap","intercept","$628d86a631dac044$var$nodeToDependencyTree","interceptInterceptable","$628d86a631dac044$var$unique","interceptProperty","$628d86a631dac044$export$3b1621dddf5aeacd","_isComputed","isObservableObject","observers","$628d86a631dac044$var$nodeToObserverTree","isComputed","isComputedProp","$628d86a631dac044$var$generatorId","_isObservable","$628d86a631dac044$export$e01c2a57c655302d","$628d86a631dac044$export$134218f44485f691","$628d86a631dac044$var$flowAnnotation","$628d86a631dac044$var$createFlowAnnotation","$628d86a631dac044$var$flowBoundAnnotation","$628d86a631dac044$export$ccc7b0636abaffc3","isObservableArray","promise","stepId","isObservableSet","onRejected","$628d86a631dac044$var$cancelPromise","_res","rejector","$628d86a631dac044$export$b1b0dfc8def25964","$628d86a631dac044$export$8c23365ce94ba925","$628d86a631dac044$export$ab0f802c05dd969b","apiDefineProperty","$628d86a631dac044$var$interceptProperty","apiOwnKeys","observe","propOrCb","cbOrFire","values_","observeObservableProperty","$628d86a631dac044$export$25fc416d10fa1afa","$628d86a631dac044$export$21bb8b7af2417cc3","getAdministration","$628d86a631dac044$var$_isComputed","$628d86a631dac044$export$3cf701ab9f66d86a","toJSHelper","__alreadySeen","$628d86a631dac044$export$7ad7acc949ba3cc7","$628d86a631dac044$var$_isObservable","$628d86a631dac044$export$68c286be0e7e55b7","$628d86a631dac044$export$3e9f948b41964866","$628d86a631dac044$export$ed97f33186d4b816","getAtomFromArgs","$628d86a631dac044$export$adaa4cf7ef1b65be","set_","when","predicate","_when","timeoutHandle","thisArg","disposer","$628d86a631dac044$export$a4f4bb6b1453fff5","cond","get_","whenPromise","ownKeys_","$628d86a631dac044$export$d1203567a167490e","$628d86a631dac044$var$observeObservableProperty","getAdm","$628d86a631dac044$var$observeObservable","$628d86a631dac044$export$71ff639cb8b2a36e","has_","$628d86a631dac044$var$cache","$628d86a631dac044$export$fafbc00dbefd1aef","$628d86a631dac044$var$toJSHelper","deleteProperty","preventExtensions","_res2","asDynamicObservableObject","_res3","hasInterceptors","interceptable","interceptors","pop","LOG","$628d86a631dac044$var$getAtomFromArgs","listenable","makeObservable","$628d86a631dac044$export$a55877ca9db47377","collectStoredAnnotations","$628d86a631dac044$var$_when","effect","makeAutoObservable","keysSymbol","SPLICE","MAX_SPLICE_SIZE","arrayTraps","$628d86a631dac044$var$getAdm","remove","setArrayLength_","_getAdm$set_","ObservableArrayAdministration","owned_","atom_","enhancer_","lastKnownLength_","legacyMode_","_target$$mobx","_target$$mobx$proxy_","dehanceValue_","$628d86a631dac044$var$hasInterceptors","dehanceValues_","$628d86a631dac044$var$once","added","addedCount","removedCount","newLength","$628d86a631dac044$var$registerListener","currentLength","updateArrayLength_","oldLength","deleteCount","newItems","$628d86a631dac044$var$keysSymbol","notifyArraySplice_","oldItems","notifyArrayChildUpdate_","notify","debugObjectName","removed","newV","oldV","notifyListeners","spliceWithArray_","createObservableArray","owned","delta","$628d86a631dac044$var$checkIfStateModificationsAreAllowed","arrayExtensions","clear","lengthDelta","spliceWithArray","spliceItemsIntoValues_","items","_this$values_","reverse","sort","$628d86a631dac044$var$SPLICE","addArrayExtension","simpleFunc","mapLikeFunc","reduceLikeFunc","funcName","funcFactory","dehancedValues","$628d86a631dac044$var$createObservableArray","$628d86a631dac044$var$ObservableArrayAdministration","currentValue","$628d86a631dac044$var$arrayTraps","isObservableArrayAdministration","ObservableMapMarker","ADD","DELETE","ObservableMap","keysAtom_","createAtom","data_","hasMap_","initialData","_len2","_key2","newEntry","entry","_len3","_key3","hasKey","$628d86a631dac044$var$addArrayExtension","_this2","element","addValue_","_this3","$628d86a631dac044$var$simpleFunc","transaction","$628d86a631dac044$var$mapLikeFunc","$628d86a631dac044$var$reduceLikeFunc","$628d86a631dac044$var$ObservableMapMarker","$628d86a631dac044$var$ADD","makeIterable","$628d86a631dac044$export$2e17fe64ec9a826e","updateValue_","$628d86a631dac044$var$DELETE","_change","$628d86a631dac044$export$2d62d2646dd2fb3c","_this3$hasMap_$get","replacementMap","convertToMap","keysReportChangedCalled","deleted","keyExisted","_this4","_this4$hasMap_$get","iter1","iter2","next1","next2","orderedData","self1","_keys$next","$628d86a631dac044$var$makeIterable","_keys$next2","_Symbol$iterator2","_iterator","_step$value","_step","ObservableSetMarker","_this6","_step2","_step3","$628d86a631dac044$var$convertToMap","_this7","_iterator3","_step4","$628d86a631dac044$var$_createForOfIteratorHelperLoose","_iterator4","_value","_step4$value","_key","_value2","nextIndex","_Symbol$toStringTag2","$628d86a631dac044$var$_Symbol$toStringTag","$628d86a631dac044$export$db1c0901f08fc6fd","observableValues","toStringTag","$628d86a631dac044$export$2235f602a7a77c81","$628d86a631dac044$var$ObservableSetMarker","callbackFn","_iterator2","defaultAnnotation_","appliedAnnotations_","pendingKeys_","getObservablePropValue_","_change2","outcome","$628d86a631dac044$var$_createClass","assertAnnotable","deleteOutcome","notifyPropertyAddition_","delete_","cachedDescriptor","_this$target_$storedA","$628d86a631dac044$var$recordAnnotationApplied","ObservableObjectAdministration","isObservableObjectAdministration","getCachedObservablePropDescriptor","descriptorCache","$628d86a631dac044$var$getCachedObservablePropDescriptor","recordAnnotationApplied","currentAnnotationType","requestedAnnotationType","StubArray","inherit","ctor","LegacyObservableArray","$628d86a631dac044$var$REMOVE","_this$pendingKeys_","_this$pendingKeys_$ge","createArrayBufferItem","reserveArrayBuffer","OBSERVABLE_ARRAY_BUFFER_SIZE","createLegacyArray","_this$pendingKeys_2","_this$pendingKeys_2$g","keys_","named","_options$name","eq","$628d86a631dac044$var$isObservableObjectAdministration","$628d86a631dac044$var$ObservableObjectAdministration","$628d86a631dac044$var$descriptorCache","setObservablePropValue_","className","$628d86a631dac044$var$isObject","_adm$target_$storedAn","$628d86a631dac044$var$StubArray","_StubArray","_Symbol$toStringTag","_Symbol$iterator","unwrap","areArrays","$628d86a631dac044$var$_assertThisInitialized","aCtor","bCtor","$628d86a631dac044$var$_inheritsLoose","aStack","bStack","arrays","_len","getArrayLength_","$628d86a631dac044$var$createArrayEntryDescriptor","isAnnotation","$628d86a631dac044$var$createArrayBufferItem","__MOBX_DEVTOOLS_GLOBAL_HOOK__","spy","extras","$628d86a631dac044$var$OBSERVABLE_ARRAY_BUFFER_SIZE","getDebugName","getSelf","$628d86a631dac044$var$LegacyObservableArray","$82cf9c41baae1a32$var$parsePath","text","$82cf9c41baae1a32$var$push","el","newArr","$82cf9c41baae1a32$var$trapNames","$82cf9c41baae1a32$var$keys","getOwnPropertyDescriptor","$82cf9c41baae1a32$var$DeepProxy","rootTarget","traps","userData","createProxy","realTraps","trapName","keyParamIdx","trap","nest","nestedTarget","$db06c6c0428e11c4$export$f6e2535fb5126e54","$25c724cf38cca5a7$export$ebec8610810318c5","lift","$25c724cf38cca5a7$export$871731df685d7753","liftedSource","$82cf9c41baae1a32$exports","$827407197066d981$var$extendStatics","$827407197066d981$export$a8ba968b8961cb8a","__","$827407197066d981$export$18ce0697a983be9b","$827407197066d981$export$3c9a16f847548506","$827407197066d981$export$29e00dfd3077644b","desc","decorate","$827407197066d981$export$d5ad3fd78186038f","paramIndex","metadataKey","metadataValue","$827407197066d981$export$1050f835b63b671e","_arguments","P","fulfilled","step","rejected","$827407197066d981$export$67ebef60e6f28a6","_","label","sent","verb","op","ops","trys","$827407197066d981$export$45d3717a4c69092e","k","k2","$827407197066d981$export$f33643c0debef087","$827407197066d981$export$19a8beecd37a4c45","$827407197066d981$export$8d051b38c9118094","ar","$827407197066d981$export$6388937ca91ccae8","il","jl","$827407197066d981$export$1216008129fb82ed","to","pack","$827407197066d981$export$10c90e4f7922046c","q","resume","fulfill","settle","$827407197066d981$export$bbd80228419bb833","$827407197066d981$export$e3b29a3d6162315f","$827407197066d981$export$4fb47efe1390b86f","cooked","raw","$827407197066d981$var$__setModuleDefault","$827407197066d981$export$c21735bcef00d192","mod","$827407197066d981$export$da59b14a69baef04","$827407197066d981$export$d5dcaf168c640c35","receiver","state","kind","$549df406bd03848f$export$128a15b65d1b6041","createImpl","ctorFunc","$7920d59a16766792$export$c9648b76fd580c34","_super","$9544808faf8db828$export$dae3f38077fc36c0","$4024a6137f3ca1a1$export$f55210826850c514","Subscription","initialTeardown","_parentage","_finalizers","empty","unsubscribe","_parentage_1","_parentage_1_1","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","$4024a6137f3ca1a1$var$execFinalizer","teardown","_hasParent","_addParent","parent","_removeParent","EMPTY","$4024a6137f3ca1a1$export$610f9c3ca1a38dd8","$4024a6137f3ca1a1$export$4f9221cbada3c4fc","$4539e0ab52628071$export$e506a1d27d1eaa20","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","$fcff0ca444dfe019$export$365aa6bd3c788e3d","timeout","_i","delegate","clearTimeout","handle","$630673870181eb05$export$ebf645db02d3e99f","$8d9c960c27758437$export$8793edee2d425525","$373dba2321062cae$export$b7f97edb34bc1f87","$373dba2321062cae$export$9c8f6e8d39c60cf3","$373dba2321062cae$export$dd472c3d8fe5a85a","$373dba2321062cae$export$ff9346b0d1d30313","$94498bc23cc6fa36$var$context","$94498bc23cc6fa36$export$d974811edc77eafa","isRoot","errorThrown","$94498bc23cc6fa36$export$3e205fbb5df021e0","$94584410d38fc160$export$60959659b2c22881","Subscriber","destination","isStopped","$94584410d38fc160$export$88d395d20619a0af","complete","$94584410d38fc160$export$94eeb6a328cab6c7","$94584410d38fc160$var$handleStoppedNotification","_next","_error","_complete","$94584410d38fc160$var$_bind","$94584410d38fc160$var$bind","$94584410d38fc160$var$ConsumerObserver","ConsumerObserver","partialObserver","$94584410d38fc160$var$handleUnhandledError","SafeSubscriber","observerOrNext","context_1","$94584410d38fc160$var$defaultErrorHandler","notification","subscriber","$3f3a24fdee318049$export$b9e075132cc6937f","onNext","onComplete","onFinalize","$3f3a24fdee318049$export$8fbbf0c4d80268e5","OperatorSubscriber","shouldUnsubscribe","closed_1","$77ca292867937a61$export$871de8747c9eaa88","project","subscribe","$e3fd904c853f5625$export$1e2f57719e155213","$1ce8a606538a1d5a$export$4369c812aac99591","$6cf37fdb43aa4541$export$5ab46cbf6120b33a","$852b44ea633a91c7$export$f0954fd7d5368655","$95b85aab676b854a$export$a4627e546088548d","fns","$95b85aab676b854a$export$71f88a61afaa14d7","input","reduce","$d82ba5f0ac25efd9$export$77cea355fa80b5f4","Observable","_subscribe","operator","$d82ba5f0ac25efd9$var$isSubscriber","_trySubscribe","promiseCtor","$d82ba5f0ac25efd9$var$getPromiseCtor","pipe","operations","toPromise","$d82ba5f0ac25efd9$var$isObserver","$8396cb88d16d387b$export$48c0cddbc99c45c2","$c918256aeee07bc2$export$edb10ab8dd75a915","$b3c446f5eaa8a08d$export$7cbe71b9fa263484","$863dad3a4a21c71d$export$aa9956be4ae4fe8","$863dad3a4a21c71d$export$6f58e2338da23f4d","$60a797a2f889e9f1$export$9652023d9040757","$0246f28b04db73e3$export$cf4785e597badab3","readableStream","_b","releaseLock","$0246f28b04db73e3$export$c088ffafdba7405f","$4c1cea7d3d5888c0$export$6a9cfa3ebc765910","$4c1cea7d3d5888c0$export$aa3d41784b3267fa","$4c1cea7d3d5888c0$export$4cb2acdbcda2c253","$4c1cea7d3d5888c0$export$60f45028237c39d1","$4c1cea7d3d5888c0$export$e073fccf36d78cc1","$4c1cea7d3d5888c0$export$dcccc29c315dd646","$4c1cea7d3d5888c0$export$b2dcb11d46e7a4ad","iterable","iterable_1","iterable_1_1","asyncIterable","$4c1cea7d3d5888c0$var$process","asyncIterable_1","asyncIterable_1_1","$d9a1cf10aab8b3e4$export$a2b7447487315232","parentSubscription","work","scheduleSubscription","schedule","$d577fd731f124004$export$600918ebaa9e0a1b","concurrent","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","active","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","$c4ebb957aeb5da66$export$6b9f6c0d32c093f9","resultSelector","ii","$8d596f9bd42a3355$export$c28c8388be0ab31a","$7c6c260a8feae39c$export$e19cd5f9376f8cee","Action","$ff186fff0ca6a43a$export$f0ca5e16f6f68711","setInterval","clearInterval","$bffe72f00017dabf$export$b5369ffd7cb2211b","AsyncAction","id","recycleAsyncId","requestAsyncId","_id","flush","_scheduler","_execute","_delay","errorValue","errored","actions","$6d64003148a77da7$export$c1895ea2d519a677","now","$3abe7902ac8fd83e$export$d3e54bb8584cda7c","Scheduler","schedulerActionCtor","$f819c375cc5c5750$export$4114a3ec92faa3c6","AsyncScheduler","SchedulerAction","_active","_scheduled","$90fed45d734ba9ff$export$8d6b71a2b178fc32","$90fed45d734ba9ff$export$12af436354f1a4f7","$7428fd176f6995e2$export$18aef43295bbe906","$94a4678af8bf9ffe$export$b314777ae20abca9","$dbe2f8f9b8012394$export$187e35932e88c15c","$c14c2107afa02809$var$last","$c14c2107afa02809$export$9ae19b645239a61b","$c14c2107afa02809$export$29534b2f653ae592","$c14c2107afa02809$export$3de14b735070dcd5","defaultValue","$312d2f803052e58a$export$9007f49c319d1ac7","$58c4decc4d62ec25$export$1eb44d8f5f64733b","$66a3bdef3db46c92$export$ed8bd553a12b6a30","$d7cabd6cc4507a01$export$fc9afd948577f0a8","$30b73b7e82bfc4b5$export$b34673931371729a","$5d785a05ee2e5f15$export$2b75c58ab9b5b766","$9237442712a3e01e$export$7c7f0979b56a32f3","$2069696443473b03$export$3385251aeecad28a","$1fbed76ea91abf5b$export$49c44dfc2bb21d70","$d14e1b48dceae89e$export$6788812c4e6611e6","$6df0b6bbdea34ce6$export$ee1b3e54f0441b22","$3827fb927b8f5763$export$ccb33e29d92c9a58","$3827fb927b8f5763$export$6e22c362a0406a2c","$3827fb927b8f5763$var$emptyScheduled","$e6f3d5b2fc4fd59f$export$b7df5d561049483a","count","seen","$41e043be093f3ee1$export$6953b97c7d866605","$86b3c42bb28720f4$export$e0eaf3a86c03b2ad","$786496dab2ee540b$export$286ca829307725c9","delayDurationSelector","subscriptionDelay","$69e47217cbbf9edb$export$c03bb0116ee09d4b","$994c88611d3669a1$export$9dc4ecf953986f04","dueTime","intervalOrScheduler","intervalDuration","due","$fe78fd29fff78e13$export$1391212d75b2ee65","duration","$4b32d2dbd69ed967$export$3dea766d36a8935f","$38d84cd4b386d389$export$78f6d1b1dbcda304","$40e217601f1000b5$export$e4ca6d7b7a6dcf9b","hasValue","$5918c454e30b2029$export$c8ea5e9f84346833","errorFactory","$5918c454e30b2029$var$defaultErrorFactory","$cf4ef280d3a18285$export$43128fadae87b74a","hasDefaultValue","$51bf2e5c1cecc042$var$isArray","$51bf2e5c1cecc042$var$callOrApply","$51bf2e5c1cecc042$export$559affaa48f4288d","$3a842066e8d9fec1$var$nodeEventEmitterMethods","$3a842066e8d9fec1$var$eventTargetMethods","$3a842066e8d9fec1$var$jqueryMethods","$3a842066e8d9fec1$export$a36e16046ae8f1bb","eventName","$3a842066e8d9fec1$var$isEventTarget","$3a842066e8d9fec1$var$isNodeStyleEventEmitter","$3a842066e8d9fec1$var$toCommonHandlerRegistry","$3a842066e8d9fec1$var$isJQueryStyleEventEmitter","subTarget","addListener","removeListener","$5bf68a7e1d10606b$export$ba255e9e49e00608","$e20bd0a815c0c948$export$f708eee25634bc80","$cc8234e73f4a5372$export$b6bbab5a9b109038","Subject","currentObservers","hasError","thrownError","subject","$cc8234e73f4a5372$export$155189cde295587d","_throwIfClosed","_c","_checkFinalizedStatuses","_innerSubscribe","asObservable","AnonymousSubject","$d0ae1770a682faf6$export$915d2682b0aa0991","ReplaySubject","_bufferSize","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","_trimBuffer","subscription","adjustedBufferSize","last","$13b367ccf711a799$export$30fc204bc7867c02","accumulator","seed","hasSeed","emitOnNext","emitBeforeComplete","hasState","$4e2ac17186311ad8$export$c87d910e63d22ed6","$1b60e58ab5a1c5ed$export$fc00ee57782020aa","timestampProvider","timestamp","$5dca3ebd4fc768f7$export$a079a83b07f794bf","$5dca3ebd4fc768f7$export$8895613e57eed5df","$5dca3ebd4fc768f7$export$b37aab7cecdd910a","rj","$5dca3ebd4fc768f7$export$fe4ea8c4392aed8d","comp","$5dca3ebd4fc768f7$export$a6cdc56e425d0d0a","$5dca3ebd4fc768f7$export$f6e2535fb5126e54","$5dca3ebd4fc768f7$var$deepAccess","rest","nextTarget","$5dca3ebd4fc768f7$export$c92bbb05baa20c76","callQueue","proxiedTarget","$parcel$interopDefault","_t","targetReady","proxied","targetFunc","queuedCalls","$5dca3ebd4fc768f7$export$298d3d9596d37853","enm","nums","$5dca3ebd4fc768f7$export$d6051a0f7a227332","valueMap","$5dca3ebd4fc768f7$export$4385e60b38654f68","random","$5dca3ebd4fc768f7$export$2e015b6955893291","$5dca3ebd4fc768f7$export$54979bdf21a04c88","$5dca3ebd4fc768f7$export$c5ab927018e48ed7","$5dca3ebd4fc768f7$export$1726ea10b1063b9f","spacingDelayMs","acc","timeDelta","$5dca3ebd4fc768f7$export$a1835851dbf3472f","$628d86a631dac044$export$2983e091f1a1e8e2","$5dca3ebd4fc768f7$export$428faa838a18f9a1","stream","$5dca3ebd4fc768f7$export$34cbdf6acc1dcda1","$628d86a631dac044$export$f08965dd1304d490","$5dca3ebd4fc768f7$export$5941d8f882bfe8c6","stream$","$628d86a631dac044$export$832370e58be26204","$5dca3ebd4fc768f7$export$20d422aa515aa265","computedValue","$5dca3ebd4fc768f7$export$ccdc01a1740c3d06","$5dca3ebd4fc768f7$export$21bcb550455d596e","current","$5dca3ebd4fc768f7$export$31b40729666a4ae0","rand","$5dca3ebd4fc768f7$var$_getRandomInt","hex","$5dca3ebd4fc768f7$var$_hexAligner","z","$5dca3ebd4fc768f7$export$e772c8ff12451969","returns","$5dca3ebd4fc768f7$export$d02631cccf789723","total","$5dca3ebd4fc768f7$export$d08f2cb7b46325ee","$5dca3ebd4fc768f7$export$3d72b92ce2fbee37","timeoutMsg","race","$5dca3ebd4fc768f7$export$77f8b3f78e17f705","maxRetries","retryInterval","info","$5dca3ebd4fc768f7$export$a110d95e992bd193","$5dca3ebd4fc768f7$export$cfc14088dfefce5f","first","second","$5dca3ebd4fc768f7$export$a9747a3ce23cf91c","iteratorA","iteratorB","nextA","nextB","$5dca3ebd4fc768f7$export$cb4f46f0c52cabc4","transform","$5dca3ebd4fc768f7$export$f4e80869b1e1267e","$5dca3ebd4fc768f7$export$7b6ba0f67efac738","area","coord","width","height","$5dca3ebd4fc768f7$export$dd0feb9b59bb352","coords","dx","dy","$5dca3ebd4fc768f7$export$f8151fce47ad1c35","$HVvcW","BigNumber","keccak256Bytes","$lChSS","toUtf8Bytes","toHexString","$5dca3ebd4fc768f7$export$d9135601df538b7f","abi","$5dca3ebd4fc768f7$export$9a866da2224424f7","worker","input$","postMessage","$5dca3ebd4fc768f7$export$dd2e08b4a54c623f","$5dca3ebd4fc768f7$var$rightMask","keep","$5dca3ebd4fc768f7$export$2a703dbb0cb35339","numbers","bitsPerNumber","packed","i1","$5dca3ebd4fc768f7$export$417857010dc9287f","shiftedPacked","$5dca3ebd4fc768f7$export$80217d4285ef0118","$5dca3ebd4fc768f7$export$d46b0c5b2767830b","$5dca3ebd4fc768f7$var$LOWER_HALF_MASK","$5dca3ebd4fc768f7$var$MAX_SUPPORTED","$5dca3ebd4fc768f7$export$4e2d2ead65e5f7e3","subtract","$5dca3ebd4fc768f7$export$275a142f6feee5fc","coordToKey","keyToCoord","coordMapLike","coordMap","toArray","$5dca3ebd4fc768f7$var$coordToKey","$5dca3ebd4fc768f7$var$keyToCoord","fragments","$5dca3ebd4fc768f7$export$188112bba4b56d6","$5dca3ebd4fc768f7$export$bc183bce5da8d5c","padStart","$5dca3ebd4fc768f7$export$a08d3c7411630c7d","$5dca3ebd4fc768f7$export$3d019e3cb2017ae2","$5dca3ebd4fc768f7$export$1aab31943c5a2429","$5dca3ebd4fc768f7$var$RND_A","$5dca3ebd4fc768f7$var$RND_B","$5dca3ebd4fc768f7$var$ACCURACY","$5dca3ebd4fc768f7$export$a477072d5b4aa0b","$5dca3ebd4fc768f7$export$3c17558da18e4d75","coordinate","period","$5dca3ebd4fc768f7$export$89e29e4ab65e70a9","scale","$5dca3ebd4fc768f7$export$3d7bcdd6a7c1bedc","octave","periodX","MAX_SAFE_INTEGER","periodY","$5dca3ebd4fc768f7$export$6f6e5b9099b39743","config","xi","lerp","$5dca3ebd4fc768f7$export$9a38057879dd0879","lerpX","yi","lerpY","x0","x1","x2","x3","xSamples","y1","$5dca3ebd4fc768f7$var$TOPICS_KEY","$5dca3ebd4fc768f7$export$748ada60eaf985cc","windowConsole","filtersActive","localStorage","getItem","topicsString","topics","logger","logs","topic","setItem","removeItem","$5dca3ebd4fc768f7$export$d7ea5b7fe202bfa1","sqrt","$5dca3ebd4fc768f7$export$b40334c0bd1540c","$5dca3ebd4fc768f7$export$33cb1a0b2fba5a87","$5dca3ebd4fc768f7$export$e0b70b88274897fe","hexString","matches","byte","$5dca3ebd4fc768f7$export$9024cd77341454fd","$5dca3ebd4fc768f7$export$1af0c9ce8253b845","$5dca3ebd4fc768f7$export$7463a925b37d02ae","byteLengths","$5dca3ebd4fc768f7$export$a948cade9729a2aa","int32arr","Int32Array","$5dca3ebd4fc768f7$export$9c098365d3e41ff1","$5dca3ebd4fc768f7$export$1391710be5c2a900","$5dca3ebd4fc768f7$export$956ffad9cab113ca","maxValue","minValue","$5dca3ebd4fc768f7$export$4dc2491d97ef52ad","$fd25adc52e567ec4$export$d6b40c95035461c7","bufferTimeSpan","otherArgs","bufferCreationInterval","maxBufferSize","bufferRecords","restartOnEmit","record","subs","startBuffer","record_1","bufferTimeSubscriber","recordsCopy","recordsCopy_1","recordsCopy_1_1","$fed3504fe982b203$export$3dede90624df3ba9","selector","handledResult","innerSub","syncUnsub","$33ad5c27a3b7f7d2$export$23c7d6c8dcd743fe","$72b3587a41dd7b58$export$d02631cccf789723","$kJWGl","$075615d54e00ae25$export$83d89fbfd8236492","$0abaa85c3c1ba5b7$var$logger","$jUSLy","Logger","$0abaa85c3c1ba5b7$var$allowedTransactionKeys","chainId","gasLimit","gasPrice","nonce","accessList","maxFeePerGas","maxPriorityFeePerGas","customData","ccipReadEnabled","$0abaa85c3c1ba5b7$var$resolveName","resolver","nameOrPromise","throwArgumentError","$kX5NV","getAddress","throwError","UNSUPPORTED_OPERATION","operation","resolveName","$0abaa85c3c1ba5b7$var$resolveAddresses","paramType","all","components","baseType","arrayChildren","makeError","INVALID_ARGUMENT","argument","$0abaa85c3c1ba5b7$var$populateTransaction","contract","fragment","overrides","inputs","$9iMVP","shallowCopy","checkArgumentCount","signer","resolveProperties","check","$0abaa85c3c1ba5b7$var$__awaiter","provider","resolved","resolvedAddress","interface","encodeFunctionData","tx","ro","$1DCzd","accessListify","gas","intrinsic","$43GX7","arrayify","roValue","isZero","payable","leftovers","$0abaa85c3c1ba5b7$var$buildPopulate","$0abaa85c3c1ba5b7$var$buildEstimate","signerOrProvider","estimateGas","$0abaa85c3c1ba5b7$var$addContractWait","wait","confirmations","receipt","events","deepCopy","parseLog","decodeEventLog","eventFragment","eventSignature","signature","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","$0abaa85c3c1ba5b7$var$buildCall","collapseSimple","blockTag","deployTransaction","_deployed","decodeFunctionResult","outputs","CALL_EXCEPTION","$0abaa85c3c1ba5b7$var$buildSend","txRequest","sendTransaction","$0abaa85c3c1ba5b7$var$buildDefault","constant","$0abaa85c3c1ba5b7$var$getEventTag","$0abaa85c3c1ba5b7$var$RunningEvent","tag","defineReadOnly","once","removeAllListeners","listenerCount","argsCopy","prepareEvent","getEmit","$0abaa85c3c1ba5b7$var$ErrorRunningEvent","$0abaa85c3c1ba5b7$var$FragmentRunningEvent","contractInterface","getEventTopic","decodeError","$lrh2Y","checkResultErrors","$0abaa85c3c1ba5b7$var$WildcardRunningEvent","$0abaa85c3c1ba5b7$export$304faa4fc17528db","addressOrName","getStatic","$kIKA0","Signer","isSigner","$109eS","Provider","isProvider","uniqueFilters","filters","encodeFilterTopics","uniqueNames","uniqueSignatures","functions","callStatic","populateTransaction","signatures","getContractAddress","Interface","isInterface","deployed","_deployedPromise","getCode","contractAddress","fallback","connect","VoidSigner","attach","Indexed","isIndexed","_normalizeRunningEvent","runningEvent","_runningEvents","_getRunningEvent","getEvent","fragment1","_checkRunningEvents","_wrappedEmits","_wrapEvent","_addEventListener","wrappedEmit","queryFilter","fromBlockOrBlockhash","toBlock","isHexString","fromBlock","getLogs","accum","runningEvent1","$0abaa85c3c1ba5b7$export$8517d80acf00e19a","$0abaa85c3c1ba5b7$export$505569a6bf584fd9","bytecode","bytecodeHex","isBytes","hexlify","getDeployTransaction","deploy","encodeDeploy","unsignedTx","getContract","compilerOutput","MISSING_ARGUMENT","evm","getInterface","$7365cdee66aea8fc$export$badd13187c087617","$393c0e4511989cbf$export$c7e79fcb6f8ac048","$301f33384e2ead1e$export$83d89fbfd8236492","$6314bed89d2ce165$var$logger","$6314bed89d2ce165$var$isRenetworkable","renetwork","$6314bed89d2ce165$var$ethDefaultProvider","network","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","error1","AlchemyProvider","alchemy","error2","PocketProvider","pocket","error3","CloudflareProvider","cloudflare","error4","AnkrProvider","ankr","skip1","provider1","error5","FallbackProvider","quorum","$6314bed89d2ce165$var$etcDefaultProvider","JsonRpcProvider","$6314bed89d2ce165$var$homestead","ensAddress","_defaultProvider","$6314bed89d2ce165$var$ropsten","$6314bed89d2ce165$var$classicMordor","$6314bed89d2ce165$var$networks","unspecified","homestead","mainnet","morden","ropsten","testnet","rinkeby","kovan","goerli","kintsugi","sepolia","classic","classicMorden","classicMordor","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","$6314bed89d2ce165$export$7de4970ebfd8206d","standard","standard1","standard2","defaultProvider","$6cfb81bd5cacf443$var$ALPHABET","$6cfb81bd5cacf443$var$ALPHABET_MAP","$6cfb81bd5cacf443$var$z","$6cfb81bd5cacf443$var$x","$6cfb81bd5cacf443$var$polymodStep","pre","$6cfb81bd5cacf443$var$prefixChk","prefix","chk","$6cfb81bd5cacf443$var$encode","words","LIMIT","$6cfb81bd5cacf443$var$__decode","lowered","uppered","toUpperCase","wordChars","$6cfb81bd5cacf443$var$decodeUnsafe","$6cfb81bd5cacf443$var$decode","$6cfb81bd5cacf443$var$convert","inBits","outBits","maxV","$6cfb81bd5cacf443$var$toWordsUnsafe","$6cfb81bd5cacf443$var$toWords","$6cfb81bd5cacf443$var$fromWordsUnsafe","$6cfb81bd5cacf443$var$fromWords","$6cfb81bd5cacf443$exports","decodeUnsafe","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","$70af7b18a1032815$export$83d89fbfd8236492","$a8cc802331c2d79e$var$logger","$a8cc802331c2d79e$export$a06636add2a09fd8","formats","getDefaultFormats","bigNumber","number","allowNull","blockNumber","transactionIndex","uint256","creates","transactionRequest","receiptLog","arrayOf","logIndex","root","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","block","parentHash","difficulty","miner","extraData","transactions","baseFeePerGas","blockWithTransactions","transactionResponse","filterLog","boolean","allowFalsish","strict","callAddress","hexDataSlice","hexValue","hexDataLength","hexZeroPad","_block","author","_difficulty","chainId1","networkId","value1","byzantium","checkKey","checkValue","nullValue","replaceValue","$a8cc802331c2d79e$export$3091239f5b20b896","isCommunityResource","$a8cc802331c2d79e$export$d93d5f61c2498b6","$a8cc802331c2d79e$var$throttleMessage","$a8cc802331c2d79e$export$4c41bd49e82e82ab","$09c01876bb814335$var$logger","$09c01876bb814335$var$MAX_CCIP_REDIRECTS","$09c01876bb814335$var$checkTopic","$09c01876bb814335$var$serializeTopics","unique","sorted","$09c01876bb814335$var$deserializeTopics","comps","$09c01876bb814335$var$getEventTag","ForkEvent","isForkEvent","$09c01876bb814335$var$getTime","getTime","$09c01876bb814335$var$stall","$09c01876bb814335$var$PollableEvents","$09c01876bb814335$export$d61e24a684f9e51","_lastBlockNumber","_inflight","pollable","$09c01876bb814335$var$coinInfos","symbol","p2pkh","p2sh","ilk","$09c01876bb814335$var$bytes32ify","$09c01876bb814335$var$base58Encode","$7dfv1","Base58","$ijbW5","sha256","$09c01876bb814335$var$matcherIpfs","$09c01876bb814335$var$matchers","$09c01876bb814335$var$_parseString","$bxhzT","toUtf8String","$09c01876bb814335$var$_parseBytes","$09c01876bb814335$var$getIpfsLink","link","$09c01876bb814335$var$numPad","padded","$09c01876bb814335$var$bytesPad","$09c01876bb814335$var$encodeBytes","datas","byteCount","hexConcat","$09c01876bb814335$export$8b4c839865b08288","supportsWildcard","_supportsEip2544","_fetch","parameters","$dyZir","namehash","parseBytes","dnsEncode","_fetchBytes","_getAddress","coinType","hexBytes","coinInfo","length1","length2","$6sCvc","HashZero","getAvatar","linkage","content","avatar","getText","scheme","owner","_resolvedAddress","addr","tokenId","tokenOwner","balance","metadataUrl","$4nRgJ","fetchJson","imageUrl","image","getContentHash","ipfs","ipns","swarm","skynet","urlSafe","$kwb6H","keyBytes","$09c01876bb814335$var$defaultFormatter","$09c01876bb814335$var$nextPollId","$09c01876bb814335$export$ff3f6dd83125ac45","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","ready","poll","NETWORK_ERROR","ccipReadFetch","calldata","urls","sender","errorMessages","href","errorPassThrough","statusCode","errorMessage","SERVER_ERROR","_getInternalBlockNumber","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","getNetwork","_setFastBlockNumber","pollId","runners","pollingInterval","previousBlockNumber","eventBlockNumber","runner","minFromBlock","runner1","resetEventsBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","_bootstrapPoll","_getFastBlockNumber","getBlockNumber","waitForTransaction","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","$09c01876bb814335$var$__awaiter","getTransactionCount","mined","getBlockWithTransactions","ti","TRANSACTION_REPLACED","replacement","_wrapTransaction","timer","TIMEOUT","unref","getGasPrice","getBalance","_getBlockTag","getStorageAt","expectedHash","returnedHash","confirms","signedTransaction","hexTx","_getTransactionRequest","_getFilter","_call","attempt","redirects","txSender","urlsOffset","urlsLength","urlsData","callbackSelector","ccipResult","_getBlock","blockHashOrBlockTag","includeTransactions","blockNumber1","blockWithTxs","oncePoll","getEtherPrice","getResolver","currentName","_getResolver","addrData","lookupAddress","resolverAddr","nameOrAddress","resolverAddress","avatar1","NOT_IMPLEMENTED","_startEvent","_stopEvent","stopped","eventTag","$9973707f1a6e7539$var$logger","$9973707f1a6e7539$var$errorGas","$9973707f1a6e7539$var$spelunk","requireData","$9973707f1a6e7539$var$checkError","result1","UNPREDICTABLE_GAS_LIMIT","responseText","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","$9973707f1a6e7539$var$timer","$9973707f1a6e7539$var$getResult","payload","$9973707f1a6e7539$var$getLowerCase","$9973707f1a6e7539$var$_constructorGuard","$9973707f1a6e7539$export$5f7b5fca3508545a","constructorGuard","addressOrIndex","connectUnchecked","$9973707f1a6e7539$var$UncheckedJsonRpcSigner","_address","_index","accounts","sendUncheckedTransaction","fromAddress","estimate","$9973707f1a6e7539$var$__awaiter","hexlifyTransaction","ACTION_REJECTED","signTransaction","signMessage","messageData","_legacySignMessage","_signTypedData","domain","types","populated","$j0g3U","TypedDataEncoder","resolveNames","getPayload","unlock","password","$9973707f1a6e7539$var$allowedTransactionKeys","$9973707f1a6e7539$export$da28308012bf6748","$09c01876bb814335$exports","BaseProvider","networkOrReady","_nextId","_cache","_eventLoopCache","_uncachedDetectNetwork","serverError","getSigner","getUncheckedSigner","listAccounts","jsonrpc","cache","connection","prepareRequest","hexlifyTransaction1","feeData","getFeeData","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","checkProperties","$a888560116aeb172$export$3909fb301d3dc8c9","$868e11c886e6b3d0$var$logger","$868e11c886e6b3d0$var$NextId","$868e11c886e6b3d0$export$bfafe629242f30bd","$9973707f1a6e7539$exports","_wsReady","websocket","_requests","messageEvent","_subs","processFunc","fauxPoll","_websocket","_detectNetwork","rid","param","subIdPromise","_subIds","subId","emitReceipt","$fdc03145cee1e2fe$var$logger","$fdc03145cee1e2fe$export$b3d647c1c29df44d","$fdc03145cee1e2fe$export$664128d6239ccf96","apiKey","checkAbstract","$2163a6241b3ee670$var$logger","$2163a6241b3ee670$var$defaultApiKey","$2163a6241b3ee670$export$f6c13301c7b76371","$868e11c886e6b3d0$exports","WebSocketProvider","$2163a6241b3ee670$export$999cc40da3fbc6f","$fdc03145cee1e2fe$exports","UrlJsonRpcProvider","allowGzip","throttleCallback","$3e6209021dcf0574$var$logger","$3e6209021dcf0574$var$defaultApiKey","$3e6209021dcf0574$var$getHost","$3e6209021dcf0574$export$72783b2aefa72a45","projectSecret","user","$8f9aaadf1ac6cac7$var$logger","$8f9aaadf1ac6cac7$export$7113381f8f264fc0","$1f037ea1e8d4e75a$var$logger","$1f037ea1e8d4e75a$var$getTransactionPostData","maxFeePerGs","storageKeys","$1f037ea1e8d4e75a$var$getResult","throttleRetry","$1f037ea1e8d4e75a$var$getJsonResult","$1f037ea1e8d4e75a$var$checkLogTag","$1f037ea1e8d4e75a$var$checkError","$1f037ea1e8d4e75a$export$dd1d942a536c7912","getBaseUrl","getUrl","query","baseUrl","getPostUrl","getPostData","apikey","post","procFunc","throttleSlotInterval","payloadStr","txhash","postData","postData1","topic0","blocks","ethusd","getHistory","endBlock","startblock","endblock","timeStamp","$3aa1b6e4c5d8064b$var$logger","$3aa1b6e4c5d8064b$var$now","$3aa1b6e4c5d8064b$var$checkNetworks","networks","$3aa1b6e4c5d8064b$var$median","maxDelta","middle","$3aa1b6e4c5d8064b$var$serialize","isBigNumber","$3aa1b6e4c5d8064b$var$nextRid","$3aa1b6e4c5d8064b$var$stall","$3aa1b6e4c5d8064b$var$ForwardErrors","$3aa1b6e4c5d8064b$var$ForwardProperties","$3aa1b6e4c5d8064b$var$exposeDebugConfig","weight","$3aa1b6e4c5d8064b$var$normalizedTally","normalize","configs","tally","$3aa1b6e4c5d8064b$var$getProcessFunc","_highestBlockNumber","$3aa1b6e4c5d8064b$var$waitForSync","$3aa1b6e4c5d8064b$var$getRunner","currentBlockNumber","$3aa1b6e4c5d8064b$export$cb1d0beacb55feb7","providerConfigs","configOrProvider","stallTimeout","priority","results","$c9GJb","shuffled","t0","inflightWeight","staller","backend","waiting","getPromise","results1","errorCode","$6aa769600cbc0cc9$export$fbe151f90a1ece01","$95cf20132e8b3623$var$logger","$95cf20132e8b3623$var$defaultProjectId","$95cf20132e8b3623$export$dd168a807d60da4f","$95cf20132e8b3623$export$60ff1a559b5c6ebd","projectId","apiKeyObj","assertArgument","$fc11f42438270e1c$export$5a16092bf20edf97","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","$b1eeae2f80351cc9$var$logger","$b1eeae2f80351cc9$var$defaultApiKey","$b1eeae2f80351cc9$export$8235cbce3ce273bd","$65c9f72d1a1598e7$var$logger","$65c9f72d1a1598e7$var$defaultApplicationId","$65c9f72d1a1598e7$export$58bb47e42f6b092e","applicationId","loadBalancer","applicationSecretKey","$0fa1a414be33bf1a$var$logger","$0fa1a414be33bf1a$var$_nextId","$0fa1a414be33bf1a$var$buildWeb3LegacyFetcher","sendFunc","fetcher","$0fa1a414be33bf1a$var$buildEip1193Fetcher","$0fa1a414be33bf1a$export$d05096c9fd9d936d","jsonRpcFetchFunc","subprovider","isMetaMask","sendAsync","$15a3db00f674cf35$var$logger","$15a3db00f674cf35$export$4f77a1d3c1ac6642","$3aa1b6e4c5d8064b$exports","$8f9aaadf1ac6cac7$exports","$1f037ea1e8d4e75a$exports","$ebeb5c048b010fdb$export$83d89fbfd8236492","$c8fb0c03e50e3c94$export$af88d00dbe7f521","$64iwj","anyGlobal","_ethers","$c8fb0c03e50e3c94$exports","$XjWtB","$dba741454b05dcb0$var$useColors","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","$1","$dba741454b05dcb0$var$formatArgs","$dba741454b05dcb0$exports","lastC","$dba741454b05dcb0$var$save","storage","$dba741454b05dcb0$var$load","$dba741454b05dcb0$var$localstorage","warned","$dba741454b05dcb0$var$formatters","$3fd763eac4f97808$var$Long","wasm","WebAssembly","Instance","Module","isLong","ctz32","clz32","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","radixToPower","power","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isNegative","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","lessThan","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiply","multiplier","b00","divide","divisor","approx","toUnsigned","shru","shr","shl","log2","approxRes","approxRem","modulo","countLeadingZeros","clz","countTrailingZeros","ctz","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","rotateLeft","rotl","rotateRight","rotr","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","_default","define","amd","$3fd763eac4f97808$exports","$35a527f7534a2588$exports","$4780bf60c47af0d6$export$a79d2123b1e05cb","$4780bf60c47af0d6$var$createBaseECSState","componentIdIdx","entityIdIdx","$4780bf60c47af0d6$export$ec97628372f4ab6c","$4780bf60c47af0d6$var$createBaseECSStateSnapshot","stateComponents","stateEntities","stateHash","startBlockNumber","endBlockNumber","worldAddress","$4780bf60c47af0d6$export$46bd4c06000b8ef3","v1","v2","$4780bf60c47af0d6$var$createBaseWorlds","$4780bf60c47af0d6$export$2b5cea6c48fbdd25","$4780bf60c47af0d6$var$createBaseECSStateRequestLatest","$4780bf60c47af0d6$export$58aa9e692cebfd2e","$4780bf60c47af0d6$var$createBaseECSStateRequestLatestStreamPruned","pruneAddress","pruneComponentId","chunkPercentage","$4780bf60c47af0d6$export$a5fcefb1bfb1027","$4780bf60c47af0d6$var$createBaseECSStateRequestLatestStream","$4780bf60c47af0d6$export$d0972d32e7a67f45","$4780bf60c47af0d6$var$createBaseECSStateBlockRequestLatest","$4780bf60c47af0d6$export$74206fc4ff84132","$4780bf60c47af0d6$var$createBaseECSStateRequestAtBlock","$4780bf60c47af0d6$export$4e5b7eaa93f5106b","$4780bf60c47af0d6$var$longToNumber","$4780bf60c47af0d6$var$createBaseWorldsRequest","$4780bf60c47af0d6$export$3ba502109ebd5763","$4780bf60c47af0d6$var$createBaseECSStateReply","$4780bf60c47af0d6$export$383cc886cc76bf15","$4780bf60c47af0d6$var$createBaseECSStateReplyV2","$4780bf60c47af0d6$export$67bb35224da83c61","$4780bf60c47af0d6$var$createBaseECSStateBlockReply","$4780bf60c47af0d6$export$ae9512a3d5467b80","$4780bf60c47af0d6$export$9f8026c196b9ac40","getStateLatest","getStateLatestStream","getStateLatestStreamV2","getStateLatestStreamPruned","getStateLatestStreamPrunedV2","getStateBlockLatest","getStateAtBlock","getWorlds","$4780bf60c47af0d6$var$globalThis","$8c3983786fe177a1$exports","$4090b0a3fd18b8b0$exports","$1ad70495fc551421$export$a79d2123b1e05cb","$1ad70495fc551421$var$createBaseTxMetadata","$1ad70495fc551421$export$3a5e6506f4c2ec43","$1ad70495fc551421$var$longToNumber","$1ad70495fc551421$var$createBaseECSEvent","eventType","componentId","entityId","txHash","txMetadata","$1ad70495fc551421$export$1d8617334c1af8c7","$1ad70495fc551421$var$createBaseECSStreamBlockBundleRequest","blockTimestamp","transactionsConfirmed","ecsEvents","ecsEventsIncludeTxMetadata","$1ad70495fc551421$export$7e625491fff42c57","$1ad70495fc551421$var$createBaseECSStreamBlockBundleReply","$1ad70495fc551421$export$b44eaf89b4c162c7","$1ad70495fc551421$export$aeb99d3bbc39faf1","subscribeToStreamLatest","$1ad70495fc551421$var$globalThis","$cc47765940f1462b$exports","$cc47765940f1462b$var$__exportStar","$d743db72fe7853d6$var$$38062e4c1898990e$export$2c0899207873888e","NetworkEvents","$d743db72fe7853d6$var$$38062e4c1898990e$export$5efc7f85e064b5a0","SystemCall","$d743db72fe7853d6$var$$38062e4c1898990e$export$a1f3bee22c35e329","NetworkComponentUpdate","$d743db72fe7853d6$var$$38062e4c1898990e$export$20842336fd38cf1b","ContractSchemaValue","$d743db72fe7853d6$var$$38062e4c1898990e$export$306d21f7c1c30f07","BOOL","INT8","INT16","INT32","INT64","INT128","INT256","INT","UINT8","UINT16","UINT32","UINT64","UINT128","UINT256","BYTES","STRING","ADDRESS","BYTES4","BOOL_ARRAY","INT8_ARRAY","INT16_ARRAY","INT32_ARRAY","INT64_ARRAY","INT128_ARRAY","INT256_ARRAY","INT_ARRAY","UINT8_ARRAY","UINT16_ARRAY","UINT32_ARRAY","UINT64_ARRAY","UINT128_ARRAY","UINT256_ARRAY","BYTES_ARRAY","STRING_ARRAY","$d743db72fe7853d6$var$$38062e4c1898990e$export$a501dcbfe48e972a","$d743db72fe7853d6$var$$37e051c17dc8d57f$var$indexedDB","indexedDB","$d743db72fe7853d6$var$$37e051c17dc8d57f$var$VERSION","$d743db72fe7853d6$var$$37e051c17dc8d57f$var$initStore","db","storeId","objectStoreNames","contains","createObjectStore","$d743db72fe7853d6$var$$37e051c17dc8d57f$var$initDb","dbId","stores","idb","onupgradeneeded","store","onsuccess","$d743db72fe7853d6$var$$37e051c17dc8d57f$export$4008f5b66f9e0b3c","openStore","objectStore","getAllKeys","stringKeys","ignoreResult","put","keyIterator","valueIterator","$d743db72fe7853d6$var$$8144b28c31f064c5$export$7a07edb15ce80ac4","keccak256","$d743db72fe7853d6$var$$8144b28c31f064c5$export$fa1c3b405b77c990","entityID","$d743db72fe7853d6$var$$8144b28c31f064c5$export$df44822d7678761c","componentID","$d743db72fe7853d6$var$$db702fc0ccca3627$export$1c9f709888824e05","$d743db72fe7853d6$var$$b339bcc849b9a058$export$1c9f709888824e05","$d743db72fe7853d6$var$$d3790d4c408d3ccd$var$debug","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$36d5eab18646e34","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$98f1a20e3cf58471","componentToIndex","entities","entityToIndex","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$c452b55e9ad3f100","cacheStore","component","entity","normalizedEntity","componentIndex","entityIndex","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$e8bfd1501bf919b","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$10d53f278b56c1f9","lastEventInTx","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$f289377cad8eff8e","sortedStores","updateEvent","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$5f30852bcfcd8fd1","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$85ffbe50b201dba7","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$3757ed05bed63822","$d743db72fe7853d6$var$$d3790d4c408d3ccd$export$7a03e216dc636754","$d743db72fe7853d6$var$$eddd38fbb391f1b1$export$8fcbafd86baafc46","wssProvider","$d743db72fe7853d6$var$$eddd38fbb391f1b1$export$457bade2606c5b8","requireMinimumBlockNumber","blockPromise","rawBlock","$d743db72fe7853d6$var$$eddd38fbb391f1b1$export$b9fcc8145a518db4","contracts","getLogPromise","_blockNumber","getLogPromises","logPromises","topicsForContract","find","flat","call1","$d743db72fe7853d6$var$$eddd38fbb391f1b1$export$b8a57384d8c3eb18","supportsBatchQueries","addressToContractKey","contractKey","contractEvents","contractKey1","$0abaa85c3c1ba5b7$exports","Contract","logDescription","eventKey","$d743db72fe7853d6$var$$eddd38fbb391f1b1$export$2d25b6777145d181","encodedRevertReason","defaultAbiCoder","$d743db72fe7853d6$var$$1a9f1299eda3552f$export$11bcc7ee6617871a","$d743db72fe7853d6$var$$1a9f1299eda3552f$export$cfca6d9768d0895d","$d743db72fe7853d6$var$$eaf2ef6fc5985657$export$500fbc0cd14cdbaa","jsonRpcUrl","wsRpcUrl","ws","$d743db72fe7853d6$var$$eaf2ef6fc5985657$export$cd9c3c6bf535afc9","ConnectionState","$d743db72fe7853d6$var$$eaf2ef6fc5985657$export$2fe80484dc101cea","connected","DISCONNECTED","disposers","initProviders","prevProviders","conf","newProviders","skipNetworkCheck","CONNECTED","currentProviders","keepAliveInterval","$d743db72fe7853d6$var$$13c58f8a4772d7e8$export$3b0b6c7b986ae9fe","valueType","$d743db72fe7853d6$var$$13c58f8a4772d7e8$export$f8c898e83b60faaa","valueTypes","decoded","$d743db72fe7853d6$var$$20922c2c18bed770$export$3d98eea197b73972","contractTopics","dummyContract","constants","AddressZero","contractTopic","topicsOrUndefined","$d743db72fe7853d6$var$$274bae85b9c0c4fe$var$debug","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$ba971d7104b36697","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$9a03464c96a587bc","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$34b33142e8b4b07","snapshotClient","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$5240cd1ce19f1856","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$ce399b8d5ba8fffb","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$bccf13dcb08b8a08","numChunks","setPercentage","pruneOptions","playerAddress","hashedComponentId","responseChunk","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$e9e0edde7635eb31","rawValue","stateEntitiesHex","stateComponentsHex","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$72defde817ebbb8a","streamServiceUrl","transformWorldEvents","includeSystemCalls","systemCalls","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$f0cfc66523d7e63","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$43c05b8ea935797c","blockNumber$","fetchWorldEvents","fetchSystemCallsFromEvents","lastSyncedBlockNumber","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$ec9bf642fda28205","fromBlockNumber","toBlockNumber","interval","numSteps","steps","chunkEvents","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$4543c3155dec6c4b","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$731f08e8f7451db","worldConfig","decoders","world","componentAddress","getComponent","getSchema","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$7c48e9fa31b7244f","World","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$d0aba65dea8bc8f1","contractsEvents","rawComponentId","ecsEvent","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$6c8acbfd41d9fcaf","convertedEcsEvents","$d743db72fe7853d6$var$$274bae85b9c0c4fe$var$groupByTxHash","$d743db72fe7853d6$var$$274bae85b9c0c4fe$var$parseSystemCallTransactionFromStreamNetworkComponentUpdate","transactionHashToEvents","updates","$d743db72fe7853d6$var$$274bae85b9c0c4fe$export$6d1d814b8519f85","fetchBlock","clearBlock","$d743db72fe7853d6$var$$274bae85b9c0c4fe$var$createBlockCache","fetchSystemCallData","$d743db72fe7853d6$var$$274bae85b9c0c4fe$var$createFetchSystemCallData","txData","$d743db72fe7853d6$var$$e843cd491b0a5396$export$a9fed1203c093fcc","blockNumberEvent$","initialSync$","initialSync","blockNr","initialBlockNumber","blocksToSync","currProviders","$d743db72fe7853d6$var$$703df1239256a806$export$8c8eabe8748e941e","SyncState","$d743db72fe7853d6$var$$703df1239256a806$export$190ba0b68cfb3678","$d743db72fe7853d6$var$$33cd1094447e870f$var$debug","$d743db72fe7853d6$var$$33cd1094447e870f$export$476dfc2401bc286b","InputType","$d743db72fe7853d6$var$$33cd1094447e870f$export$f224119667127469","Ack","$d743db72fe7853d6$var$$33cd1094447e870f$export$4e85ff91a10f4ce4","output$","syncState","percentage","setLoadingState","loadingState","newLoadingState","update","computedConfig","Config","snapshotServiceUrl","worldContract","providerOptions","fetchSystemCalls","disableCache","cacheAgeThreshold","cacheInterval","indexDbCache","INITIAL","passLiveEventsToOutput","latestEventRPC$","latestEvent$","initialLiveEvents","streamStartBlockNumberPromise","cacheBlockNumber","snapshotBlockNumber","initialState","syncFromSnapshot","snapshotNumChunks","streamStartBlockNumber","gapStateEvents","LIVE","throttledOutput$"],"version":3,"file":"Sync.worker.3ad2d702.6a122075.js.map"}